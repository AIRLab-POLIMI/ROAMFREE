double tmp0 = qos(1+_OFF);
double tmp1 = qos(3+_OFF);
double tmp2 = x0(6+_OFF);
double tmp3 = x1(4+_OFF);
double tmp4 = qos(2+_OFF);
double tmp5 = qos(4+_OFF);
double tmp6 = 1.*tmp4;
double tmp7 = 0. + tmp6;
double tmp8 = -0.01*tmp1;
double tmp9 = 0. + tmp8;
double tmp10 = -0.01*tmp4;
double tmp11 = 0. + tmp10;
double tmp12 = 1.*tmp1;
double tmp13 = 0. + tmp12;
double tmp14 = x0(7+_OFF);
double tmp15 = 1.*tmp0;
double tmp16 = 0. + tmp15;
double tmp17 = 0.01*tmp5;
double tmp18 = 0. + tmp17;
double tmp19 = 0.01*tmp0;
double tmp20 = 0. + tmp19;
double tmp21 = 1.*tmp5;
double tmp22 = 0. + tmp21;
double tmp23 = x0(4+_OFF);
double tmp24 = x1(5+_OFF);
double tmp25 = x1(6+_OFF);
double tmp26 = x1(7+_OFF);
double tmp27 = 4*tmp13*tmp18;
double tmp28 = 4*tmp9*tmp22;
double tmp29 = tmp27 + tmp28;
double tmp30 = std::pow(tmp24,2);
double tmp31 = std::pow(tmp25,2);
double tmp32 = tmp3*tmp24;
double tmp33 = tmp25*tmp26;
double tmp34 = tmp32 + tmp33;
double tmp35 = -2*tmp30;
double tmp36 = -2*tmp31;
double tmp37 = 1 + tmp35 + tmp36;
double tmp38 = 2*tmp30;
double tmp39 = 2*tmp31;
double tmp40 = -1 + tmp38 + tmp39;
double tmp41 = 1/Dt01;
double tmp42 = 0.01*tmp4;
double tmp43 = 0. + tmp42;
double tmp44 = -0.01*tmp5;
double tmp45 = 0. + tmp44;
double tmp46 = x0(5+_OFF);
double tmp47 = -(tmp22*tmp25);
double tmp48 = tmp13*tmp26;
double tmp49 = tmp47 + tmp48;
double tmp50 = tmp13*tmp25;
double tmp51 = tmp22*tmp26;
double tmp52 = tmp50 + tmp51;
double tmp53 = 4*tmp20*tmp13;
double tmp54 = 4*tmp43*tmp22;
double tmp55 = tmp53 + tmp54;
double tmp56 = tmp3*tmp25;
double tmp57 = -(tmp24*tmp26);
double tmp58 = tmp56 + tmp57;
double tmp59 = tmp22*tmp37;
double tmp60 = 2*tmp13*tmp34;
double tmp61 = tmp59 + tmp60;
double tmp62 = tmp13*tmp40;
double tmp63 = 2*tmp22*tmp34;
double tmp64 = tmp62 + tmp63;
double tmp65 = 0.01*tmp1;
double tmp66 = 0. + tmp65;
double tmp67 = tmp20*tmp26;
double tmp68 = 4*tmp11*tmp13;
double tmp69 = 4*tmp20*tmp22;
double tmp70 = tmp68 + tmp69;
double tmp71 = 2*tmp20*tmp34;
double tmp72 = 2*tmp9*tmp13*tmp14*tmp3;
double tmp73 = -2*tmp9*tmp13*tmp2*tmp24;
double tmp74 = -2*tmp9*tmp13*tmp23*tmp26;
double tmp75 = tmp14*tmp3;
double tmp76 = -(tmp2*tmp24);
double tmp77 = tmp46*tmp25;
double tmp78 = -(tmp23*tmp26);
double tmp79 = tmp75 + tmp76 + tmp77 + tmp78;
double tmp80 = tmp46*tmp3;
double tmp81 = -(tmp23*tmp24);
double tmp82 = -(tmp14*tmp25);
double tmp83 = tmp2*tmp26;
double tmp84 = tmp80 + tmp81 + tmp82 + tmp83;
double tmp85 = tmp20*tmp40;
double tmp86 = -(tmp3*tmp25);
double tmp87 = tmp24*tmp26;
double tmp88 = tmp86 + tmp87;
double tmp89 = tmp2*tmp3;
double tmp90 = tmp14*tmp24;
double tmp91 = -(tmp23*tmp25);
double tmp92 = -(tmp46*tmp26);
double tmp93 = tmp89 + tmp90 + tmp91 + tmp92;
double tmp94 = tmp16*tmp79;
double tmp95 = tmp13*tmp84;
double tmp96 = tmp94 + tmp95;
double tmp97 = tmp22*tmp40;
double tmp98 = 2*tmp7*tmp58;
double tmp99 = tmp97 + tmp98;
double tmp100 = tmp7*tmp40;
double tmp101 = 2*tmp22*tmp88;
double tmp102 = tmp100 + tmp101;
double tmp103 = -(tmp2*tmp3);
double tmp104 = -(tmp14*tmp24);
double tmp105 = tmp23*tmp25;
double tmp106 = tmp46*tmp26;
double tmp107 = tmp103 + tmp104 + tmp105 + tmp106;
double tmp108 = tmp18*tmp84;
double tmp109 = 4*tmp30;
double tmp110 = 4*tmp31;
double tmp111 = -2 + tmp109 + tmp110;
double tmp112 = tmp20*tmp84;
double tmp113 = tmp7*tmp107;
double tmp114 = tmp113 + tmp95;
double tmp115 = tmp22*tmp3*tmp24;
double tmp116 = -(tmp16*tmp3*tmp25);
double tmp117 = tmp16*tmp24*tmp26;
double tmp118 = tmp22*tmp25*tmp26;
double tmp119 = tmp115 + tmp116 + tmp117 + tmp118;
double tmp120 = tmp22*tmp58;
double tmp121 = tmp16*tmp34;
double tmp122 = tmp120 + tmp121;
double tmp123 = -2*tmp20*tmp13*tmp2*tmp3;
double tmp124 = -2*tmp11*tmp22*tmp2*tmp3;
double tmp125 = -2*tmp20*tmp13*tmp14*tmp24;
double tmp126 = -2*tmp11*tmp22*tmp14*tmp24;
double tmp127 = 2*tmp20*tmp13*tmp23*tmp25;
double tmp128 = 2*tmp11*tmp22*tmp23*tmp25;
double tmp129 = tmp11*tmp84;
J(1+_OFF,1+_OFF) = 2*tmp41*(-2*tmp16*tmp9*tmp2*tmp3 + tmp123 - 2*tmp7*tmp18*tmp2*tmp3 + tmp124 - 2*tmp7*tmp9*tmp14*tmp3 + 2*tmp11*tmp13*tmp14*tmp3 + 2*tmp16*tmp18*tmp14*tmp3 - 2*tmp20*tmp22*tmp14*tmp3 - 4*tmp13*tmp18*tmp23*tmp24 - 4*tmp9*tmp22*tmp23*tmp24 + 2*tmp7*tmp9*tmp2*tmp24 - 2*tmp11*tmp13*tmp2*tmp24 - 2*tmp16*tmp18*tmp2*tmp24 + 2*tmp20*tmp22*tmp2*tmp24 - 2*tmp16*tmp9*tmp14*tmp24 + tmp125 - 2*tmp7*tmp18*tmp14*tmp24 + tmp126 + 2*tmp16*tmp9*tmp23*tmp25 + tmp127 + 2*tmp7*tmp18*tmp23*tmp25 + tmp128 - 4*tmp13*tmp18*tmp14*tmp25 - 4*tmp9*tmp22*tmp14*tmp25 + 2*tmp7*tmp9*tmp23*tmp26 - 2*tmp11*tmp13*tmp23*tmp26 - 2*tmp16*tmp18*tmp23*tmp26 + 2*tmp20*tmp22*tmp23*tmp26 + 4*tmp13*tmp18*tmp2*tmp26 + 4*tmp9*tmp22*tmp2*tmp26 + tmp46*(tmp29*tmp3 + 2*tmp16*(tmp18*tmp25 + tmp9*tmp26) + 2*tmp20*tmp49 + 2*tmp7*(-(tmp9*tmp25) + tmp18*tmp26) + 2*tmp11*tmp52) + Dt01*earthrate*(tmp29*tmp58 + tmp16*(tmp18*tmp40 + 2*tmp9*tmp34) + tmp20*tmp61 + tmp7*(tmp9*tmp37 + 2*tmp18*tmp34) + tmp11*tmp64));
J(1+_OFF,2+_OFF) = 2*tmp41*(-2*tmp16*tmp43*tmp2*tmp3 - 2*tmp20*tmp7*tmp2*tmp3 - 2*tmp13*tmp45*tmp2*tmp3 - 2*tmp9*tmp22*tmp2*tmp3 + 2*tmp20*tmp16*tmp14*tmp3 - 2*tmp43*tmp7*tmp14*tmp3 + tmp72 - 2*tmp45*tmp22*tmp14*tmp3 - 4*tmp20*tmp13*tmp23*tmp24 - 4*tmp43*tmp22*tmp23*tmp24 - 2*tmp20*tmp16*tmp2*tmp24 + 2*tmp43*tmp7*tmp2*tmp24 + tmp73 + 2*tmp45*tmp22*tmp2*tmp24 - 2*tmp16*tmp43*tmp14*tmp24 - 2*tmp20*tmp7*tmp14*tmp24 - 2*tmp13*tmp45*tmp14*tmp24 - 2*tmp9*tmp22*tmp14*tmp24 + 2*tmp16*tmp43*tmp23*tmp25 + 2*tmp20*tmp7*tmp23*tmp25 + 2*tmp13*tmp45*tmp23*tmp25 + 2*tmp9*tmp22*tmp23*tmp25 - 4*tmp20*tmp13*tmp14*tmp25 - 4*tmp43*tmp22*tmp14*tmp25 - 2*tmp20*tmp16*tmp23*tmp26 + 2*tmp43*tmp7*tmp23*tmp26 + tmp74 + 2*tmp45*tmp22*tmp23*tmp26 + 4*tmp20*tmp13*tmp2*tmp26 + 4*tmp43*tmp22*tmp2*tmp26 + tmp46*(tmp55*tmp3 + 2*tmp7*(-(tmp43*tmp25) + tmp67) + 2*tmp16*(tmp20*tmp25 + tmp43*tmp26) + 2*tmp45*tmp49 + 2*tmp9*tmp52) + Dt01*earthrate*(tmp55*tmp58 + tmp7*(tmp43*tmp37 + tmp71) + tmp16*(tmp85 + 2*tmp43*tmp34) + tmp45*tmp61 + tmp9*tmp64));
J(1+_OFF,3+_OFF) = 2*tmp41*(-2*tmp20*tmp16*tmp2*tmp3 - 2*tmp11*tmp7*tmp2*tmp3 - 2*tmp66*tmp13*tmp2*tmp3 - 2*tmp45*tmp22*tmp2*tmp3 + 2*tmp16*tmp11*tmp14*tmp3 - 2*tmp20*tmp7*tmp14*tmp3 + 2*tmp13*tmp45*tmp14*tmp3 - 2*tmp66*tmp22*tmp14*tmp3 - 4*tmp11*tmp13*tmp23*tmp24 - 4*tmp20*tmp22*tmp23*tmp24 - 2*tmp16*tmp11*tmp2*tmp24 + 2*tmp20*tmp7*tmp2*tmp24 - 2*tmp13*tmp45*tmp2*tmp24 + 2*tmp66*tmp22*tmp2*tmp24 - 2*tmp20*tmp16*tmp14*tmp24 - 2*tmp11*tmp7*tmp14*tmp24 - 2*tmp66*tmp13*tmp14*tmp24 - 2*tmp45*tmp22*tmp14*tmp24 + 2*tmp20*tmp16*tmp23*tmp25 + 2*tmp11*tmp7*tmp23*tmp25 + 2*tmp66*tmp13*tmp23*tmp25 + 2*tmp45*tmp22*tmp23*tmp25 - 4*tmp11*tmp13*tmp14*tmp25 - 4*tmp20*tmp22*tmp14*tmp25 - 2*tmp16*tmp11*tmp23*tmp26 + 2*tmp20*tmp7*tmp23*tmp26 - 2*tmp13*tmp45*tmp23*tmp26 + 2*tmp66*tmp22*tmp23*tmp26 + 4*tmp11*tmp13*tmp2*tmp26 + 4*tmp20*tmp22*tmp2*tmp26 + tmp46*(tmp70*tmp3 + 2*tmp16*(tmp11*tmp25 + tmp67) + 2*tmp7*(-(tmp20*tmp25) + tmp11*tmp26) + 2*tmp66*tmp49 + 2*tmp45*tmp52) + Dt01*earthrate*(tmp70*tmp58 + tmp16*(tmp11*tmp40 + tmp71) + tmp7*(tmp20*tmp37 + 2*tmp11*tmp34) + tmp66*tmp61 + tmp45*tmp64));
J(2+_OFF,1+_OFF) = -2*tmp41*(-2*tmp16*tmp9*tmp46*tmp3 - 2*tmp11*tmp22*tmp46*tmp3 - 4*tmp9*tmp22*tmp2*tmp3 + tmp72 + 2*tmp18*tmp22*tmp14*tmp3 + 2*tmp16*tmp9*tmp23*tmp24 + 2*tmp11*tmp22*tmp23*tmp24 + tmp73 - 2*tmp18*tmp22*tmp2*tmp24 - 4*tmp9*tmp22*tmp14*tmp24 + 4*tmp9*tmp22*tmp23*tmp25 + 2*tmp9*tmp13*tmp46*tmp25 + 2*tmp18*tmp22*tmp46*tmp25 + 2*tmp16*tmp9*tmp14*tmp25 + 2*tmp11*tmp22*tmp14*tmp25 + tmp74 - 2*tmp18*tmp22*tmp23*tmp26 + 4*tmp9*tmp22*tmp46*tmp26 - 2*tmp16*tmp9*tmp2*tmp26 - 2*tmp11*tmp22*tmp2*tmp26 - 4*tmp20*tmp7*tmp93 + 2*tmp20*tmp96 + 2*tmp7*(tmp11*tmp79 + tmp108) + Dt01*earthrate*((4*tmp20*tmp7 + tmp28)*tmp34 + tmp13*(tmp9*tmp40 + 2*tmp20*tmp58) + tmp18*tmp99 + tmp16*(tmp85 + 2*tmp9*tmp88) + tmp11*tmp102));
J(2+_OFF,2+_OFF) = -2*tmp41*(-2*tmp16*tmp43*tmp46*tmp3 - 2*tmp9*tmp22*tmp46*tmp3 - 4*tmp43*tmp22*tmp2*tmp3 + 2*tmp43*tmp13*tmp14*tmp3 + 2*tmp20*tmp22*tmp14*tmp3 + 2*tmp16*tmp43*tmp23*tmp24 + 2*tmp9*tmp22*tmp23*tmp24 - 2*tmp43*tmp13*tmp2*tmp24 - 2*tmp20*tmp22*tmp2*tmp24 - 4*tmp43*tmp22*tmp14*tmp24 + 4*tmp43*tmp22*tmp23*tmp25 + 2*tmp43*tmp13*tmp46*tmp25 + 2*tmp20*tmp22*tmp46*tmp25 + 2*tmp16*tmp43*tmp14*tmp25 + 2*tmp9*tmp22*tmp14*tmp25 - 2*tmp43*tmp13*tmp23*tmp26 - 2*tmp20*tmp22*tmp23*tmp26 + 4*tmp43*tmp22*tmp46*tmp26 - 2*tmp16*tmp43*tmp2*tmp26 - 2*tmp9*tmp22*tmp2*tmp26 - 4*tmp7*tmp45*tmp93 + 2*tmp7*(tmp9*tmp79 + tmp112) + 2*tmp45*tmp96 + Dt01*earthrate*((4*tmp7*tmp45 + tmp54)*tmp34 + tmp20*tmp99 + tmp13*(tmp43*tmp40 + 2*tmp45*tmp58) + tmp16*(tmp45*tmp40 + 2*tmp43*tmp88) + tmp9*tmp102));
J(2+_OFF,3+_OFF) = -2*tmp41*(-2*tmp20*tmp16*tmp46*tmp3 - 2*tmp45*tmp22*tmp46*tmp3 - 4*tmp20*tmp22*tmp2*tmp3 + 2*tmp20*tmp13*tmp14*tmp3 + 2*tmp11*tmp22*tmp14*tmp3 + 2*tmp20*tmp16*tmp23*tmp24 + 2*tmp45*tmp22*tmp23*tmp24 - 2*tmp20*tmp13*tmp2*tmp24 - 2*tmp11*tmp22*tmp2*tmp24 - 4*tmp20*tmp22*tmp14*tmp24 + 4*tmp20*tmp22*tmp23*tmp25 + 2*tmp20*tmp13*tmp46*tmp25 + 2*tmp11*tmp22*tmp46*tmp25 + 2*tmp20*tmp16*tmp14*tmp25 + 2*tmp45*tmp22*tmp14*tmp25 - 2*tmp20*tmp13*tmp23*tmp26 - 2*tmp11*tmp22*tmp23*tmp26 + 4*tmp20*tmp22*tmp46*tmp26 - 2*tmp20*tmp16*tmp2*tmp26 - 2*tmp45*tmp22*tmp2*tmp26 - 4*tmp7*tmp66*tmp93 + 2*tmp7*(tmp45*tmp79 + tmp129) + 2*tmp66*tmp96 + Dt01*earthrate*((4*tmp7*tmp66 + tmp69)*tmp34 + tmp11*tmp99 + tmp13*(tmp85 + 2*tmp66*tmp58) + tmp16*(tmp66*tmp40 + 2*tmp20*tmp88) + tmp45*tmp102));
J(3+_OFF,1+_OFF) = 2*tmp41*(-2*tmp9*tmp13*tmp2*tmp3 - 2*tmp18*tmp22*tmp2*tmp3 + 4*tmp13*tmp18*tmp14*tmp3 - 4*tmp13*tmp18*tmp2*tmp24 - 2*tmp9*tmp13*tmp14*tmp24 - 2*tmp18*tmp22*tmp14*tmp24 + 2*tmp9*tmp13*tmp23*tmp25 + 2*tmp18*tmp22*tmp23*tmp25 + 4*tmp13*tmp18*tmp46*tmp25 - 4*tmp13*tmp18*tmp23*tmp26 + 2*tmp9*tmp13*tmp46*tmp26 + 2*tmp18*tmp22*tmp46*tmp26 + 4*tmp20*tmp7*tmp79 - 2*tmp7*tmp9*tmp84 - 2*tmp20*tmp22*tmp84 - 2*tmp11*tmp114 - 2*tmp16*(tmp20*tmp107 + tmp108)) + earthrate*(2*tmp20*tmp7*tmp111 + 2*tmp13*tmp18*tmp111 + 4*tmp13*(tmp9*tmp3*tmp24 - tmp11*tmp3*tmp25 + tmp11*tmp24*tmp26 + tmp9*tmp25*tmp26) + 4*tmp18*tmp119 - 4*tmp20*tmp122 - 4*tmp7*(tmp9*tmp58 + tmp11*tmp34));
J(3+_OFF,2+_OFF) = 2*tmp41*(-2*tmp43*tmp13*tmp2*tmp3 - 2*tmp20*tmp22*tmp2*tmp3 + 4*tmp20*tmp13*tmp14*tmp3 - 4*tmp20*tmp13*tmp2*tmp24 - 2*tmp43*tmp13*tmp14*tmp24 - 2*tmp20*tmp22*tmp14*tmp24 + 2*tmp43*tmp13*tmp23*tmp25 + 2*tmp20*tmp22*tmp23*tmp25 + 4*tmp20*tmp13*tmp46*tmp25 - 4*tmp20*tmp13*tmp23*tmp26 + 2*tmp43*tmp13*tmp46*tmp26 + 2*tmp20*tmp22*tmp46*tmp26 + 4*tmp7*tmp45*tmp79 - 2*tmp43*tmp7*tmp84 - 2*tmp45*tmp22*tmp84 - 2*tmp16*(tmp45*tmp107 + tmp112) - 2*tmp9*tmp114) + earthrate*(2*tmp20*tmp13*tmp111 + 2*tmp7*tmp45*tmp111 + 4*tmp13*(tmp43*tmp3*tmp24 - tmp9*tmp3*tmp25 + tmp9*tmp24*tmp26 + tmp43*tmp25*tmp26) + 4*tmp20*tmp119 - 4*tmp45*tmp122 - 4*tmp7*(tmp43*tmp58 + tmp9*tmp34));
J(3+_OFF,3+_OFF) = 2*tmp41*(tmp123 + tmp124 + 4*tmp11*tmp13*tmp14*tmp3 - 4*tmp11*tmp13*tmp2*tmp24 + tmp125 + tmp126 + tmp127 + tmp128 + 4*tmp11*tmp13*tmp46*tmp25 - 4*tmp11*tmp13*tmp23*tmp26 + 2*tmp20*tmp13*tmp46*tmp26 + 2*tmp11*tmp22*tmp46*tmp26 + 4*tmp7*tmp66*tmp79 - 2*tmp20*tmp7*tmp84 - 2*tmp66*tmp22*tmp84 - 2*tmp16*(tmp66*tmp107 + tmp129) - 2*tmp45*tmp114) + earthrate*(2*tmp7*tmp66*tmp111 + 2*tmp11*tmp13*tmp111 + 4*tmp13*(tmp20*tmp3*tmp24 - tmp45*tmp3*tmp25 + tmp45*tmp24*tmp26 + tmp20*tmp25*tmp26) + 4*tmp11*tmp119 - 4*tmp66*tmp122 - 4*tmp7*(tmp20*tmp58 + tmp45*tmp34));
