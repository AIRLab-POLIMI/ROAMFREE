double tmp0 = qos(2+_OFF);
double tmp1 = qos(3+_OFF);
double tmp2 = qos(1+_OFF);
double tmp3 = qos(4+_OFF);
double tmp4 = x1(6+_OFF);
double tmp5 = x1(5+_OFF);
double tmp6 = x1(4+_OFF);
double tmp7 = x1(7+_OFF);
double tmp8 = x2(4+_OFF);
double tmp9 = so(2+_OFF);
double tmp10 = so(1+_OFF);
double tmp11 = x2(5+_OFF);
double tmp12 = x2(6+_OFF);
double tmp13 = x2(7+_OFF);
double tmp14 = 1.*tmp2;
double tmp15 = 0. + tmp14;
double tmp16 = -0.01*tmp1;
double tmp17 = 0. + tmp16;
double tmp18 = 0.01*tmp2;
double tmp19 = 0. + tmp18;
double tmp20 = 1.*tmp1;
double tmp21 = 0. + tmp20;
double tmp22 = 1.*tmp0;
double tmp23 = 0. + tmp22;
double tmp24 = 0.01*tmp3;
double tmp25 = 0. + tmp24;
double tmp26 = -0.01*tmp0;
double tmp27 = 0. + tmp26;
double tmp28 = 1.*tmp3;
double tmp29 = 0. + tmp28;
double tmp30 = x0(2+_OFF);
double tmp31 = x1(2+_OFF);
double tmp32 = x0(3+_OFF);
double tmp33 = x1(3+_OFF);
double tmp34 = -tmp31;
double tmp35 = tmp30 + tmp34;
double tmp36 = std::pow(tmp5,2);
double tmp37 = x0(1+_OFF);
double tmp38 = x1(1+_OFF);
double tmp39 = -2*tmp32;
double tmp40 = 2*tmp33;
double tmp41 = tmp39 + tmp40;
double tmp42 = so(3+_OFF);
double tmp43 = -tmp38;
double tmp44 = -tmp37;
double tmp45 = tmp44 + tmp38;
double tmp46 = std::pow(tmp4,2);
double tmp47 = -tmp33;
double tmp48 = tmp32 + tmp47;
double tmp49 = std::pow(tmp7,2);
double tmp50 = -(tmp7*tmp8);
double tmp51 = tmp4*tmp11;
double tmp52 = -(tmp5*tmp12);
double tmp53 = tmp6*tmp13;
double tmp54 = tmp50 + tmp51 + tmp52 + tmp53;
double tmp55 = std::pow(tmp11,2);
double tmp56 = 2*tmp55;
double tmp57 = std::pow(tmp12,2);
double tmp58 = 2*tmp57;
double tmp59 = -1 + tmp56 + tmp58;
double tmp60 = 1/Dt01;
double tmp61 = 1/Dt12;
double tmp62 = 2*tmp36;
double tmp63 = 2*tmp46;
double tmp64 = -1 + tmp62 + tmp63;
double tmp65 = tmp48*tmp64;
double tmp66 = tmp6*tmp4;
double tmp67 = tmp5*tmp7;
double tmp68 = tmp66 + tmp67;
double tmp69 = 2*tmp45*tmp68;
double tmp70 = tmp6*tmp5;
double tmp71 = -(tmp4*tmp7);
double tmp72 = tmp70 + tmp71;
double tmp73 = 2*tmp35*tmp72;
double tmp74 = tmp65 + tmp69 + tmp73;
double tmp75 = Dt12*tmp74;
double tmp76 = -2*Dt01*tmp9*tmp5*tmp8;
double tmp77 = 2*Dt01*tmp10*tmp4*tmp8;
double tmp78 = 2*Dt01*tmp9*tmp6*tmp11;
double tmp79 = 2*Dt01*tmp10*tmp7*tmp11;
double tmp80 = -2*Dt01*Dt12*earthrate*tmp10*tmp8*tmp11;
double tmp81 = -2*Dt01*tmp10*tmp6*tmp12;
double tmp82 = 2*Dt01*tmp9*tmp7*tmp12;
double tmp83 = -2*Dt01*Dt12*earthrate*tmp9*tmp8*tmp12;
double tmp84 = -2*Dt01*tmp10*tmp5*tmp13;
double tmp85 = -2*Dt01*tmp9*tmp4*tmp13;
double tmp86 = 2*Dt01*Dt12*earthrate*tmp9*tmp11*tmp13;
double tmp87 = -2*Dt01*Dt12*earthrate*tmp10*tmp12*tmp13;
double tmp88 = tmp75 + tmp76 + tmp77 + tmp78 + tmp79 + tmp80 + tmp81 + tmp82 + tmp83 + tmp84 + tmp85 + tmp86 + tmp87;
double tmp89 = 0.01*tmp0;
double tmp90 = 0. + tmp89;
double tmp91 = -0.01*tmp3;
double tmp92 = 0. + tmp91;
double tmp93 = -tmp30;
double tmp94 = tmp41*tmp6*tmp5;
double tmp95 = 2*tmp35*tmp36;
double tmp96 = -2*tmp37;
double tmp97 = 2*tmp38;
double tmp98 = tmp96 + tmp97;
double tmp99 = tmp98*tmp5*tmp4;
double tmp100 = tmp37 + tmp43;
double tmp101 = 2*tmp100*tmp6*tmp7;
double tmp102 = tmp41*tmp4*tmp7;
double tmp103 = 2*tmp35*tmp49;
double tmp104 = tmp93 + tmp31 + tmp94 + tmp95 + tmp99 + tmp101 + tmp102 + tmp103;
double tmp105 = Dt12*tmp104;
double tmp106 = tmp10*tmp54;
double tmp107 = tmp5*tmp8;
double tmp108 = -(tmp6*tmp11);
double tmp109 = -(tmp7*tmp12);
double tmp110 = tmp4*tmp13;
double tmp111 = tmp107 + tmp108 + tmp109 + tmp110;
double tmp112 = tmp42*tmp111;
double tmp113 = tmp106 + tmp112;
double tmp114 = 2*Dt01*tmp113;
double tmp115 = tmp10*tmp59;
double tmp116 = -(tmp8*tmp12);
double tmp117 = tmp11*tmp13;
double tmp118 = tmp116 + tmp117;
double tmp119 = 2*tmp42*tmp118;
double tmp120 = tmp115 + tmp119;
double tmp121 = -(Dt01*Dt12*earthrate*tmp120);
double tmp122 = tmp105 + tmp114 + tmp121;
double tmp123 = -tmp32;
double tmp124 = tmp123 + tmp33;
double tmp125 = 2*tmp124*tmp6*tmp4;
double tmp126 = 2*tmp35*tmp5*tmp4;
double tmp127 = 2*tmp45*tmp46;
double tmp128 = 2*tmp35*tmp6*tmp7;
double tmp129 = 2*tmp48*tmp5*tmp7;
double tmp130 = 2*tmp45*tmp49;
double tmp131 = tmp37 + tmp43 + tmp125 + tmp126 + tmp127 + tmp128 + tmp129 + tmp130;
double tmp132 = Dt12*tmp131;
double tmp133 = tmp9*tmp54;
double tmp134 = tmp4*tmp8;
double tmp135 = tmp7*tmp11;
double tmp136 = -(tmp6*tmp12);
double tmp137 = -(tmp5*tmp13);
double tmp138 = tmp134 + tmp135 + tmp136 + tmp137;
double tmp139 = tmp42*tmp138;
double tmp140 = tmp133 + tmp139;
double tmp141 = 2*Dt01*tmp140;
double tmp142 = tmp9*tmp59;
double tmp143 = tmp8*tmp11;
double tmp144 = tmp12*tmp13;
double tmp145 = tmp143 + tmp144;
double tmp146 = 2*tmp42*tmp145;
double tmp147 = tmp142 + tmp146;
double tmp148 = -(Dt01*Dt12*earthrate*tmp147);
double tmp149 = tmp132 + tmp141 + tmp148;
double tmp150 = tmp21*tmp92;
double tmp151 = tmp19*tmp15;
double tmp152 = 0.01*tmp1;
double tmp153 = 0. + tmp152;
double tmp154 = tmp27*tmp23;
double tmp155 = tmp17*tmp21;
double tmp156 = -4*tmp17*tmp29;
double tmp157 = tmp19*tmp21;
double tmp158 = tmp23*tmp25;
double tmp159 = -4*tmp90*tmp29;
double tmp160 = tmp19*tmp23;
double tmp161 = tmp27*tmp29;
double tmp162 = -4*tmp19*tmp29;
double tmp163 = tmp153*tmp21;
double tmp164 = -(tmp92*tmp29);
double tmp165 = -4*tmp19*tmp23;
double tmp166 = -4*tmp21*tmp25;
double tmp167 = tmp23*tmp17;
double tmp168 = tmp27*tmp21;
double tmp169 = tmp15*tmp25;
double tmp170 = tmp19*tmp29;
double tmp171 = -4*tmp19*tmp21;
double tmp172 = -4*tmp23*tmp92;
double tmp173 = tmp15*tmp92;
double tmp174 = -(tmp19*tmp29);
double tmp175 = tmp92*tmp29;
double tmp176 = -4*tmp23*tmp153;
double tmp177 = -4*tmp27*tmp21;
double tmp178 = tmp15*tmp153;
double tmp179 = tmp23*tmp92;
double tmp180 = -(tmp27*tmp29);
double tmp181 = tmp15*tmp27;
J(1+_OFF,1+_OFF) = tmp60*tmp61*(-2*(-(tmp23*tmp17) + tmp168 + tmp169 + tmp174)*tmp88 + 2*(tmp15*tmp17 + tmp157 + tmp158 + tmp161)*tmp122 - (tmp166 + tmp156)*tmp149);
J(1+_OFF,2+_OFF) = tmp60*tmp61*(-2*(tmp151 - tmp90*tmp23 + tmp155 + tmp164)*tmp88 + 2*(tmp15*tmp90 + tmp160 + tmp150 + tmp17*tmp29)*tmp122 - (tmp171 + tmp159)*tmp149);
J(1+_OFF,3+_OFF) = tmp60*tmp61*(-2*(tmp181 - tmp19*tmp23 + tmp150 - tmp153*tmp29)*tmp88 + 2*(tmp151 + tmp154 + tmp163 + tmp175)*tmp122 - (tmp177 + tmp162)*tmp149);
J(2+_OFF,1+_OFF) = tmp60*tmp61*(2*(tmp151 + tmp154 + tmp155 + tmp25*tmp29)*tmp88 + (tmp165 + tmp156)*tmp122 - 2*(-(tmp15*tmp17) + tmp157 + tmp158 + tmp180)*tmp149);
J(2+_OFF,2+_OFF) = tmp60*tmp61*(2*(tmp167 + tmp90*tmp21 + tmp173 + tmp170)*tmp88 + (tmp172 + tmp159)*tmp122 - 2*(-(tmp15*tmp90) + tmp160 + tmp150 - tmp17*tmp29)*tmp149);
J(2+_OFF,3+_OFF) = tmp60*tmp61*(2*(tmp178 + tmp157 + tmp179 + tmp161)*tmp88 + (tmp176 + tmp162)*tmp122 - 2*(-(tmp19*tmp15) + tmp154 + tmp163 + tmp164)*tmp149);
J(3+_OFF,1+_OFF) = tmp60*tmp61*((tmp165 + tmp166)*tmp88 - 2*(tmp151 + tmp154 - tmp17*tmp21 - tmp25*tmp29)*tmp122 - 2*(tmp167 + tmp168 + tmp169 + tmp170)*tmp149);
J(3+_OFF,2+_OFF) = tmp60*tmp61*((tmp171 + tmp172)*tmp88 - 2*(tmp167 - tmp90*tmp21 + tmp173 + tmp174)*tmp122 - 2*(tmp151 + tmp90*tmp23 + tmp155 + tmp175)*tmp149);
J(3+_OFF,3+_OFF) = tmp60*tmp61*((tmp176 + tmp177)*tmp88 - 2*(tmp178 - tmp19*tmp21 + tmp179 + tmp180)*tmp122 - 2*(tmp181 + tmp160 + tmp150 + tmp153*tmp29)*tmp149);
