double tmp0 = qos(1+_OFF);
double tmp1 = qos(2+_OFF);
double tmp2 = qos(3+_OFF);
double tmp3 = qos(4+_OFF);
double tmp4 = x1(4+_OFF);
double tmp5 = x1(6+_OFF);
double tmp6 = x1(5+_OFF);
double tmp7 = x1(7+_OFF);
double tmp8 = 1/Dt12;
double tmp9 = x2(4+_OFF);
double tmp10 = so(2+_OFF);
double tmp11 = so(3+_OFF);
double tmp12 = x2(5+_OFF);
double tmp13 = x2(6+_OFF);
double tmp14 = x2(7+_OFF);
double tmp15 = 1.*tmp1;
double tmp16 = 0. + tmp15;
double tmp17 = -0.01*tmp2;
double tmp18 = 0. + tmp17;
double tmp19 = -0.01*tmp1;
double tmp20 = 0. + tmp19;
double tmp21 = 1.*tmp2;
double tmp22 = 0. + tmp21;
double tmp23 = 1.*tmp0;
double tmp24 = 0. + tmp23;
double tmp25 = 0.01*tmp3;
double tmp26 = 0. + tmp25;
double tmp27 = 0.01*tmp0;
double tmp28 = 0. + tmp27;
double tmp29 = 1.*tmp3;
double tmp30 = 0. + tmp29;
double tmp31 = 1/Dt01;
double tmp32 = x0(3+_OFF);
double tmp33 = x1(3+_OFF);
double tmp34 = -tmp33;
double tmp35 = tmp32 + tmp34;
double tmp36 = std::pow(tmp5,2);
double tmp37 = 2*tmp36;
double tmp38 = x0(1+_OFF);
double tmp39 = x1(1+_OFF);
double tmp40 = tmp4*tmp5;
double tmp41 = x0(2+_OFF);
double tmp42 = x1(2+_OFF);
double tmp43 = so(1+_OFF);
double tmp44 = -tmp38;
double tmp45 = tmp44 + tmp39;
double tmp46 = tmp6*tmp5;
double tmp47 = tmp4*tmp6;
double tmp48 = -tmp42;
double tmp49 = tmp41 + tmp48;
double tmp50 = std::pow(tmp6,2);
double tmp51 = 2*tmp50;
double tmp52 = std::pow(tmp7,2);
double tmp53 = 2*tmp52;
double tmp54 = -tmp41;
double tmp55 = tmp54 + tmp42;
double tmp56 = tmp4*tmp7;
double tmp57 = tmp46 + tmp56;
double tmp58 = 2*tmp55*tmp57;
double tmp59 = -(tmp6*tmp7);
double tmp60 = tmp40 + tmp59;
double tmp61 = 2*tmp35*tmp60;
double tmp62 = -tmp39;
double tmp63 = tmp38 + tmp62;
double tmp64 = -1 + tmp37 + tmp53;
double tmp65 = tmp63*tmp64;
double tmp66 = tmp58 + tmp61 + tmp65;
double tmp67 = tmp31*tmp66;
double tmp68 = -2*tmp8*tmp11*tmp5*tmp9;
double tmp69 = 2*tmp8*tmp10*tmp7*tmp9;
double tmp70 = -2*tmp8*tmp10*tmp5*tmp12;
double tmp71 = -2*tmp8*tmp11*tmp7*tmp12;
double tmp72 = 2*tmp8*tmp11*tmp4*tmp13;
double tmp73 = 2*tmp8*tmp10*tmp6*tmp13;
double tmp74 = -2*tmp8*tmp10*tmp4*tmp14;
double tmp75 = 2*tmp8*tmp11*tmp6*tmp14;
double tmp76 = tmp67 + tmp68 + tmp69 + tmp70 + tmp71 + tmp72 + tmp73 + tmp74 + tmp75;
double tmp77 = 0.01*tmp1;
double tmp78 = 0. + tmp77;
double tmp79 = -0.01*tmp3;
double tmp80 = 0. + tmp79;
double tmp81 = -1 + tmp51 + tmp37;
double tmp82 = tmp35*tmp81;
double tmp83 = tmp6*tmp7;
double tmp84 = tmp40 + tmp83;
double tmp85 = 2*tmp45*tmp84;
double tmp86 = -(tmp5*tmp7);
double tmp87 = tmp47 + tmp86;
double tmp88 = 2*tmp49*tmp87;
double tmp89 = tmp82 + tmp85 + tmp88;
double tmp90 = tmp31*tmp89;
double tmp91 = -2*tmp8*tmp10*tmp6*tmp9;
double tmp92 = 2*tmp8*tmp43*tmp5*tmp9;
double tmp93 = 2*tmp8*tmp10*tmp4*tmp12;
double tmp94 = 2*tmp8*tmp43*tmp7*tmp12;
double tmp95 = -2*tmp8*tmp43*tmp4*tmp13;
double tmp96 = 2*tmp8*tmp10*tmp7*tmp13;
double tmp97 = -2*tmp8*tmp43*tmp6*tmp14;
double tmp98 = -2*tmp8*tmp10*tmp5*tmp14;
double tmp99 = tmp90 + tmp91 + tmp92 + tmp93 + tmp94 + tmp95 + tmp96 + tmp97 + tmp98;
double tmp100 = -(tmp4*tmp7);
double tmp101 = tmp46 + tmp100;
double tmp102 = 2*tmp45*tmp101;
double tmp103 = -tmp32;
double tmp104 = tmp103 + tmp33;
double tmp105 = tmp5*tmp7;
double tmp106 = tmp47 + tmp105;
double tmp107 = 2*tmp104*tmp106;
double tmp108 = -1 + tmp51 + tmp53;
double tmp109 = tmp49*tmp108;
double tmp110 = tmp102 + tmp107 + tmp109;
double tmp111 = tmp31*tmp110;
double tmp112 = 2*tmp8*tmp11*tmp6*tmp9;
double tmp113 = -2*tmp8*tmp43*tmp7*tmp9;
double tmp114 = -2*tmp8*tmp11*tmp4*tmp12;
double tmp115 = 2*tmp8*tmp43*tmp5*tmp12;
double tmp116 = -2*tmp8*tmp43*tmp6*tmp13;
double tmp117 = -2*tmp8*tmp11*tmp7*tmp13;
double tmp118 = 2*tmp8*tmp43*tmp4*tmp14;
double tmp119 = 2*tmp8*tmp11*tmp5*tmp14;
double tmp120 = tmp111 + tmp112 + tmp113 + tmp114 + tmp115 + tmp116 + tmp117 + tmp118 + tmp119;
double tmp121 = tmp28*tmp16;
double tmp122 = 0.01*tmp2;
double tmp123 = 0. + tmp122;
double tmp124 = tmp80*tmp30;
double tmp125 = tmp28*tmp22;
double tmp126 = tmp16*tmp26;
double tmp127 = tmp28*tmp24;
double tmp128 = tmp20*tmp16;
double tmp129 = 2*tmp24*tmp20;
double tmp130 = -2*tmp18*tmp30;
double tmp131 = tmp22*tmp80;
double tmp132 = tmp16*tmp18;
double tmp133 = tmp28*tmp30;
double tmp134 = 2*tmp24*tmp18;
double tmp135 = -2*tmp78*tmp30;
double tmp136 = -(tmp28*tmp24);
double tmp137 = tmp123*tmp22;
double tmp138 = tmp20*tmp30;
double tmp139 = 2*tmp24*tmp80;
double tmp140 = -2*tmp28*tmp30;
double tmp141 = -2*tmp28*tmp16;
double tmp142 = -2*tmp22*tmp26;
double tmp143 = tmp18*tmp22;
double tmp144 = tmp26*tmp30;
double tmp145 = tmp78*tmp16;
double tmp146 = -2*tmp28*tmp22;
double tmp147 = -2*tmp16*tmp80;
double tmp148 = tmp78*tmp22;
double tmp149 = tmp123*tmp30;
double tmp150 = -2*tmp16*tmp123;
double tmp151 = -2*tmp20*tmp22;
J(1+_OFF,1+_OFF) = (tmp129 + 2*tmp28*tmp16 + tmp142 + tmp130)*tmp76 + 2*(tmp132 - tmp20*tmp22 - tmp24*tmp26 + tmp133)*tmp99 + 2*(tmp24*tmp18 + tmp125 + tmp126 + tmp138)*tmp120;
J(1+_OFF,2+_OFF) = (tmp134 + tmp146 + 2*tmp16*tmp80 + tmp135)*tmp76 + 2*(tmp136 + tmp145 - tmp18*tmp22 + tmp124)*tmp99 + 2*(tmp24*tmp78 + tmp121 + tmp131 + tmp18*tmp30)*tmp120;
J(1+_OFF,3+_OFF) = (2*tmp16*tmp123 + tmp151 + tmp139 + tmp140)*tmp76 + 2*(-(tmp24*tmp20) + tmp121 - tmp22*tmp80 + tmp149)*tmp99 + 2*(tmp127 + tmp128 + tmp137 + tmp124)*tmp120;
J(2+_OFF,1+_OFF) = 2*(-(tmp24*tmp18) + tmp125 + tmp126 - tmp20*tmp30)*tmp76 + 2*(tmp127 + tmp128 + tmp143 + tmp144)*tmp99 + (tmp129 + tmp141 + 2*tmp22*tmp26 + tmp130)*tmp120;
J(2+_OFF,2+_OFF) = 2*(-(tmp24*tmp78) + tmp121 + tmp131 - tmp18*tmp30)*tmp76 + 2*(tmp132 + tmp148 + tmp24*tmp80 + tmp133)*tmp99 + (tmp134 + 2*tmp28*tmp22 + tmp147 + tmp135)*tmp120;
J(2+_OFF,3+_OFF) = 2*(tmp136 + tmp128 + tmp137 - tmp80*tmp30)*tmp76 + 2*(tmp24*tmp123 + tmp125 + tmp16*tmp80 + tmp138)*tmp99 + (tmp150 + 2*tmp20*tmp22 + tmp139 + tmp140)*tmp120;
J(3+_OFF,1+_OFF) = 2*(tmp132 + tmp20*tmp22 + tmp24*tmp26 + tmp133)*tmp76 + (tmp129 + tmp141 + tmp142 + 2*tmp18*tmp30)*tmp99 + 2*(tmp136 - tmp20*tmp16 + tmp143 + tmp144)*tmp120;
J(3+_OFF,2+_OFF) = 2*(tmp127 + tmp145 + tmp143 + tmp124)*tmp76 + (tmp134 + tmp146 + tmp147 + 2*tmp78*tmp30)*tmp99 + 2*(-(tmp16*tmp18) + tmp148 - tmp24*tmp80 + tmp133)*tmp120;
J(3+_OFF,3+_OFF) = 2*(tmp24*tmp20 + tmp121 + tmp131 + tmp149)*tmp76 + (tmp150 + tmp151 + tmp139 + 2*tmp28*tmp30)*tmp99 + 2*(-(tmp24*tmp123) + tmp125 - tmp16*tmp80 + tmp138)*tmp120;
