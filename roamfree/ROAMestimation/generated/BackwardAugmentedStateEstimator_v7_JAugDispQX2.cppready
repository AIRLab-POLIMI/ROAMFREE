double tmp0 = x1(6+_OFF);
double tmp1 = x2(4+_OFF);
double tmp2 = 0.01*tmp1;
double tmp3 = 0. + tmp2;
double tmp4 = x1(7+_OFF);
double tmp5 = x2(5+_OFF);
double tmp6 = x1(4+_OFF);
double tmp7 = x2(6+_OFF);
double tmp8 = -0.01*tmp7;
double tmp9 = 0. + tmp8;
double tmp10 = x1(5+_OFF);
double tmp11 = x2(7+_OFF);
double tmp12 = -0.01*tmp5;
double tmp13 = 0. + tmp12;
double tmp14 = -0.01*tmp11;
double tmp15 = 0. + tmp14;
double tmp16 = qos(4+_OFF);
double tmp17 = qos(3+_OFF);
double tmp18 = qos(2+_OFF);
double tmp19 = qos(1+_OFF);
double tmp20 = 0.01*tmp11;
double tmp21 = 0. + tmp20;
double tmp22 = tmp19*tmp6;
double tmp23 = -(tmp18*tmp10);
double tmp24 = -(tmp17*tmp0);
double tmp25 = -(tmp16*tmp4);
double tmp26 = tmp22 + tmp23 + tmp24 + tmp25;
double tmp27 = tmp16*tmp3;
double tmp28 = 0.01*tmp5;
double tmp29 = 0. + tmp28;
double tmp30 = tmp18*tmp6;
double tmp31 = tmp19*tmp10;
double tmp32 = tmp16*tmp0;
double tmp33 = -(tmp17*tmp4);
double tmp34 = tmp30 + tmp31 + tmp32 + tmp33;
double tmp35 = tmp17*tmp3;
double tmp36 = tmp17*tmp6;
double tmp37 = -(tmp16*tmp10);
double tmp38 = tmp19*tmp0;
double tmp39 = tmp18*tmp4;
double tmp40 = tmp36 + tmp37 + tmp38 + tmp39;
double tmp41 = tmp16*tmp9;
double tmp42 = tmp16*tmp6;
double tmp43 = tmp17*tmp10;
double tmp44 = -(tmp18*tmp0);
double tmp45 = tmp19*tmp4;
double tmp46 = tmp42 + tmp43 + tmp44 + tmp45;
double tmp47 = -(tmp17*tmp9);
double tmp48 = 0.01*tmp7;
double tmp49 = 0. + tmp48;
double tmp50 = tmp16*tmp13;
double tmp51 = tmp18*tmp15;
double tmp52 = -(tmp18*tmp3);
double tmp53 = -(tmp19*tmp13);
double tmp54 = tmp19*tmp3;
double tmp55 = tmp16*tmp15;
double tmp56 = tmp17*tmp13;
double tmp57 = tmp18*tmp9;
double tmp58 = -(tmp17*tmp3);
double tmp59 = -(tmp19*tmp9);
double tmp60 = tmp18*tmp3;
double tmp61 = tmp17*tmp21;
double tmp62 = tmp60 + tmp53 + tmp41 + tmp61;
double tmp63 = tmp18*tmp13;
double tmp64 = tmp16*tmp21;
double tmp65 = tmp54 + tmp63 + tmp47 + tmp64;
double tmp66 = -(tmp17*tmp29);
double tmp67 = tmp19*tmp15;
double tmp68 = tmp27 + tmp66 + tmp57 + tmp67;
double tmp69 = tmp16*tmp29;
double tmp70 = tmp35 + tmp69 + tmp59 + tmp51;
double tmp71 = -(tmp17*tmp15);
double tmp72 = tmp18*tmp49;
double tmp73 = -(tmp19*tmp15);
double tmp74 = tmp27 + tmp56 + tmp72 + tmp73;
double tmp75 = tmp19*tmp49;
double tmp76 = tmp58 + tmp50 + tmp75 + tmp51;
double tmp77 = tmp17*tmp15;
double tmp78 = -(tmp19*tmp3);
double tmp79 = -(tmp16*tmp15);
double tmp80 = -(tmp16*tmp3);
double tmp81 = tmp19*tmp21;
double tmp82 = tmp80 + tmp56 + tmp57 + tmp81;
double tmp83 = tmp19*tmp9;
double tmp84 = -(tmp18*tmp21);
double tmp85 = tmp35 + tmp50 + tmp83 + tmp84;
double tmp86 = -(tmp18*tmp13);
double tmp87 = tmp17*tmp9;
double tmp88 = -(tmp18*tmp9);
double tmp89 = tmp19*tmp29;
double tmp90 = tmp52 + tmp89 + tmp41 + tmp77;
double tmp91 = tmp18*tmp29;
double tmp92 = tmp54 + tmp91 + tmp87 + tmp79;
double tmp93 = -(tmp16*tmp13);
double tmp94 = tmp19*tmp13;
double tmp95 = -(tmp16*tmp49);
double tmp96 = tmp60 + tmp94 + tmp95 + tmp77;
double tmp97 = tmp17*tmp49;
double tmp98 = tmp54 + tmp86 + tmp97 + tmp55;
J(1+_OFF,4+_OFF) = tmp10*tmp3 + tmp6*tmp13 + tmp4*tmp9 + tmp0*tmp21;
J(1+_OFF,5+_OFF) = tmp0*tmp3 + tmp4*tmp29 + tmp6*tmp9 + tmp10*tmp15;
J(1+_OFF,6+_OFF) = tmp4*tmp3 + tmp0*tmp13 + tmp10*tmp49 + tmp6*tmp15;
J(2+_OFF,4+_OFF) = -(tmp46*(tmp27 - tmp17*tmp13 + tmp88 - tmp19*tmp21)) - tmp40*tmp85 + tmp34*tmp62 + tmp26*tmp65;
J(2+_OFF,5+_OFF) = tmp26*tmp68 + tmp34*tmp70 - tmp40*tmp90 - tmp46*(tmp78 - tmp18*tmp29 + tmp47 + tmp55);
J(2+_OFF,6+_OFF) = tmp34*tmp74 + tmp26*tmp76 - tmp46*(tmp52 + tmp53 + tmp16*tmp49 + tmp71) - tmp40*tmp98;
J(3+_OFF,4+_OFF) = tmp26*tmp82 - tmp34*(tmp58 + tmp93 + tmp59 + tmp18*tmp21) + tmp40*tmp62 - tmp46*tmp65;
J(3+_OFF,5+_OFF) = -(tmp46*tmp68) + tmp40*tmp70 - tmp34*(tmp60 - tmp19*tmp29 - tmp16*tmp9 + tmp71) + tmp26*tmp92;
J(3+_OFF,6+_OFF) = tmp40*tmp74 - tmp46*tmp76 + tmp26*tmp96 - tmp34*(tmp78 + tmp63 - tmp17*tmp49 + tmp79);
J(4+_OFF,4+_OFF) = -(tmp34*tmp82) + tmp26*tmp85 + tmp46*tmp62 - tmp40*(tmp78 + tmp86 + tmp87 - tmp16*tmp21);
J(4+_OFF,5+_OFF) = -(tmp40*(tmp80 + tmp17*tmp29 + tmp88 + tmp73)) + tmp46*tmp70 + tmp26*tmp90 - tmp34*tmp92;
J(4+_OFF,6+_OFF) = tmp46*tmp74 - tmp40*(tmp35 + tmp93 - tmp19*tmp49 - tmp18*tmp15) - tmp34*tmp96 + tmp26*tmp98;
