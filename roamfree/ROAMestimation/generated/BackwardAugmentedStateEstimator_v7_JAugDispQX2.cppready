double tmp0 = qos(2+_OFF);
double tmp1 = x1(4+_OFF);
double tmp2 = qos(1+_OFF);
double tmp3 = x1(5+_OFF);
double tmp4 = qos(4+_OFF);
double tmp5 = x1(6+_OFF);
double tmp6 = qos(3+_OFF);
double tmp7 = x1(7+_OFF);
double tmp8 = x2(4+_OFF);
double tmp9 = 0.01*tmp8;
double tmp10 = 0. + tmp9;
double tmp11 = x2(5+_OFF);
double tmp12 = -0.01*tmp11;
double tmp13 = 0. + tmp12;
double tmp14 = x2(6+_OFF);
double tmp15 = -0.01*tmp14;
double tmp16 = 0. + tmp15;
double tmp17 = x2(7+_OFF);
double tmp18 = 0.01*tmp17;
double tmp19 = 0. + tmp18;
double tmp20 = tmp2*tmp1;
double tmp21 = -(tmp0*tmp3);
double tmp22 = -(tmp6*tmp5);
double tmp23 = -(tmp4*tmp7);
double tmp24 = -(tmp6*tmp1);
double tmp25 = tmp4*tmp3;
double tmp26 = -(tmp2*tmp5);
double tmp27 = -(tmp0*tmp7);
double tmp28 = -(tmp0*tmp1);
double tmp29 = -(tmp2*tmp3);
double tmp30 = -(tmp4*tmp5);
double tmp31 = tmp6*tmp7;
double tmp32 = tmp24 + tmp25 + tmp26 + tmp27;
double tmp33 = (Dt12*earthrate*tmp32)/2.;
double tmp34 = tmp28 + tmp29 + tmp30 + tmp31 + tmp33;
double tmp35 = tmp0*tmp16;
double tmp36 = tmp4*tmp1;
double tmp37 = tmp6*tmp3;
double tmp38 = -(tmp0*tmp5);
double tmp39 = tmp2*tmp7;
double tmp40 = tmp36 + tmp37 + tmp38 + tmp39;
double tmp41 = (Dt12*earthrate*tmp40)/2.;
double tmp42 = tmp20 + tmp21 + tmp22 + tmp23 + tmp41;
double tmp43 = 0.01*tmp11;
double tmp44 = 0. + tmp43;
double tmp45 = tmp2*tmp16;
double tmp46 = -0.01*tmp17;
double tmp47 = 0. + tmp46;
double tmp48 = -(tmp4*tmp1);
double tmp49 = -(tmp6*tmp3);
double tmp50 = tmp0*tmp5;
double tmp51 = -(tmp2*tmp7);
double tmp52 = tmp20 + tmp21 + tmp22 + tmp23;
double tmp53 = (Dt12*earthrate*tmp52)/2.;
double tmp54 = tmp48 + tmp49 + tmp50 + tmp51 + tmp53;
double tmp55 = -(tmp0*tmp10);
double tmp56 = tmp0*tmp1;
double tmp57 = tmp2*tmp3;
double tmp58 = tmp4*tmp5;
double tmp59 = -(tmp6*tmp7);
double tmp60 = tmp56 + tmp57 + tmp58 + tmp59;
double tmp61 = (Dt12*earthrate*tmp60)/2.;
double tmp62 = tmp24 + tmp25 + tmp26 + tmp27 + tmp61;
double tmp63 = tmp2*tmp10;
double tmp64 = -(tmp4*tmp10);
double tmp65 = tmp2*tmp47;
double tmp66 = -(tmp6*tmp10);
double tmp67 = tmp4*tmp13;
double tmp68 = 0.01*tmp14;
double tmp69 = 0. + tmp68;
double tmp70 = tmp2*tmp13;
double tmp71 = tmp6*tmp47;
double tmp72 = tmp6*tmp13;
double tmp73 = tmp2*tmp19;
double tmp74 = tmp64 + tmp72 + tmp35 + tmp73;
double tmp75 = tmp6*tmp10;
double tmp76 = -(tmp0*tmp19);
double tmp77 = tmp75 + tmp67 + tmp45 + tmp76;
double tmp78 = -(tmp4*tmp16);
double tmp79 = -(tmp6*tmp19);
double tmp80 = tmp55 + tmp70 + tmp78 + tmp79;
double tmp81 = tmp0*tmp13;
double tmp82 = -(tmp6*tmp16);
double tmp83 = tmp4*tmp19;
double tmp84 = tmp63 + tmp81 + tmp82 + tmp83;
double tmp85 = tmp4*tmp10;
double tmp86 = -(tmp6*tmp44);
double tmp87 = tmp85 + tmp86 + tmp35 + tmp65;
double tmp88 = -(tmp4*tmp44);
double tmp89 = -(tmp0*tmp47);
double tmp90 = tmp66 + tmp88 + tmp45 + tmp89;
double tmp91 = tmp2*tmp44;
double tmp92 = tmp4*tmp16;
double tmp93 = tmp55 + tmp91 + tmp92 + tmp71;
double tmp94 = tmp0*tmp44;
double tmp95 = tmp6*tmp16;
double tmp96 = -(tmp4*tmp47);
double tmp97 = tmp63 + tmp94 + tmp95 + tmp96;
double tmp98 = -(tmp6*tmp13);
double tmp99 = -(tmp0*tmp69);
double tmp100 = tmp64 + tmp98 + tmp99 + tmp65;
double tmp101 = tmp2*tmp69;
double tmp102 = tmp0*tmp47;
double tmp103 = tmp66 + tmp67 + tmp101 + tmp102;
double tmp104 = tmp0*tmp10;
double tmp105 = -(tmp4*tmp69);
double tmp106 = tmp104 + tmp70 + tmp105 + tmp71;
double tmp107 = -(tmp0*tmp13);
double tmp108 = tmp6*tmp69;
double tmp109 = tmp4*tmp47;
double tmp110 = tmp63 + tmp107 + tmp108 + tmp109;
J(1+_OFF,4+_OFF) = -(tmp62*tmp74) - tmp54*tmp77 + tmp42*tmp80 - tmp34*tmp84;
J(1+_OFF,5+_OFF) = -(tmp34*tmp87) + tmp42*tmp90 - tmp54*tmp93 - tmp62*tmp97;
J(1+_OFF,6+_OFF) = tmp42*tmp100 - tmp34*tmp103 - tmp62*tmp106 - tmp54*tmp110;
J(2+_OFF,4+_OFF) = -(tmp54*tmp74) + tmp62*tmp77 + tmp34*tmp80 + tmp42*tmp84;
J(2+_OFF,5+_OFF) = tmp42*tmp87 + tmp34*tmp90 + tmp62*tmp93 - tmp54*tmp97;
J(2+_OFF,6+_OFF) = tmp34*tmp100 + tmp42*tmp103 - tmp54*tmp106 + tmp62*tmp110;
J(3+_OFF,4+_OFF) = tmp42*tmp74 - tmp34*tmp77 + tmp62*tmp80 + tmp54*tmp84;
J(3+_OFF,5+_OFF) = tmp54*tmp87 + tmp62*tmp90 - tmp34*tmp93 + tmp42*tmp97;
J(3+_OFF,6+_OFF) = tmp62*tmp100 + tmp54*tmp103 + tmp42*tmp106 - tmp34*tmp110;
J(4+_OFF,4+_OFF) = tmp34*tmp74 + tmp42*tmp77 + tmp54*tmp80 - tmp62*tmp84;
J(4+_OFF,5+_OFF) = -(tmp62*tmp87) + tmp54*tmp90 + tmp42*tmp93 + tmp34*tmp97;
J(4+_OFF,6+_OFF) = tmp54*tmp100 - tmp62*tmp103 + tmp34*tmp106 + tmp42*tmp110;
