double tmp0 = std::pow(qOS1,2);
double tmp1 = -tmp0;
double tmp2 = std::pow(qOS2,2);
double tmp3 = -tmp2;
double tmp4 = std::pow(qOS3,2);
double tmp5 = -tmp4;
double tmp6 = 1 + tmp1 + tmp3 + tmp5;
double tmp7 = std::sqrt(tmp6);
double tmp8 = x2(4+_OFF);
double tmp9 = 1.*tmp8;
double tmp10 = 0. + tmp9;
double tmp11 = x2(6+_OFF);
double tmp12 = 1.*tmp11;
double tmp13 = 0. + tmp12;
double tmp14 = x2(5+_OFF);
double tmp15 = 1.*tmp14;
double tmp16 = 0. + tmp15;
double tmp17 = x2(7+_OFF);
double tmp18 = 1.*tmp17;
double tmp19 = 0. + tmp18;
double tmp20 = 1/Dt12;
double tmp21 = -2*tmp2;
double tmp22 = -2*tmp4;
double tmp23 = 1 + tmp21 + tmp22;
double tmp24 = tmp16*tmp13;
double tmp25 = qOS1*qOS3;
double tmp26 = -(qOS2*tmp7);
double tmp27 = tmp25 + tmp26;
double tmp28 = qOS1*qOS2;
double tmp29 = qOS3*tmp7;
double tmp30 = tmp28 + tmp29;
double tmp31 = std::pow(tmp19,2);
double tmp32 = 2*tmp31;
double tmp33 = std::pow(tmp16,2);
double tmp34 = 2*tmp33;
double tmp35 = std::pow(tmp13,2);
double tmp36 = 2*tmp35;
double tmp37 = tmp10*tmp13;
double tmp38 = tmp10*tmp16;
double tmp39 = 0.01*tmp8;
double tmp40 = 0. + tmp39;
double tmp41 = x1(6+_OFF);
double tmp42 = x1(7+_OFF);
double tmp43 = -0.01*tmp14;
double tmp44 = 0. + tmp43;
double tmp45 = -0.01*tmp11;
double tmp46 = 0. + tmp45;
double tmp47 = x1(4+_OFF);
double tmp48 = x1(5+_OFF);
double tmp49 = 0.01*tmp17;
double tmp50 = 0. + tmp49;
double tmp51 = x1(3+_OFF);
double tmp52 = x2(3+_OFF);
double tmp53 = -tmp52;
double tmp54 = 0. + tmp51 + tmp53;
double tmp55 = 4*tmp13*tmp50;
double tmp56 = x1(1+_OFF);
double tmp57 = x2(1+_OFF);
double tmp58 = -tmp57;
double tmp59 = 0. + tmp56 + tmp58;
double tmp60 = tmp44*tmp13;
double tmp61 = tmp10*tmp50;
double tmp62 = x1(2+_OFF);
double tmp63 = x2(2+_OFF);
double tmp64 = -tmp63;
double tmp65 = 0. + tmp62 + tmp64;
double tmp66 = tmp40*tmp13;
double tmp67 = tmp16*tmp50;
double tmp68 = 4*tmp40*tmp16;
double tmp69 = 4*tmp46*tmp19;
double tmp70 = tmp40*tmp10;
double tmp71 = tmp44*tmp16;
double tmp72 = 0.01*tmp14;
double tmp73 = 0. + tmp72;
double tmp74 = -0.01*tmp17;
double tmp75 = 0. + tmp74;
double tmp76 = -tmp51;
double tmp77 = 0. + tmp76 + tmp52;
double tmp78 = tmp16*tmp46;
double tmp79 = tmp40*tmp19;
double tmp80 = -tmp56;
double tmp81 = 0. + tmp80 + tmp57;
double tmp82 = -2*sO3*tmp47*tmp40;
double tmp83 = 2*sO3*tmp41*tmp46;
double tmp84 = 4*tmp73*tmp19;
double tmp85 = tmp40*tmp16;
double tmp86 = tmp13*tmp75;
double tmp87 = tmp46*tmp13;
double tmp88 = 4*tmp40*tmp13;
double tmp89 = 4*tmp16*tmp75;
double tmp90 = tmp10*tmp75;
double tmp91 = -(tmp40*tmp19);
double tmp92 = 2*sO2*tmp41*tmp40;
double tmp93 = -2*sO2*tmp42*tmp44;
double tmp94 = 0.01*tmp11;
double tmp95 = 0. + tmp94;
double tmp96 = -(tmp44*tmp19);
double tmp97 = 2*sO1*tmp47*tmp40;
double tmp98 = -2*sO1*tmp42*tmp75;
double tmp99 = 4*tmp16*tmp95;
double tmp100 = tmp10*tmp95;
double tmp101 = tmp16*tmp75;
double tmp102 = tmp44*tmp19;
double tmp103 = -(tmp75*tmp19);
double tmp104 = 4*tmp44*tmp13;
double tmp105 = 4*tmp40*tmp19;
double tmp106 = tmp10*tmp44;
double tmp107 = tmp95*tmp13;
double tmp108 = tmp75*tmp19;
double tmp109 = -(tmp10*tmp19);
double tmp110 = tmp24 + tmp109;
double tmp111 = tmp16*tmp19;
double tmp112 = tmp37 + tmp111;
double tmp113 = -1 + tmp36 + tmp32;
double tmp114 = -(qOS3*tmp7);
double tmp115 = tmp28 + tmp114;
double tmp116 = tmp10*tmp19;
double tmp117 = tmp24 + tmp116;
double tmp118 = qOS2*qOS3;
double tmp119 = qOS1*tmp7;
double tmp120 = tmp118 + tmp119;
double tmp121 = -(tmp13*tmp19);
double tmp122 = tmp38 + tmp121;
double tmp123 = -2*tmp0;
double tmp124 = 1 + tmp123 + tmp22;
double tmp125 = -1 + tmp34 + tmp32;
double tmp126 = -1 + tmp34 + tmp36;
double tmp127 = -(tmp16*tmp19);
double tmp128 = tmp37 + tmp127;
double tmp129 = tmp13*tmp19;
double tmp130 = tmp38 + tmp129;
double tmp131 = 2*sO3*tmp42*tmp40;
double tmp132 = 2*sO3*tmp41*tmp44;
double tmp133 = 2*sO2*tmp47*tmp46;
double tmp134 = -2*sO3*tmp48*tmp46;
double tmp135 = -2*sO3*tmp47*tmp50;
double tmp136 = -2*sO2*tmp48*tmp50;
double tmp137 = -(tmp16*tmp46);
double tmp138 = tmp137 + tmp60 + tmp61 + tmp91;
double tmp139 = -2*tmp54*tmp138;
double tmp140 = tmp10*tmp46;
double tmp141 = tmp140 + tmp66 + tmp67 + tmp102;
double tmp142 = 2*tmp65*tmp141;
double tmp143 = tmp55 + tmp69;
double tmp144 = -(tmp59*tmp143);
double tmp145 = tmp92 + tmp131 + tmp132 + tmp93 + tmp133 + tmp134 + tmp135 + tmp136 + tmp139 + tmp142 + tmp144;
double tmp146 = -2*sO2*tmp47*tmp40;
double tmp147 = -2*sO1*tmp42*tmp40;
double tmp148 = 2*sO2*tmp48*tmp44;
double tmp149 = -2*sO1*tmp41*tmp44;
double tmp150 = 2*sO1*tmp48*tmp46;
double tmp151 = 2*sO2*tmp41*tmp46;
double tmp152 = tmp68 + tmp55;
double tmp153 = -(tmp54*tmp152);
double tmp154 = 2*sO1*tmp47*tmp50;
double tmp155 = -2*sO2*tmp42*tmp50;
double tmp156 = tmp78 + tmp60 + tmp61 + tmp79;
double tmp157 = 2*tmp59*tmp156;
double tmp158 = -(tmp46*tmp13);
double tmp159 = -(tmp50*tmp19);
double tmp160 = tmp70 + tmp71 + tmp158 + tmp159;
double tmp161 = -2*tmp65*tmp160;
double tmp162 = tmp146 + tmp147 + tmp148 + tmp149 + tmp150 + tmp151 + tmp153 + tmp154 + tmp155 + tmp157 + tmp161;
double tmp163 = 2*sO1*tmp41*tmp40;
double tmp164 = 2*sO3*tmp48*tmp44;
double tmp165 = -2*sO1*tmp42*tmp44;
double tmp166 = 2*sO1*tmp47*tmp46;
double tmp167 = -2*sO1*tmp48*tmp50;
double tmp168 = -2*sO3*tmp42*tmp50;
double tmp169 = -(tmp10*tmp46);
double tmp170 = tmp169 + tmp66 + tmp67 + tmp96;
double tmp171 = 2*tmp81*tmp170;
double tmp172 = tmp68 + tmp69;
double tmp173 = tmp65*tmp172;
double tmp174 = tmp50*tmp19;
double tmp175 = tmp70 + tmp71 + tmp87 + tmp174;
double tmp176 = 2*tmp77*tmp175;
double tmp177 = tmp82 + tmp163 + tmp164 + tmp165 + tmp166 + tmp83 + tmp167 + tmp168 + tmp171 + tmp173 + tmp176;
double tmp178 = -2*sO1*tmp48*tmp40;
double tmp179 = -2*sO3*tmp42*tmp40;
double tmp180 = 2*sO1*tmp47*tmp73;
double tmp181 = 2*sO3*tmp41*tmp73;
double tmp182 = 2*sO3*tmp48*tmp46;
double tmp183 = -2*sO1*tmp42*tmp46;
double tmp184 = -2*sO3*tmp47*tmp75;
double tmp185 = 2*sO1*tmp41*tmp75;
double tmp186 = tmp73*tmp13;
double tmp187 = tmp78 + tmp186 + tmp90 + tmp79;
double tmp188 = 2*tmp77*tmp187;
double tmp189 = tmp89 + tmp84;
double tmp190 = tmp65*tmp189;
double tmp191 = -(tmp10*tmp73);
double tmp192 = -(tmp46*tmp19);
double tmp193 = tmp191 + tmp85 + tmp86 + tmp192;
double tmp194 = 2*tmp81*tmp193;
double tmp195 = tmp178 + tmp179 + tmp180 + tmp181 + tmp182 + tmp183 + tmp184 + tmp185 + tmp188 + tmp190 + tmp194;
double tmp196 = -2*sO2*tmp48*tmp40;
double tmp197 = 2*sO2*tmp47*tmp73;
double tmp198 = -2*sO3*tmp48*tmp73;
double tmp199 = -2*sO2*tmp42*tmp46;
double tmp200 = 2*sO2*tmp41*tmp75;
double tmp201 = 2*sO3*tmp42*tmp75;
double tmp202 = tmp88 + tmp84;
double tmp203 = -(tmp59*tmp202);
double tmp204 = tmp10*tmp73;
double tmp205 = tmp46*tmp19;
double tmp206 = tmp204 + tmp85 + tmp86 + tmp205;
double tmp207 = 2*tmp65*tmp206;
double tmp208 = -(tmp73*tmp16);
double tmp209 = tmp70 + tmp208 + tmp87 + tmp103;
double tmp210 = -2*tmp54*tmp209;
double tmp211 = tmp82 + tmp196 + tmp197 + tmp198 + tmp83 + tmp199 + tmp200 + tmp201 + tmp203 + tmp207 + tmp210;
double tmp212 = -2*sO2*tmp42*tmp40;
double tmp213 = 2*sO1*tmp48*tmp73;
double tmp214 = 2*sO2*tmp41*tmp73;
double tmp215 = 2*sO2*tmp48*tmp46;
double tmp216 = -2*sO1*tmp41*tmp46;
double tmp217 = tmp88 + tmp89;
double tmp218 = -(tmp54*tmp217);
double tmp219 = -2*sO2*tmp47*tmp75;
double tmp220 = -(tmp73*tmp13);
double tmp221 = tmp78 + tmp220 + tmp90 + tmp91;
double tmp222 = -2*tmp65*tmp221;
double tmp223 = tmp73*tmp16;
double tmp224 = tmp70 + tmp223 + tmp87 + tmp108;
double tmp225 = 2*tmp59*tmp224;
double tmp226 = tmp97 + tmp212 + tmp213 + tmp214 + tmp215 + tmp216 + tmp218 + tmp219 + tmp98 + tmp222 + tmp225;
double tmp227 = 2*sO1*tmp48*tmp40;
double tmp228 = 2*sO1*tmp47*tmp44;
double tmp229 = -2*sO2*tmp47*tmp95;
double tmp230 = -2*sO1*tmp42*tmp95;
double tmp231 = tmp99 + tmp104;
double tmp232 = -(tmp54*tmp231);
double tmp233 = 2*sO2*tmp48*tmp75;
double tmp234 = -2*sO1*tmp41*tmp75;
double tmp235 = -(tmp40*tmp13);
double tmp236 = tmp100 + tmp235 + tmp101 + tmp96;
double tmp237 = -2*tmp65*tmp236;
double tmp238 = tmp95*tmp19;
double tmp239 = tmp106 + tmp85 + tmp86 + tmp238;
double tmp240 = 2*tmp59*tmp239;
double tmp241 = tmp227 + tmp92 + tmp228 + tmp93 + tmp229 + tmp230 + tmp232 + tmp233 + tmp234 + tmp237 + tmp240;
double tmp242 = 2*sO3*tmp41*tmp40;
double tmp243 = -2*sO1*tmp48*tmp44;
double tmp244 = -2*sO3*tmp42*tmp44;
double tmp245 = -2*sO3*tmp47*tmp95;
double tmp246 = 2*sO1*tmp41*tmp95;
double tmp247 = 2*sO3*tmp48*tmp75;
double tmp248 = tmp99 + tmp105;
double tmp249 = tmp65*tmp248;
double tmp250 = tmp100 + tmp66 + tmp101 + tmp102;
double tmp251 = 2*tmp77*tmp250;
double tmp252 = -(tmp40*tmp10);
double tmp253 = tmp252 + tmp71 + tmp107 + tmp103;
double tmp254 = 2*tmp81*tmp253;
double tmp255 = tmp97 + tmp242 + tmp243 + tmp244 + tmp245 + tmp246 + tmp247 + tmp98 + tmp249 + tmp251 + tmp254;
double tmp256 = 2*sO2*tmp47*tmp40;
double tmp257 = -2*sO3*tmp48*tmp40;
double tmp258 = -2*sO3*tmp47*tmp44;
double tmp259 = -2*sO2*tmp48*tmp44;
double tmp260 = 2*sO2*tmp41*tmp95;
double tmp261 = 2*sO3*tmp42*tmp95;
double tmp262 = 2*sO3*tmp41*tmp75;
double tmp263 = -2*sO2*tmp42*tmp75;
double tmp264 = tmp104 + tmp105;
double tmp265 = -(tmp59*tmp264);
double tmp266 = -(tmp40*tmp16);
double tmp267 = -(tmp95*tmp19);
double tmp268 = tmp106 + tmp266 + tmp86 + tmp267;
double tmp269 = -2*tmp54*tmp268;
double tmp270 = tmp70 + tmp71 + tmp107 + tmp108;
double tmp271 = 2*tmp65*tmp270;
double tmp272 = tmp256 + tmp257 + tmp258 + tmp259 + tmp260 + tmp261 + tmp262 + tmp263 + tmp265 + tmp269 + tmp271;
double tmp273 = qOS2*tmp7;
double tmp274 = tmp25 + tmp273;
double tmp275 = 1 + tmp123 + tmp21;
double tmp276 = -(qOS1*tmp7);
double tmp277 = tmp118 + tmp276;
J(1+_OFF,1+_OFF) = tmp20*(0.004*tmp30*tmp110 + 0.004*tmp27*tmp112 - 0.001*tmp23*tmp113);
J(1+_OFF,2+_OFF) = tmp20*(0.002*tmp23*tmp117 - 0.004*tmp27*tmp122 - 0.002*tmp30*tmp125);
J(1+_OFF,3+_OFF) = tmp20*(-0.002*tmp27*tmp126 - 0.002*tmp23*tmp128 + 0.004*tmp30*tmp130);
J(1+_OFF,4+_OFF) = tmp20*(-(tmp23*tmp145) - 2*tmp27*tmp162 + 2*tmp30*tmp177);
J(1+_OFF,5+_OFF) = tmp20*(2*tmp30*tmp195 - tmp23*tmp211 - 2*tmp27*tmp226);
J(1+_OFF,6+_OFF) = tmp20*(-2*tmp27*tmp241 + 2*tmp30*tmp255 - tmp23*tmp272);
J(2+_OFF,1+_OFF) = tmp20*(0.002*tmp124*tmp110 + 0.004*tmp120*tmp112 - 0.002*tmp115*tmp113);
J(2+_OFF,2+_OFF) = tmp20*(0.004*tmp115*tmp117 - 0.004*tmp120*tmp122 - 0.001*tmp124*tmp125);
J(2+_OFF,3+_OFF) = tmp20*(-0.002*tmp120*tmp126 - 0.004*tmp115*tmp128 + 0.002*tmp124*tmp130);
J(2+_OFF,4+_OFF) = tmp20*(-2*tmp115*tmp145 - 2*tmp120*tmp162 + tmp124*tmp177);
J(2+_OFF,5+_OFF) = tmp20*(tmp124*tmp195 - 2*tmp115*tmp211 - 2*tmp120*tmp226);
J(2+_OFF,6+_OFF) = tmp20*(-2*tmp120*tmp241 + tmp124*tmp255 - 2*tmp115*tmp272);
J(3+_OFF,1+_OFF) = tmp20*(0.004*tmp277*tmp110 + 0.002*tmp275*tmp112 - 0.002*tmp274*tmp113);
J(3+_OFF,2+_OFF) = tmp20*(0.004*tmp274*tmp117 - 0.002*tmp275*tmp122 - 0.002*tmp277*tmp125);
J(3+_OFF,3+_OFF) = tmp20*(-0.001*tmp275*tmp126 - 0.004*tmp274*tmp128 + 0.004*tmp277*tmp130);
J(3+_OFF,4+_OFF) = tmp20*(-2*tmp274*tmp145 - tmp275*tmp162 + 2*tmp277*tmp177);
J(3+_OFF,5+_OFF) = tmp20*(2*tmp277*tmp195 - 2*tmp274*tmp211 - tmp275*tmp226);
J(3+_OFF,6+_OFF) = tmp20*(-(tmp275*tmp241) + 2*tmp277*tmp255 - 2*tmp274*tmp272);
