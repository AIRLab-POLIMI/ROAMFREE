double tmp0 = x1(6+_OFF);
double tmp1 = x1(7+_OFF);
double tmp2 = x0(5+_OFF);
double tmp3 = x2(4+_OFF);
double tmp4 = x2(5+_OFF);
double tmp5 = x0(4+_OFF);
double tmp6 = std::pow(tmp4,2);
double tmp7 = x1(4+_OFF);
double tmp8 = x2(6+_OFF);
double tmp9 = x1(5+_OFF);
double tmp10 = std::pow(tmp8,2);
double tmp11 = x2(7+_OFF);
double tmp12 = -2*tmp6;
double tmp13 = -2*tmp10;
double tmp14 = 1 + tmp12 + tmp13;
double tmp15 = 1/Dt01;
double tmp16 = 1/Dt12;
double tmp17 = Dt01 + Dt12;
double tmp18 = 1/tmp17;
double tmp19 = std::pow(qOS1,2);
double tmp20 = -tmp19;
double tmp21 = std::pow(qOS2,2);
double tmp22 = -tmp21;
double tmp23 = std::pow(qOS3,2);
double tmp24 = -tmp23;
double tmp25 = 1 + tmp20 + tmp22 + tmp24;
double tmp26 = std::sqrt(tmp25);
double tmp27 = std::pow(tmp11,2);
double tmp28 = x0(6+_OFF);
double tmp29 = tmp7*tmp3*tmp4;
double tmp30 = x0(7+_OFF);
double tmp31 = -(tmp9*tmp3*tmp4);
double tmp32 = tmp1*tmp3*tmp8;
double tmp33 = -(tmp0*tmp3*tmp11);
double tmp34 = -2*tmp27;
double tmp35 = tmp1*tmp4*tmp8;
double tmp36 = -(tmp0*tmp4*tmp11);
double tmp37 = 2*tmp27;
double tmp38 = qOS1*qOS3;
double tmp39 = -(qOS2*tmp26);
double tmp40 = tmp38 + tmp39;
double tmp41 = qOS1*qOS2;
double tmp42 = qOS3*tmp26;
double tmp43 = tmp41 + tmp42;
double tmp44 = -(tmp7*tmp3);
double tmp45 = -(tmp9*tmp4);
double tmp46 = -(tmp0*tmp8);
double tmp47 = -(tmp1*tmp11);
double tmp48 = tmp44 + tmp45 + tmp46 + tmp47;
double tmp49 = Dt01*tmp48;
double tmp50 = -(tmp1*tmp3*tmp4);
double tmp51 = 1 + tmp12 + tmp34;
double tmp52 = -(tmp0*tmp3*tmp4);
double tmp53 = 2*tmp6;
double tmp54 = -1 + tmp53 + tmp37;
double tmp55 = -2*tmp21;
double tmp56 = -2*tmp23;
double tmp57 = 1 + tmp55 + tmp56;
double tmp58 = tmp7*tmp3*tmp8;
double tmp59 = tmp9*tmp3*tmp11;
double tmp60 = 1 + tmp13 + tmp34;
double tmp61 = tmp7*tmp4*tmp8;
double tmp62 = tmp9*tmp4*tmp11;
double tmp63 = 2*tmp10;
double tmp64 = -1 + tmp63 + tmp37;
double tmp65 = -(tmp5*tmp7);
double tmp66 = tmp2*tmp9;
double tmp67 = -2*tmp2*tmp7*tmp3*tmp4;
double tmp68 = -2*tmp5*tmp9*tmp3*tmp4;
double tmp69 = 2*tmp5*tmp7*tmp6;
double tmp70 = -2*tmp2*tmp9*tmp6;
double tmp71 = -(tmp1*tmp14);
double tmp72 = -(tmp9*tmp3*tmp8);
double tmp73 = -(tmp0*tmp8*tmp11);
double tmp74 = tmp7*tmp4*tmp11;
double tmp75 = tmp1*tmp8*tmp11;
double tmp76 = tmp50 + tmp58 + tmp74 + tmp75;
double tmp77 = -2*tmp5*tmp7*tmp8*tmp11;
double tmp78 = 2*tmp2*tmp9*tmp8*tmp11;
double tmp79 = tmp0*tmp3*tmp4;
double tmp80 = tmp7*tmp3*tmp11;
double tmp81 = tmp0*tmp8*tmp11;
double tmp82 = -(tmp9*tmp4*tmp8);
double tmp83 = -(tmp1*tmp8*tmp11);
double tmp84 = tmp50 + tmp82 + tmp59 + tmp83;
double tmp85 = 2*tmp84;
double tmp86 = tmp72 + tmp61 + tmp80 + tmp62;
double tmp87 = tmp0*tmp3;
double tmp88 = tmp1*tmp4;
double tmp89 = -(tmp7*tmp8);
double tmp90 = -(tmp9*tmp11);
double tmp91 = tmp87 + tmp88 + tmp89 + tmp90;
double tmp92 = Dt01*tmp91;
double tmp93 = tmp5*tmp0;
double tmp94 = -(tmp2*tmp1);
double tmp95 = 2*tmp2*tmp0*tmp3*tmp4;
double tmp96 = 2*tmp5*tmp1*tmp3*tmp4;
double tmp97 = -2*tmp5*tmp0*tmp6;
double tmp98 = 2*tmp2*tmp1*tmp6;
double tmp99 = -2*tmp5*tmp7*tmp3*tmp8;
double tmp100 = -2*tmp2*tmp9*tmp3*tmp8;
double tmp101 = -2*tmp5*tmp0*tmp10;
double tmp102 = 2*tmp2*tmp1*tmp10;
double tmp103 = -2*tmp5*tmp7*tmp4*tmp11;
double tmp104 = -2*tmp2*tmp9*tmp4*tmp11;
double tmp105 = -2*tmp2*tmp0*tmp8*tmp11;
double tmp106 = -2*tmp5*tmp1*tmp8*tmp11;
double tmp107 = -(tmp9*tmp14);
double tmp108 = tmp1*tmp4*tmp11;
double tmp109 = -(tmp7*tmp8*tmp11);
double tmp110 = tmp29 + tmp32 + tmp108 + tmp109;
double tmp111 = 2*tmp110;
double tmp112 = tmp107 + tmp111;
double tmp113 = tmp30*tmp112;
double tmp114 = tmp7*tmp14;
double tmp115 = -(tmp0*tmp3*tmp8);
double tmp116 = tmp9*tmp8*tmp11;
double tmp117 = tmp31 + tmp115 + tmp36 + tmp116;
double tmp118 = -2*tmp117;
double tmp119 = tmp114 + tmp118;
double tmp120 = tmp28*tmp119;
double tmp121 = tmp93 + tmp94 + tmp95 + tmp96 + tmp97 + tmp98 + tmp99 + tmp100 + tmp101 + tmp102 + tmp103 + tmp104 + tmp105 + tmp106 + tmp113 + tmp120;
double tmp122 = Dt12*tmp121;
double tmp123 = tmp92 + tmp122;
double tmp124 = -(tmp1*tmp3);
double tmp125 = tmp0*tmp4;
double tmp126 = -(tmp9*tmp8);
double tmp127 = tmp7*tmp11;
double tmp128 = tmp124 + tmp125 + tmp126 + tmp127;
double tmp129 = Dt01*tmp128;
double tmp130 = -(tmp2*tmp0);
double tmp131 = -(tmp5*tmp1);
double tmp132 = 2*tmp5*tmp0*tmp3*tmp4;
double tmp133 = -2*tmp2*tmp1*tmp3*tmp4;
double tmp134 = 2*tmp2*tmp0*tmp6;
double tmp135 = 2*tmp5*tmp1*tmp6;
double tmp136 = -2*tmp5*tmp7*tmp4*tmp8;
double tmp137 = -2*tmp2*tmp9*tmp4*tmp8;
double tmp138 = 2*tmp5*tmp7*tmp3*tmp11;
double tmp139 = 2*tmp2*tmp9*tmp3*tmp11;
double tmp140 = 2*tmp5*tmp0*tmp8*tmp11;
double tmp141 = -2*tmp2*tmp1*tmp8*tmp11;
double tmp142 = 2*tmp2*tmp0*tmp27;
double tmp143 = 2*tmp5*tmp1*tmp27;
double tmp144 = tmp0*tmp4*tmp8;
double tmp145 = tmp7*tmp8*tmp11;
double tmp146 = tmp29 + tmp144 + tmp33 + tmp145;
double tmp147 = 2*tmp146;
double tmp148 = -(tmp9*tmp51);
double tmp149 = tmp147 + tmp148;
double tmp150 = tmp28*tmp149;
double tmp151 = -(tmp1*tmp3*tmp11);
double tmp152 = -(tmp9*tmp8*tmp11);
double tmp153 = tmp31 + tmp35 + tmp151 + tmp152;
double tmp154 = 2*tmp153;
double tmp155 = tmp7*tmp54;
double tmp156 = tmp154 + tmp155;
double tmp157 = tmp30*tmp156;
double tmp158 = tmp130 + tmp131 + tmp132 + tmp133 + tmp134 + tmp135 + tmp136 + tmp137 + tmp138 + tmp139 + tmp140 + tmp141 + tmp142 + tmp143 + tmp150 + tmp157;
double tmp159 = Dt12*tmp158;
double tmp160 = tmp129 + tmp159;
double tmp161 = tmp28*tmp0;
double tmp162 = tmp30*tmp1;
double tmp163 = -2*tmp28*tmp7*tmp3*tmp8;
double tmp164 = 2*tmp30*tmp9*tmp3*tmp8;
double tmp165 = -2*tmp30*tmp7*tmp4*tmp8;
double tmp166 = -2*tmp28*tmp9*tmp4*tmp8;
double tmp167 = -2*tmp28*tmp0*tmp10;
double tmp168 = -2*tmp30*tmp1*tmp10;
double tmp169 = -2*tmp30*tmp7*tmp3*tmp11;
double tmp170 = -2*tmp28*tmp9*tmp3*tmp11;
double tmp171 = 2*tmp28*tmp7*tmp4*tmp11;
double tmp172 = -2*tmp30*tmp9*tmp4*tmp11;
double tmp173 = -2*tmp28*tmp0*tmp27;
double tmp174 = -2*tmp30*tmp1*tmp27;
double tmp175 = -(tmp0*tmp4*tmp8);
double tmp176 = -(tmp1*tmp4*tmp11);
double tmp177 = tmp32 + tmp175 + tmp33 + tmp176;
double tmp178 = 2*tmp177;
double tmp179 = -(tmp9*tmp60);
double tmp180 = tmp178 + tmp179;
double tmp181 = tmp2*tmp180;
double tmp182 = tmp0*tmp3*tmp8;
double tmp183 = tmp1*tmp3*tmp11;
double tmp184 = tmp182 + tmp35 + tmp183 + tmp36;
double tmp185 = -2*tmp184;
double tmp186 = tmp7*tmp64;
double tmp187 = tmp185 + tmp186;
double tmp188 = tmp5*tmp187;
double tmp189 = tmp161 + tmp162 + tmp163 + tmp164 + tmp165 + tmp166 + tmp167 + tmp168 + tmp169 + tmp170 + tmp171 + tmp172 + tmp173 + tmp174 + tmp181 + tmp188;
double tmp190 = Dt12*tmp189;
double tmp191 = tmp49 + tmp190;
double tmp192 = qOS2*qOS3;
double tmp193 = qOS1*tmp26;
double tmp194 = tmp192 + tmp193;
double tmp195 = -(tmp9*tmp3);
double tmp196 = tmp7*tmp4;
double tmp197 = tmp1*tmp8;
double tmp198 = -(tmp0*tmp11);
double tmp199 = tmp195 + tmp196 + tmp197 + tmp198;
double tmp200 = Dt01*tmp199;
double tmp201 = -(tmp2*tmp7);
double tmp202 = -(tmp5*tmp9);
double tmp203 = 2*tmp5*tmp7*tmp3*tmp4;
double tmp204 = -2*tmp2*tmp9*tmp3*tmp4;
double tmp205 = 2*tmp2*tmp7*tmp6;
double tmp206 = 2*tmp5*tmp9*tmp6;
double tmp207 = -2*tmp2*tmp0*tmp3*tmp8;
double tmp208 = 2*tmp5*tmp1*tmp3*tmp8;
double tmp209 = 2*tmp2*tmp7*tmp10;
double tmp210 = 2*tmp5*tmp9*tmp10;
double tmp211 = -2*tmp2*tmp0*tmp4*tmp11;
double tmp212 = 2*tmp5*tmp1*tmp4*tmp11;
double tmp213 = tmp9*tmp3*tmp8;
double tmp214 = tmp52 + tmp213 + tmp62 + tmp81;
double tmp215 = -2*tmp214;
double tmp216 = tmp71 + tmp215;
double tmp217 = tmp28*tmp216;
double tmp218 = -(tmp0*tmp14);
double tmp219 = 2*tmp76;
double tmp220 = tmp218 + tmp219;
double tmp221 = tmp30*tmp220;
double tmp222 = tmp201 + tmp202 + tmp203 + tmp204 + tmp205 + tmp206 + tmp207 + tmp208 + tmp209 + tmp210 + tmp211 + tmp212 + tmp77 + tmp78 + tmp217 + tmp221;
double tmp223 = Dt12*tmp222;
double tmp224 = tmp200 + tmp223;
double tmp225 = -2*tmp19;
double tmp226 = 1 + tmp225 + tmp56;
double tmp227 = -2*tmp2*tmp0*tmp4*tmp8;
double tmp228 = 2*tmp5*tmp1*tmp4*tmp8;
double tmp229 = 2*tmp2*tmp0*tmp3*tmp11;
double tmp230 = -2*tmp5*tmp1*tmp3*tmp11;
double tmp231 = -2*tmp2*tmp7*tmp8*tmp11;
double tmp232 = -2*tmp5*tmp9*tmp8*tmp11;
double tmp233 = 2*tmp5*tmp7*tmp27;
double tmp234 = -2*tmp2*tmp9*tmp27;
double tmp235 = -(tmp0*tmp51);
double tmp236 = tmp85 + tmp235;
double tmp237 = tmp28*tmp236;
double tmp238 = -(tmp7*tmp3*tmp11);
double tmp239 = tmp52 + tmp61 + tmp238 + tmp73;
double tmp240 = 2*tmp239;
double tmp241 = -(tmp1*tmp54);
double tmp242 = tmp240 + tmp241;
double tmp243 = tmp30*tmp242;
double tmp244 = tmp65 + tmp66 + tmp67 + tmp68 + tmp69 + tmp70 + tmp227 + tmp228 + tmp229 + tmp230 + tmp231 + tmp232 + tmp233 + tmp234 + tmp237 + tmp243;
double tmp245 = Dt12*tmp244;
double tmp246 = tmp49 + tmp245;
double tmp247 = -(qOS3*tmp26);
double tmp248 = tmp41 + tmp247;
double tmp249 = tmp1*tmp3;
double tmp250 = -(tmp0*tmp4);
double tmp251 = tmp9*tmp8;
double tmp252 = -(tmp7*tmp11);
double tmp253 = tmp249 + tmp250 + tmp251 + tmp252;
double tmp254 = Dt01*tmp253;
double tmp255 = tmp30*tmp7;
double tmp256 = -(tmp28*tmp9);
double tmp257 = 2*tmp30*tmp0*tmp3*tmp8;
double tmp258 = 2*tmp28*tmp1*tmp3*tmp8;
double tmp259 = -2*tmp28*tmp0*tmp4*tmp8;
double tmp260 = 2*tmp30*tmp1*tmp4*tmp8;
double tmp261 = -2*tmp30*tmp7*tmp10;
double tmp262 = 2*tmp28*tmp9*tmp10;
double tmp263 = -2*tmp28*tmp0*tmp3*tmp11;
double tmp264 = 2*tmp30*tmp1*tmp3*tmp11;
double tmp265 = -2*tmp30*tmp0*tmp4*tmp11;
double tmp266 = -2*tmp28*tmp1*tmp4*tmp11;
double tmp267 = -2*tmp30*tmp7*tmp27;
double tmp268 = 2*tmp28*tmp9*tmp27;
double tmp269 = tmp9*tmp4*tmp8;
double tmp270 = -(tmp7*tmp4*tmp11);
double tmp271 = tmp58 + tmp269 + tmp59 + tmp270;
double tmp272 = 2*tmp271;
double tmp273 = -(tmp0*tmp60);
double tmp274 = tmp272 + tmp273;
double tmp275 = tmp2*tmp274;
double tmp276 = -2*tmp86;
double tmp277 = -(tmp1*tmp64);
double tmp278 = tmp276 + tmp277;
double tmp279 = tmp5*tmp278;
double tmp280 = tmp255 + tmp256 + tmp257 + tmp258 + tmp259 + tmp260 + tmp261 + tmp262 + tmp263 + tmp264 + tmp265 + tmp266 + tmp267 + tmp268 + tmp275 + tmp279;
double tmp281 = Dt12*tmp280;
double tmp282 = tmp254 + tmp281;
double tmp283 = -2*tmp5*tmp0*tmp3*tmp8;
double tmp284 = -2*tmp2*tmp1*tmp3*tmp8;
double tmp285 = 2*tmp5*tmp7*tmp10;
double tmp286 = -2*tmp2*tmp9*tmp10;
double tmp287 = -2*tmp5*tmp0*tmp4*tmp11;
double tmp288 = -2*tmp2*tmp1*tmp4*tmp11;
double tmp289 = 2*tmp2*tmp7*tmp8*tmp11;
double tmp290 = 2*tmp5*tmp9*tmp8*tmp11;
double tmp291 = -(tmp9*tmp4*tmp11);
double tmp292 = tmp79 + tmp72 + tmp291 + tmp73;
double tmp293 = 2*tmp292;
double tmp294 = tmp71 + tmp293;
double tmp295 = tmp30*tmp294;
double tmp296 = tmp0*tmp14;
double tmp297 = -2*tmp76;
double tmp298 = tmp296 + tmp297;
double tmp299 = tmp28*tmp298;
double tmp300 = tmp65 + tmp66 + tmp67 + tmp68 + tmp69 + tmp70 + tmp283 + tmp284 + tmp285 + tmp286 + tmp287 + tmp288 + tmp289 + tmp290 + tmp295 + tmp299;
double tmp301 = Dt12*tmp300;
double tmp302 = tmp49 + tmp301;
double tmp303 = tmp9*tmp3;
double tmp304 = -(tmp7*tmp4);
double tmp305 = -(tmp1*tmp8);
double tmp306 = tmp0*tmp11;
double tmp307 = tmp303 + tmp304 + tmp305 + tmp306;
double tmp308 = Dt01*tmp307;
double tmp309 = tmp2*tmp7;
double tmp310 = tmp5*tmp9;
double tmp311 = -2*tmp5*tmp7*tmp3*tmp4;
double tmp312 = 2*tmp2*tmp9*tmp3*tmp4;
double tmp313 = -2*tmp2*tmp7*tmp6;
double tmp314 = -2*tmp5*tmp9*tmp6;
double tmp315 = -2*tmp5*tmp0*tmp4*tmp8;
double tmp316 = -2*tmp2*tmp1*tmp4*tmp8;
double tmp317 = 2*tmp5*tmp0*tmp3*tmp11;
double tmp318 = 2*tmp2*tmp1*tmp3*tmp11;
double tmp319 = -2*tmp2*tmp7*tmp27;
double tmp320 = -2*tmp5*tmp9*tmp27;
double tmp321 = -(tmp7*tmp4*tmp8);
double tmp322 = tmp79 + tmp321 + tmp80 + tmp81;
double tmp323 = 2*tmp322;
double tmp324 = -(tmp1*tmp51);
double tmp325 = tmp323 + tmp324;
double tmp326 = tmp28*tmp325;
double tmp327 = tmp0*tmp54;
double tmp328 = tmp85 + tmp327;
double tmp329 = tmp30*tmp328;
double tmp330 = tmp309 + tmp310 + tmp311 + tmp312 + tmp313 + tmp314 + tmp315 + tmp316 + tmp317 + tmp318 + tmp77 + tmp78 + tmp319 + tmp320 + tmp326 + tmp329;
double tmp331 = Dt12*tmp330;
double tmp332 = tmp308 + tmp331;
double tmp333 = -(tmp0*tmp3);
double tmp334 = -(tmp1*tmp4);
double tmp335 = tmp7*tmp8;
double tmp336 = tmp9*tmp11;
double tmp337 = tmp333 + tmp334 + tmp335 + tmp336;
double tmp338 = Dt01*tmp337;
double tmp339 = -(tmp28*tmp7);
double tmp340 = -(tmp30*tmp9);
double tmp341 = -2*tmp28*tmp0*tmp3*tmp8;
double tmp342 = 2*tmp30*tmp1*tmp3*tmp8;
double tmp343 = -2*tmp30*tmp0*tmp4*tmp8;
double tmp344 = -2*tmp28*tmp1*tmp4*tmp8;
double tmp345 = 2*tmp28*tmp7*tmp10;
double tmp346 = 2*tmp30*tmp9*tmp10;
double tmp347 = -2*tmp30*tmp0*tmp3*tmp11;
double tmp348 = -2*tmp28*tmp1*tmp3*tmp11;
double tmp349 = 2*tmp28*tmp0*tmp4*tmp11;
double tmp350 = -2*tmp30*tmp1*tmp4*tmp11;
double tmp351 = 2*tmp28*tmp7*tmp27;
double tmp352 = 2*tmp30*tmp9*tmp27;
double tmp353 = 2*tmp86;
double tmp354 = -(tmp1*tmp60);
double tmp355 = tmp353 + tmp354;
double tmp356 = tmp2*tmp355;
double tmp357 = -(tmp7*tmp3*tmp8);
double tmp358 = -(tmp9*tmp3*tmp11);
double tmp359 = tmp357 + tmp82 + tmp358 + tmp74;
double tmp360 = -2*tmp359;
double tmp361 = tmp0*tmp64;
double tmp362 = tmp360 + tmp361;
double tmp363 = tmp5*tmp362;
double tmp364 = tmp339 + tmp340 + tmp341 + tmp342 + tmp343 + tmp344 + tmp345 + tmp346 + tmp347 + tmp348 + tmp349 + tmp350 + tmp351 + tmp352 + tmp356 + tmp363;
double tmp365 = Dt12*tmp364;
double tmp366 = tmp338 + tmp365;
double tmp367 = 1 + tmp225 + tmp55;
double tmp368 = -(qOS1*tmp26);
double tmp369 = tmp192 + tmp368;
double tmp370 = qOS2*tmp26;
double tmp371 = tmp38 + tmp370;
J(1+_OFF,4+_OFF) = 8*tmp15*tmp16*tmp18*tmp40*tmp123 + 8*tmp15*tmp16*tmp18*tmp43*tmp160 + 4*tmp15*tmp16*tmp18*tmp57*tmp191;
J(1+_OFF,5+_OFF) = 8*tmp15*tmp16*tmp18*tmp40*tmp224 + 8*tmp15*tmp16*tmp18*tmp43*tmp246 + 4*tmp15*tmp16*tmp18*tmp57*tmp282;
J(1+_OFF,6+_OFF) = 8*tmp15*tmp16*tmp18*tmp40*tmp302 + 8*tmp15*tmp16*tmp18*tmp43*tmp332 + 4*tmp15*tmp16*tmp18*tmp57*tmp366;
J(2+_OFF,4+_OFF) = 8*tmp15*tmp16*tmp18*tmp194*tmp123 + 4*tmp15*tmp16*tmp18*tmp226*tmp160 + 8*tmp15*tmp16*tmp18*tmp248*tmp191;
J(2+_OFF,5+_OFF) = 8*tmp15*tmp16*tmp18*tmp194*tmp224 + 4*tmp15*tmp16*tmp18*tmp226*tmp246 + 8*tmp15*tmp16*tmp18*tmp248*tmp282;
J(2+_OFF,6+_OFF) = 8*tmp15*tmp16*tmp18*tmp194*tmp302 + 4*tmp15*tmp16*tmp18*tmp226*tmp332 + 8*tmp15*tmp16*tmp18*tmp248*tmp366;
J(3+_OFF,4+_OFF) = 4*tmp15*tmp16*tmp18*tmp367*tmp123 + 8*tmp15*tmp16*tmp18*tmp369*tmp160 + 8*tmp15*tmp16*tmp18*tmp371*tmp191;
J(3+_OFF,5+_OFF) = 4*tmp15*tmp16*tmp18*tmp367*tmp224 + 8*tmp15*tmp16*tmp18*tmp369*tmp246 + 8*tmp15*tmp16*tmp18*tmp371*tmp282;
J(3+_OFF,6+_OFF) = 4*tmp15*tmp16*tmp18*tmp367*tmp302 + 8*tmp15*tmp16*tmp18*tmp369*tmp332 + 8*tmp15*tmp16*tmp18*tmp371*tmp366;
