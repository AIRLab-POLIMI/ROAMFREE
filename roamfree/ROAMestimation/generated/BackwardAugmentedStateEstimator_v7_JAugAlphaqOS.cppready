double tmp0 = qos(1+_OFF);
double tmp1 = qos(3+_OFF);
double tmp2 = qos(2+_OFF);
double tmp3 = qos(4+_OFF);
double tmp4 = x0(7+_OFF);
double tmp5 = x0(6+_OFF);
double tmp6 = x0(5+_OFF);
double tmp7 = x0(4+_OFF);
double tmp8 = x1(4+_OFF);
double tmp9 = x1(5+_OFF);
double tmp10 = x1(6+_OFF);
double tmp11 = x1(7+_OFF);
double tmp12 = x2(4+_OFF);
double tmp13 = x2(5+_OFF);
double tmp14 = x2(6+_OFF);
double tmp15 = x2(7+_OFF);
double tmp16 = Dt01 + Dt12;
double tmp17 = 1/tmp16;
double tmp18 = 1/Dt01;
double tmp19 = std::pow(tmp7,2);
double tmp20 = std::pow(tmp6,2);
double tmp21 = std::pow(tmp5,2);
double tmp22 = std::pow(tmp4,2);
double tmp23 = tmp19 + tmp20 + tmp21 + tmp22;
double tmp24 = 1/tmp23;
double tmp25 = 1/Dt12;
double tmp26 = std::pow(tmp8,2);
double tmp27 = std::pow(tmp9,2);
double tmp28 = std::pow(tmp10,2);
double tmp29 = std::pow(tmp11,2);
double tmp30 = tmp26 + tmp27 + tmp28 + tmp29;
double tmp31 = 1/tmp30;
double tmp32 = 1.*tmp2;
double tmp33 = 0. + tmp32;
double tmp34 = -0.01*tmp1;
double tmp35 = 0. + tmp34;
double tmp36 = -0.01*tmp2;
double tmp37 = 0. + tmp36;
double tmp38 = 1.*tmp1;
double tmp39 = 0. + tmp38;
double tmp40 = 1.*tmp0;
double tmp41 = 0. + tmp40;
double tmp42 = 0.01*tmp3;
double tmp43 = 0. + tmp42;
double tmp44 = 0.01*tmp0;
double tmp45 = 0. + tmp44;
double tmp46 = 1.*tmp3;
double tmp47 = 0. + tmp46;
double tmp48 = std::pow(tmp12,2);
double tmp49 = std::pow(tmp13,2);
double tmp50 = -tmp49;
double tmp51 = std::pow(tmp14,2);
double tmp52 = std::pow(tmp15,2);
double tmp53 = tmp4*tmp8;
double tmp54 = tmp5*tmp9;
double tmp55 = -(tmp6*tmp10);
double tmp56 = -(tmp7*tmp11);
double tmp57 = tmp53 + tmp54 + tmp55 + tmp56;
double tmp58 = 2*tmp18*tmp24*tmp57;
double tmp59 = -(tmp11*tmp12);
double tmp60 = -(tmp10*tmp13);
double tmp61 = tmp9*tmp14;
double tmp62 = tmp8*tmp15;
double tmp63 = tmp59 + tmp60 + tmp61 + tmp62;
double tmp64 = 2*tmp25*tmp31*tmp63;
double tmp65 = tmp58 + tmp64;
double tmp66 = tmp14*tmp15;
double tmp67 = tmp5*tmp8;
double tmp68 = -(tmp4*tmp9);
double tmp69 = -(tmp7*tmp10);
double tmp70 = tmp6*tmp11;
double tmp71 = tmp67 + tmp68 + tmp69 + tmp70;
double tmp72 = 2*tmp18*tmp24*tmp71;
double tmp73 = -(tmp10*tmp12);
double tmp74 = tmp11*tmp13;
double tmp75 = tmp8*tmp14;
double tmp76 = -(tmp9*tmp15);
double tmp77 = tmp73 + tmp74 + tmp75 + tmp76;
double tmp78 = 2*tmp25*tmp31*tmp77;
double tmp79 = tmp72 + tmp78;
double tmp80 = tmp6*tmp8;
double tmp81 = -(tmp7*tmp9);
double tmp82 = tmp4*tmp10;
double tmp83 = -(tmp5*tmp11);
double tmp84 = tmp80 + tmp81 + tmp82 + tmp83;
double tmp85 = 2*tmp18*tmp24*tmp84;
double tmp86 = -(tmp9*tmp12);
double tmp87 = tmp8*tmp13;
double tmp88 = -(tmp11*tmp14);
double tmp89 = tmp10*tmp15;
double tmp90 = tmp86 + tmp87 + tmp88 + tmp89;
double tmp91 = 2*tmp25*tmp31*tmp90;
double tmp92 = tmp85 + tmp91;
double tmp93 = tmp13*tmp15;
double tmp94 = tmp13*tmp14;
double tmp95 = -tmp51;
double tmp96 = -tmp52;
double tmp97 = tmp12*tmp13;
double tmp98 = tmp97 + tmp66;
double tmp99 = 4*tmp17*tmp98*tmp65;
double tmp100 = tmp48 + tmp50 + tmp51 + tmp96;
double tmp101 = 2*tmp17*tmp100*tmp79;
double tmp102 = -(tmp12*tmp15);
double tmp103 = tmp94 + tmp102;
double tmp104 = 4*tmp17*tmp103*tmp92;
double tmp105 = tmp99 + tmp101 + tmp104;
double tmp106 = 0.01*tmp2;
double tmp107 = 0. + tmp106;
double tmp108 = -0.01*tmp3;
double tmp109 = 0. + tmp108;
double tmp110 = tmp48 + tmp50 + tmp95 + tmp52;
double tmp111 = 2*tmp17*tmp110*tmp65;
double tmp112 = -(tmp12*tmp13);
double tmp113 = tmp112 + tmp66;
double tmp114 = 4*tmp17*tmp113*tmp79;
double tmp115 = tmp12*tmp14;
double tmp116 = tmp115 + tmp93;
double tmp117 = 4*tmp17*tmp116*tmp92;
double tmp118 = tmp111 + tmp114 + tmp117;
double tmp119 = -(tmp12*tmp14);
double tmp120 = tmp119 + tmp93;
double tmp121 = 4*tmp17*tmp120*tmp65;
double tmp122 = tmp12*tmp15;
double tmp123 = tmp94 + tmp122;
double tmp124 = 4*tmp17*tmp123*tmp79;
double tmp125 = tmp48 + tmp49 + tmp95 + tmp96;
double tmp126 = 2*tmp17*tmp125*tmp92;
double tmp127 = tmp121 + tmp124 + tmp126;
double tmp128 = tmp109*tmp47;
double tmp129 = tmp45*tmp33;
double tmp130 = 0.01*tmp1;
double tmp131 = 0. + tmp130;
double tmp132 = 2*tmp41*tmp37;
double tmp133 = -2*tmp35*tmp47;
double tmp134 = tmp45*tmp41;
double tmp135 = tmp37*tmp33;
double tmp136 = tmp45*tmp39;
double tmp137 = tmp33*tmp43;
double tmp138 = 2*tmp41*tmp35;
double tmp139 = -2*tmp107*tmp47;
double tmp140 = tmp33*tmp35;
double tmp141 = tmp45*tmp47;
double tmp142 = tmp39*tmp109;
double tmp143 = 2*tmp41*tmp109;
double tmp144 = -2*tmp45*tmp47;
double tmp145 = tmp37*tmp47;
double tmp146 = -(tmp45*tmp41);
double tmp147 = tmp131*tmp39;
double tmp148 = tmp35*tmp39;
double tmp149 = tmp43*tmp47;
double tmp150 = -2*tmp45*tmp33;
double tmp151 = -2*tmp39*tmp43;
double tmp152 = tmp107*tmp39;
double tmp153 = -2*tmp45*tmp39;
double tmp154 = -2*tmp33*tmp109;
double tmp155 = tmp107*tmp33;
double tmp156 = -2*tmp33*tmp131;
double tmp157 = -2*tmp37*tmp39;
double tmp158 = tmp131*tmp47;
J(1+_OFF,1+_OFF) = 2*(tmp41*tmp35 + tmp136 + tmp137 + tmp145)*tmp105 + 2*(tmp140 - tmp37*tmp39 - tmp41*tmp43 + tmp141)*tmp118 + (tmp132 + 2*tmp45*tmp33 + tmp151 + tmp133)*tmp127;
J(1+_OFF,2+_OFF) = 2*(tmp41*tmp107 + tmp129 + tmp142 + tmp35*tmp47)*tmp105 + 2*(tmp146 + tmp155 - tmp35*tmp39 + tmp128)*tmp118 + (tmp138 + tmp153 + 2*tmp33*tmp109 + tmp139)*tmp127;
J(1+_OFF,3+_OFF) = 2*(tmp134 + tmp135 + tmp147 + tmp128)*tmp105 + 2*(-(tmp41*tmp37) + tmp129 - tmp39*tmp109 + tmp158)*tmp118 + (2*tmp33*tmp131 + tmp157 + tmp143 + tmp144)*tmp127;
J(2+_OFF,1+_OFF) = (tmp132 + tmp150 + 2*tmp39*tmp43 + tmp133)*tmp105 + 2*(tmp134 + tmp135 + tmp148 + tmp149)*tmp118 + 2*(-(tmp41*tmp35) + tmp136 + tmp137 - tmp37*tmp47)*tmp127;
J(2+_OFF,2+_OFF) = (tmp138 + 2*tmp45*tmp39 + tmp154 + tmp139)*tmp105 + 2*(tmp140 + tmp152 + tmp41*tmp109 + tmp141)*tmp118 + 2*(-(tmp41*tmp107) + tmp129 + tmp142 - tmp35*tmp47)*tmp127;
J(2+_OFF,3+_OFF) = (tmp156 + 2*tmp37*tmp39 + tmp143 + tmp144)*tmp105 + 2*(tmp41*tmp131 + tmp136 + tmp33*tmp109 + tmp145)*tmp118 + 2*(tmp146 + tmp135 + tmp147 - tmp109*tmp47)*tmp127;
J(3+_OFF,1+_OFF) = 2*(tmp146 - tmp37*tmp33 + tmp148 + tmp149)*tmp105 + (tmp132 + tmp150 + tmp151 + 2*tmp35*tmp47)*tmp118 + 2*(tmp140 + tmp37*tmp39 + tmp41*tmp43 + tmp141)*tmp127;
J(3+_OFF,2+_OFF) = 2*(-(tmp33*tmp35) + tmp152 - tmp41*tmp109 + tmp141)*tmp105 + (tmp138 + tmp153 + tmp154 + 2*tmp107*tmp47)*tmp118 + 2*(tmp134 + tmp155 + tmp148 + tmp128)*tmp127;
J(3+_OFF,3+_OFF) = 2*(-(tmp41*tmp131) + tmp136 - tmp33*tmp109 + tmp145)*tmp105 + (tmp156 + tmp157 + tmp143 + 2*tmp45*tmp47)*tmp118 + 2*(tmp41*tmp37 + tmp129 + tmp142 + tmp158)*tmp127;
