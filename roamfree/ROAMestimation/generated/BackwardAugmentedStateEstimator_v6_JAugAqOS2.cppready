double tmp0 = std::pow(qOS2,2);
double tmp1 = std::pow(qOS1,2);
double tmp2 = -tmp1;
double tmp3 = -tmp0;
double tmp4 = std::pow(qOS3,2);
double tmp5 = -tmp4;
double tmp6 = 1 + tmp2 + tmp3 + tmp5;
double tmp7 = std::pow(Dt12,2);
double tmp8 = x1(3+_OFF);
double tmp9 = x1(4+_OFF);
double tmp10 = x1(5+_OFF);
double tmp11 = Dt01 + Dt12;
double tmp12 = x0(4+_OFF);
double tmp13 = x0(7+_OFF);
double tmp14 = x1(6+_OFF);
double tmp15 = x0(5+_OFF);
double tmp16 = x0(6+_OFF);
double tmp17 = x1(7+_OFF);
double tmp18 = x2(4+_OFF);
double tmp19 = x2(5+_OFF);
double tmp20 = std::pow(tmp14,2);
double tmp21 = x1(2+_OFF);
double tmp22 = -tmp21;
double tmp23 = std::pow(tmp19,2);
double tmp24 = std::pow(tmp10,2);
double tmp25 = x0(3+_OFF);
double tmp26 = -tmp8;
double tmp27 = x2(3+_OFF);
double tmp28 = x2(6+_OFF);
double tmp29 = std::pow(tmp17,2);
double tmp30 = x1(1+_OFF);
double tmp31 = std::pow(tmp28,2);
double tmp32 = std::pow(Dt01,2);
double tmp33 = tmp32*sO3;
double tmp34 = tmp25 + tmp26;
double tmp35 = tmp7*tmp34;
double tmp36 = sO3 + tmp26 + tmp27;
double tmp37 = Dt01*Dt12*tmp36;
double tmp38 = tmp33 + tmp35 + tmp37;
double tmp39 = x2(7+_OFF);
double tmp40 = x0(1+_OFF);
double tmp41 = -tmp30;
double tmp42 = x2(1+_OFF);
double tmp43 = x0(2+_OFF);
double tmp44 = tmp43 + tmp22;
double tmp45 = x2(2+_OFF);
double tmp46 = std::pow(tmp39,2);
double tmp47 = 1/Dt01;
double tmp48 = std::pow(Dt12,-2);
double tmp49 = 1/tmp11;
double tmp50 = 1/std::sqrt(tmp6);
double tmp51 = tmp32*sO2;
double tmp52 = tmp7*tmp44;
double tmp53 = sO2 + tmp22 + tmp45;
double tmp54 = Dt01*Dt12*tmp53;
double tmp55 = tmp51 + tmp52 + tmp54;
double tmp56 = tmp32*sO1;
double tmp57 = tmp40 + tmp41;
double tmp58 = tmp7*tmp57;
double tmp59 = sO1 + tmp41 + tmp42;
double tmp60 = Dt01*Dt12*tmp59;
double tmp61 = tmp56 + tmp58 + tmp60;
double tmp62 = -tmp40;
double tmp63 = tmp62 + tmp30;
double tmp64 = Dt12*tmp63;
double tmp65 = -tmp42;
double tmp66 = tmp30 + tmp65;
double tmp67 = Dt01*tmp66;
double tmp68 = tmp64 + tmp67;
double tmp69 = std::pow(tmp11,-2);
double tmp70 = 1/Dt12;
double tmp71 = std::pow(tmp18,2);
double tmp72 = std::pow(tmp9,2);
double tmp73 = tmp22 + tmp45;
double tmp74 = tmp26 + tmp27;
double tmp75 = -(tmp7*tmp25);
double tmp76 = Dt01*Dt12*tmp8;
double tmp77 = tmp7*tmp8;
double tmp78 = -2*tmp7*sO2*tmp15*tmp9;
double tmp79 = 2*tmp7*sO1*tmp16*tmp9;
double tmp80 = 2*tmp7*sO2*tmp12*tmp10;
double tmp81 = -2*tmp7*sO1*tmp13*tmp10;
double tmp82 = 2*Dt01*tmp11*sO3*tmp24;
double tmp83 = -2*tmp7*sO1*tmp12*tmp14;
double tmp84 = -2*tmp7*sO2*tmp13*tmp14;
double tmp85 = 2*Dt01*tmp11*sO3*tmp20;
double tmp86 = 2*tmp7*sO1*tmp15*tmp17;
double tmp87 = 2*tmp7*sO2*tmp16*tmp17;
double tmp88 = -2*Dt01*tmp11*sO1*tmp10*tmp17;
double tmp89 = -2*Dt01*tmp11*sO2*tmp14*tmp17;
double tmp90 = -(Dt01*Dt12*tmp27);
double tmp91 = 2*Dt01*Dt12*sO2*tmp10*tmp18;
double tmp92 = -2*Dt01*Dt12*sO1*tmp14*tmp18;
double tmp93 = -2*Dt01*Dt12*sO2*tmp9*tmp19;
double tmp94 = -2*Dt01*Dt12*sO1*tmp17*tmp19;
double tmp95 = 4*tmp7*sO1*tmp13*tmp9*tmp18*tmp19;
double tmp96 = 4*tmp7*sO1*tmp16*tmp10*tmp18*tmp19;
double tmp97 = -4*Dt01*tmp11*sO3*tmp9*tmp10*tmp18*tmp19;
double tmp98 = -4*tmp7*sO1*tmp15*tmp14*tmp18*tmp19;
double tmp99 = 2*Dt01*tmp11*sO1*tmp10*tmp14*tmp18*tmp19;
double tmp100 = 2*Dt01*tmp11*sO2*tmp20*tmp18*tmp19;
double tmp101 = -4*tmp7*sO1*tmp12*tmp17*tmp18*tmp19;
double tmp102 = 2*Dt01*tmp11*sO1*tmp9*tmp17*tmp18*tmp19;
double tmp103 = 4*Dt01*tmp11*sO3*tmp14*tmp17*tmp18*tmp19;
double tmp104 = -2*Dt01*tmp11*sO2*tmp29*tmp18*tmp19;
double tmp105 = Dt12*tmp44;
double tmp106 = Dt01*tmp73;
double tmp107 = tmp105 + tmp106;
double tmp108 = 2*Dt12*tmp107*tmp18*tmp19;
double tmp109 = -4*tmp7*sO1*tmp16*tmp9*tmp23;
double tmp110 = 4*tmp7*sO1*tmp13*tmp10*tmp23;
double tmp111 = -4*Dt01*tmp11*sO3*tmp24*tmp23;
double tmp112 = 4*tmp7*sO1*tmp12*tmp14*tmp23;
double tmp113 = -2*Dt01*tmp11*sO1*tmp9*tmp14*tmp23;
double tmp114 = -4*Dt01*tmp11*sO3*tmp20*tmp23;
double tmp115 = -4*tmp7*sO1*tmp15*tmp17*tmp23;
double tmp116 = 2*Dt01*tmp11*sO1*tmp10*tmp17*tmp23;
double tmp117 = 4*Dt01*tmp11*sO2*tmp14*tmp17*tmp23;
double tmp118 = 2*tmp38*tmp23;
double tmp119 = 2*Dt01*Dt12*sO1*tmp9*tmp28;
double tmp120 = -2*Dt01*Dt12*sO2*tmp17*tmp28;
double tmp121 = 4*tmp7*sO2*tmp13*tmp9*tmp18*tmp28;
double tmp122 = 4*tmp7*sO2*tmp16*tmp10*tmp18*tmp28;
double tmp123 = -2*Dt01*tmp11*sO1*tmp24*tmp18*tmp28;
double tmp124 = -4*tmp7*sO2*tmp15*tmp14*tmp18*tmp28;
double tmp125 = -4*Dt01*tmp11*sO3*tmp9*tmp14*tmp18*tmp28;
double tmp126 = -2*Dt01*tmp11*sO2*tmp10*tmp14*tmp18*tmp28;
double tmp127 = -4*tmp7*sO2*tmp12*tmp17*tmp18*tmp28;
double tmp128 = 2*Dt01*tmp11*sO2*tmp9*tmp17*tmp18*tmp28;
double tmp129 = -4*Dt01*tmp11*sO3*tmp10*tmp17*tmp18*tmp28;
double tmp130 = 2*Dt01*tmp11*sO1*tmp29*tmp18*tmp28;
double tmp131 = 2*Dt12*tmp68*tmp18*tmp28;
double tmp132 = 4*tmp7*sO1*tmp15*tmp9*tmp19*tmp28;
double tmp133 = -4*tmp7*sO2*tmp16*tmp9*tmp19*tmp28;
double tmp134 = -4*tmp7*sO1*tmp12*tmp10*tmp19*tmp28;
double tmp135 = 4*tmp7*sO2*tmp13*tmp10*tmp19*tmp28;
double tmp136 = 2*Dt01*tmp11*sO1*tmp9*tmp10*tmp19*tmp28;
double tmp137 = 4*tmp7*sO2*tmp12*tmp14*tmp19*tmp28;
double tmp138 = 4*tmp7*sO1*tmp13*tmp14*tmp19*tmp28;
double tmp139 = -2*Dt01*tmp11*sO2*tmp9*tmp14*tmp19*tmp28;
double tmp140 = -4*tmp7*sO2*tmp15*tmp17*tmp19*tmp28;
double tmp141 = -4*tmp7*sO1*tmp16*tmp17*tmp19*tmp28;
double tmp142 = -2*Dt01*tmp11*sO2*tmp10*tmp17*tmp19*tmp28;
double tmp143 = -2*Dt01*tmp11*sO1*tmp14*tmp17*tmp19*tmp28;
double tmp144 = 4*tmp7*sO2*tmp15*tmp9*tmp31;
double tmp145 = -4*tmp7*sO2*tmp12*tmp10*tmp31;
double tmp146 = 2*Dt01*tmp11*sO2*tmp9*tmp10*tmp31;
double tmp147 = -4*Dt01*tmp11*sO3*tmp24*tmp31;
double tmp148 = 4*tmp7*sO2*tmp13*tmp14*tmp31;
double tmp149 = -4*Dt01*tmp11*sO3*tmp20*tmp31;
double tmp150 = -4*tmp7*sO2*tmp16*tmp17*tmp31;
double tmp151 = 4*Dt01*tmp11*sO1*tmp10*tmp17*tmp31;
double tmp152 = 2*Dt01*tmp11*sO2*tmp14*tmp17*tmp31;
double tmp153 = 2*tmp38*tmp31;
double tmp154 = 2*Dt01*Dt12*sO1*tmp10*tmp39;
double tmp155 = 2*Dt01*Dt12*sO2*tmp14*tmp39;
double tmp156 = -4*tmp7*sO1*tmp15*tmp9*tmp18*tmp39;
double tmp157 = -4*tmp7*sO2*tmp16*tmp9*tmp18*tmp39;
double tmp158 = 4*tmp7*sO1*tmp12*tmp10*tmp18*tmp39;
double tmp159 = 4*tmp7*sO2*tmp13*tmp10*tmp18*tmp39;
double tmp160 = 2*Dt01*tmp11*sO1*tmp9*tmp10*tmp18*tmp39;
double tmp161 = 4*tmp7*sO2*tmp12*tmp14*tmp18*tmp39;
double tmp162 = -4*tmp7*sO1*tmp13*tmp14*tmp18*tmp39;
double tmp163 = 2*Dt01*tmp11*sO2*tmp9*tmp14*tmp18*tmp39;
double tmp164 = -4*tmp7*sO2*tmp15*tmp17*tmp18*tmp39;
double tmp165 = 4*tmp7*sO1*tmp16*tmp17*tmp18*tmp39;
double tmp166 = 2*Dt01*tmp11*sO2*tmp10*tmp17*tmp18*tmp39;
double tmp167 = -2*Dt01*tmp11*sO1*tmp14*tmp17*tmp18*tmp39;
double tmp168 = -4*tmp7*sO2*tmp13*tmp9*tmp19*tmp39;
double tmp169 = -4*tmp7*sO2*tmp16*tmp10*tmp19*tmp39;
double tmp170 = 2*Dt01*tmp11*sO1*tmp24*tmp19*tmp39;
double tmp171 = 4*tmp7*sO2*tmp15*tmp14*tmp19*tmp39;
double tmp172 = -4*Dt01*tmp11*sO3*tmp9*tmp14*tmp19*tmp39;
double tmp173 = -2*Dt01*tmp11*sO2*tmp10*tmp14*tmp19*tmp39;
double tmp174 = 4*Dt01*tmp11*sO1*tmp20*tmp19*tmp39;
double tmp175 = 4*tmp7*sO2*tmp12*tmp17*tmp19*tmp39;
double tmp176 = 2*Dt01*tmp11*sO2*tmp9*tmp17*tmp19*tmp39;
double tmp177 = -4*Dt01*tmp11*sO3*tmp10*tmp17*tmp19*tmp39;
double tmp178 = 2*Dt01*tmp11*sO1*tmp29*tmp19*tmp39;
double tmp179 = -2*tmp61*tmp19*tmp39;
double tmp180 = 4*tmp7*sO1*tmp13*tmp9*tmp28*tmp39;
double tmp181 = 4*tmp7*sO1*tmp16*tmp10*tmp28*tmp39;
double tmp182 = 4*Dt01*tmp11*sO3*tmp9*tmp10*tmp28*tmp39;
double tmp183 = 4*Dt01*tmp11*sO2*tmp24*tmp28*tmp39;
double tmp184 = -4*tmp7*sO1*tmp15*tmp14*tmp28*tmp39;
double tmp185 = -2*Dt01*tmp11*sO1*tmp10*tmp14*tmp28*tmp39;
double tmp186 = 2*Dt01*tmp11*sO2*tmp20*tmp28*tmp39;
double tmp187 = -4*tmp7*sO1*tmp12*tmp17*tmp28*tmp39;
double tmp188 = -2*Dt01*tmp11*sO1*tmp9*tmp17*tmp28*tmp39;
double tmp189 = -4*Dt01*tmp11*sO3*tmp14*tmp17*tmp28*tmp39;
double tmp190 = 2*Dt01*tmp11*sO2*tmp29*tmp28*tmp39;
double tmp191 = -2*tmp55*tmp28*tmp39;
double tmp192 = 4*tmp7*sO2*tmp15*tmp9*tmp46;
double tmp193 = -4*tmp7*sO1*tmp16*tmp9*tmp46;
double tmp194 = -4*tmp7*sO2*tmp12*tmp10*tmp46;
double tmp195 = 4*tmp7*sO1*tmp13*tmp10*tmp46;
double tmp196 = -2*Dt01*tmp11*sO2*tmp9*tmp10*tmp46;
double tmp197 = 4*tmp7*sO1*tmp12*tmp14*tmp46;
double tmp198 = 4*tmp7*sO2*tmp13*tmp14*tmp46;
double tmp199 = 2*Dt01*tmp11*sO1*tmp9*tmp14*tmp46;
double tmp200 = -4*tmp7*sO1*tmp15*tmp17*tmp46;
double tmp201 = -4*tmp7*sO2*tmp16*tmp17*tmp46;
double tmp202 = 2*Dt01*tmp11*sO1*tmp10*tmp17*tmp46;
double tmp203 = 2*Dt01*tmp11*sO2*tmp14*tmp17*tmp46;
double tmp204 = tmp75 + tmp76 + tmp77 + tmp78 + tmp79 + tmp80 + tmp81 + tmp82 + tmp83 + tmp84 + tmp85 + tmp86 + tmp87 + tmp88 + tmp89 + tmp90 + tmp91 + tmp92 + tmp93 + tmp94 + tmp95 + tmp96 + tmp97 + tmp98 + tmp99 + tmp100 + tmp101 + tmp102 + tmp103 + tmp104 + tmp108 + tmp109 + tmp110 + tmp111 + tmp112 + tmp113 + tmp114 + tmp115 + tmp116 + tmp117 + tmp118 + tmp119 + tmp120 + tmp121 + tmp122 + tmp123 + tmp124 + tmp125 + tmp126 + tmp127 + tmp128 + tmp129 + tmp130 + tmp131 + tmp132 + tmp133 + tmp134 + tmp135 + tmp136 + tmp137 + tmp138 + tmp139 + tmp140 + tmp141 + tmp142 + tmp143 + tmp144 + tmp145 + tmp146 + tmp147 + tmp148 + tmp149 + tmp150 + tmp151 + tmp152 + tmp153 + tmp154 + tmp155 + tmp156 + tmp157 + tmp158 + tmp159 + tmp160 + tmp161 + tmp162 + tmp163 + tmp164 + tmp165 + tmp166 + tmp167 + tmp168 + tmp169 + tmp170 + tmp171 + tmp172 + tmp173 + tmp174 + tmp175 + tmp176 + tmp177 + tmp178 + tmp179 + tmp180 + tmp181 + tmp182 + tmp183 + tmp184 + tmp185 + tmp186 + tmp187 + tmp188 + tmp189 + tmp190 + tmp191 + tmp192 + tmp193 + tmp194 + tmp195 + tmp196 + tmp197 + tmp198 + tmp199 + tmp200 + tmp201 + tmp202 + tmp203;
double tmp205 = std::sqrt(tmp6);
double tmp206 = 4*tmp69*sO3*tmp16*tmp9;
double tmp207 = 4*tmp47*Dt12*tmp69*sO3*tmp16*tmp9;
double tmp208 = -4*tmp69*sO2*tmp13*tmp9;
double tmp209 = -4*tmp47*Dt12*tmp69*sO2*tmp13*tmp9;
double tmp210 = -4*tmp69*sO2*tmp16*tmp10;
double tmp211 = -4*tmp47*Dt12*tmp69*sO2*tmp16*tmp10;
double tmp212 = -4*tmp69*sO3*tmp13*tmp10;
double tmp213 = -4*tmp47*Dt12*tmp69*sO3*tmp13*tmp10;
double tmp214 = -4*tmp69*sO3*tmp12*tmp14;
double tmp215 = -4*tmp47*Dt12*tmp69*sO3*tmp12*tmp14;
double tmp216 = 4*tmp69*sO2*tmp15*tmp14;
double tmp217 = 4*tmp47*Dt12*tmp69*sO2*tmp15*tmp14;
double tmp218 = 4*tmp69*sO2*tmp12*tmp17;
double tmp219 = 4*tmp47*Dt12*tmp69*sO2*tmp12*tmp17;
double tmp220 = 4*tmp69*sO3*tmp15*tmp17;
double tmp221 = 4*tmp47*Dt12*tmp69*sO3*tmp15*tmp17;
double tmp222 = -4*tmp69*sO3*tmp14*tmp18;
double tmp223 = -4*Dt01*tmp70*tmp69*sO3*tmp14*tmp18;
double tmp224 = 4*tmp69*sO2*tmp17*tmp18;
double tmp225 = 4*Dt01*tmp70*tmp69*sO2*tmp17*tmp18;
double tmp226 = 4*tmp48*sO2*tmp10*tmp14*tmp71;
double tmp227 = -4*tmp48*sO1*tmp20*tmp71;
double tmp228 = 4*tmp48*sO3*tmp10*tmp17*tmp71;
double tmp229 = -4*tmp48*sO1*tmp29*tmp71;
double tmp230 = -4*tmp69*sO2*tmp14*tmp19;
double tmp231 = -4*Dt01*tmp70*tmp69*sO2*tmp14*tmp19;
double tmp232 = -4*tmp69*sO3*tmp17*tmp19;
double tmp233 = -4*Dt01*tmp70*tmp69*sO3*tmp17*tmp19;
double tmp234 = 8*tmp69*sO2*tmp16*tmp9*tmp18*tmp19;
double tmp235 = 8*tmp47*Dt12*tmp69*sO2*tmp16*tmp9*tmp18*tmp19;
double tmp236 = 8*tmp69*sO3*tmp13*tmp9*tmp18*tmp19;
double tmp237 = 8*tmp47*Dt12*tmp69*sO3*tmp13*tmp9*tmp18*tmp19;
double tmp238 = 8*tmp69*sO3*tmp16*tmp10*tmp18*tmp19;
double tmp239 = 8*tmp47*Dt12*tmp69*sO3*tmp16*tmp10*tmp18*tmp19;
double tmp240 = -8*tmp69*sO2*tmp13*tmp10*tmp18*tmp19;
double tmp241 = -8*tmp47*Dt12*tmp69*sO2*tmp13*tmp10*tmp18*tmp19;
double tmp242 = -8*tmp69*sO2*tmp12*tmp14*tmp18*tmp19;
double tmp243 = -8*tmp47*Dt12*tmp69*sO2*tmp12*tmp14*tmp18*tmp19;
double tmp244 = -8*tmp69*sO3*tmp15*tmp14*tmp18*tmp19;
double tmp245 = -8*tmp47*Dt12*tmp69*sO3*tmp15*tmp14*tmp18*tmp19;
double tmp246 = -4*tmp48*sO2*tmp9*tmp14*tmp18*tmp19;
double tmp247 = -4*tmp48*sO3*tmp10*tmp14*tmp18*tmp19;
double tmp248 = -8*tmp69*sO3*tmp12*tmp17*tmp18*tmp19;
double tmp249 = -8*tmp47*Dt12*tmp69*sO3*tmp12*tmp17*tmp18*tmp19;
double tmp250 = 8*tmp69*sO2*tmp15*tmp17*tmp18*tmp19;
double tmp251 = 8*tmp47*Dt12*tmp69*sO2*tmp15*tmp17*tmp18*tmp19;
double tmp252 = -4*tmp48*sO3*tmp9*tmp17*tmp18*tmp19;
double tmp253 = 4*tmp48*sO2*tmp10*tmp17*tmp18*tmp19;
double tmp254 = -8*tmp69*sO3*tmp16*tmp9*tmp23;
double tmp255 = -8*tmp47*Dt12*tmp69*sO3*tmp16*tmp9*tmp23;
double tmp256 = 8*tmp69*sO2*tmp13*tmp9*tmp23;
double tmp257 = 8*tmp47*Dt12*tmp69*sO2*tmp13*tmp9*tmp23;
double tmp258 = 8*tmp69*sO2*tmp16*tmp10*tmp23;
double tmp259 = 8*tmp47*Dt12*tmp69*sO2*tmp16*tmp10*tmp23;
double tmp260 = 8*tmp69*sO3*tmp13*tmp10*tmp23;
double tmp261 = 8*tmp47*Dt12*tmp69*sO3*tmp13*tmp10*tmp23;
double tmp262 = 8*tmp69*sO3*tmp12*tmp14*tmp23;
double tmp263 = 8*tmp47*Dt12*tmp69*sO3*tmp12*tmp14*tmp23;
double tmp264 = -8*tmp69*sO2*tmp15*tmp14*tmp23;
double tmp265 = -8*tmp47*Dt12*tmp69*sO2*tmp15*tmp14*tmp23;
double tmp266 = 4*tmp48*sO3*tmp9*tmp14*tmp23;
double tmp267 = -4*tmp48*sO1*tmp20*tmp23;
double tmp268 = -8*tmp69*sO2*tmp12*tmp17*tmp23;
double tmp269 = -8*tmp47*Dt12*tmp69*sO2*tmp12*tmp17*tmp23;
double tmp270 = -8*tmp69*sO3*tmp15*tmp17*tmp23;
double tmp271 = -8*tmp47*Dt12*tmp69*sO3*tmp15*tmp17*tmp23;
double tmp272 = -4*tmp48*sO2*tmp9*tmp17*tmp23;
double tmp273 = -4*tmp48*sO1*tmp29*tmp23;
double tmp274 = 4*tmp69*sO3*tmp9*tmp28;
double tmp275 = 4*Dt01*tmp70*tmp69*sO3*tmp9*tmp28;
double tmp276 = 4*tmp69*sO2*tmp10*tmp28;
double tmp277 = 4*Dt01*tmp70*tmp69*sO2*tmp10*tmp28;
double tmp278 = -8*tmp69*sO2*tmp15*tmp9*tmp18*tmp28;
double tmp279 = -8*tmp47*Dt12*tmp69*sO2*tmp15*tmp9*tmp18*tmp28;
double tmp280 = 8*tmp69*sO2*tmp12*tmp10*tmp18*tmp28;
double tmp281 = 8*tmp47*Dt12*tmp69*sO2*tmp12*tmp10*tmp18*tmp28;
double tmp282 = -4*tmp48*sO2*tmp9*tmp10*tmp18*tmp28;
double tmp283 = 4*tmp48*sO3*tmp24*tmp18*tmp28;
double tmp284 = -8*tmp69*sO2*tmp13*tmp14*tmp18*tmp28;
double tmp285 = -8*tmp47*Dt12*tmp69*sO2*tmp13*tmp14*tmp18*tmp28;
double tmp286 = 8*tmp48*sO1*tmp9*tmp14*tmp18*tmp28;
double tmp287 = 8*tmp69*sO2*tmp16*tmp17*tmp18*tmp28;
double tmp288 = 8*tmp47*Dt12*tmp69*sO2*tmp16*tmp17*tmp18*tmp28;
double tmp289 = -8*tmp48*sO1*tmp10*tmp17*tmp18*tmp28;
double tmp290 = -4*tmp48*sO2*tmp14*tmp17*tmp18*tmp28;
double tmp291 = -4*tmp48*sO3*tmp29*tmp18*tmp28;
double tmp292 = 8*tmp69*sO3*tmp15*tmp9*tmp19*tmp28;
double tmp293 = 8*tmp47*Dt12*tmp69*sO3*tmp15*tmp9*tmp19*tmp28;
double tmp294 = 4*tmp48*sO2*tmp72*tmp19*tmp28;
double tmp295 = -8*tmp69*sO3*tmp12*tmp10*tmp19*tmp28;
double tmp296 = -8*tmp47*Dt12*tmp69*sO3*tmp12*tmp10*tmp19*tmp28;
double tmp297 = -4*tmp48*sO3*tmp9*tmp10*tmp19*tmp28;
double tmp298 = 8*tmp69*sO3*tmp13*tmp14*tmp19*tmp28;
double tmp299 = 8*tmp47*Dt12*tmp69*sO3*tmp13*tmp14*tmp19*tmp28;
double tmp300 = 8*tmp48*sO1*tmp10*tmp14*tmp19*tmp28;
double tmp301 = -8*tmp69*sO3*tmp16*tmp17*tmp19*tmp28;
double tmp302 = -8*tmp47*Dt12*tmp69*sO3*tmp16*tmp17*tmp19*tmp28;
double tmp303 = 8*tmp48*sO1*tmp9*tmp17*tmp19*tmp28;
double tmp304 = 4*tmp48*sO3*tmp14*tmp17*tmp19*tmp28;
double tmp305 = -4*tmp48*sO2*tmp29*tmp19*tmp28;
double tmp306 = 8*tmp69*sO2*tmp13*tmp9*tmp31;
double tmp307 = 8*tmp47*Dt12*tmp69*sO2*tmp13*tmp9*tmp31;
double tmp308 = -4*tmp48*sO1*tmp72*tmp31;
double tmp309 = 8*tmp69*sO2*tmp16*tmp10*tmp31;
double tmp310 = 8*tmp47*Dt12*tmp69*sO2*tmp16*tmp10*tmp31;
double tmp311 = -4*tmp48*sO1*tmp24*tmp31;
double tmp312 = -8*tmp69*sO2*tmp15*tmp14*tmp31;
double tmp313 = -8*tmp47*Dt12*tmp69*sO2*tmp15*tmp14*tmp31;
double tmp314 = -8*tmp69*sO2*tmp12*tmp17*tmp31;
double tmp315 = -8*tmp47*Dt12*tmp69*sO2*tmp12*tmp17*tmp31;
double tmp316 = 4*tmp48*sO2*tmp9*tmp17*tmp31;
double tmp317 = -4*tmp48*sO3*tmp10*tmp17*tmp31;
double tmp318 = -4*tmp69*sO2*tmp9*tmp39;
double tmp319 = -4*Dt01*tmp70*tmp69*sO2*tmp9*tmp39;
double tmp320 = 4*tmp69*sO3*tmp10*tmp39;
double tmp321 = 4*Dt01*tmp70*tmp69*sO3*tmp10*tmp39;
double tmp322 = -8*tmp69*sO3*tmp15*tmp9*tmp18*tmp39;
double tmp323 = -8*tmp47*Dt12*tmp69*sO3*tmp15*tmp9*tmp18*tmp39;
double tmp324 = 8*tmp69*sO3*tmp12*tmp10*tmp18*tmp39;
double tmp325 = 8*tmp47*Dt12*tmp69*sO3*tmp12*tmp10*tmp18*tmp39;
double tmp326 = -4*tmp48*sO3*tmp9*tmp10*tmp18*tmp39;
double tmp327 = -4*tmp48*sO2*tmp24*tmp18*tmp39;
double tmp328 = -8*tmp69*sO3*tmp13*tmp14*tmp18*tmp39;
double tmp329 = -8*tmp47*Dt12*tmp69*sO3*tmp13*tmp14*tmp18*tmp39;
double tmp330 = 8*tmp48*sO1*tmp10*tmp14*tmp18*tmp39;
double tmp331 = 4*tmp48*sO2*tmp20*tmp18*tmp39;
double tmp332 = 8*tmp69*sO3*tmp16*tmp17*tmp18*tmp39;
double tmp333 = 8*tmp47*Dt12*tmp69*sO3*tmp16*tmp17*tmp18*tmp39;
double tmp334 = 8*tmp48*sO1*tmp9*tmp17*tmp18*tmp39;
double tmp335 = 4*tmp48*sO3*tmp14*tmp17*tmp18*tmp39;
double tmp336 = -8*tmp69*sO2*tmp15*tmp9*tmp19*tmp39;
double tmp337 = -8*tmp47*Dt12*tmp69*sO2*tmp15*tmp9*tmp19*tmp39;
double tmp338 = 4*tmp48*sO3*tmp72*tmp19*tmp39;
double tmp339 = 8*tmp69*sO2*tmp12*tmp10*tmp19*tmp39;
double tmp340 = 8*tmp47*Dt12*tmp69*sO2*tmp12*tmp10*tmp19*tmp39;
double tmp341 = 4*tmp48*sO2*tmp9*tmp10*tmp19*tmp39;
double tmp342 = -8*tmp69*sO2*tmp13*tmp14*tmp19*tmp39;
double tmp343 = -8*tmp47*Dt12*tmp69*sO2*tmp13*tmp14*tmp19*tmp39;
double tmp344 = -8*tmp48*sO1*tmp9*tmp14*tmp19*tmp39;
double tmp345 = -4*tmp48*sO3*tmp20*tmp19*tmp39;
double tmp346 = 8*tmp69*sO2*tmp16*tmp17*tmp19*tmp39;
double tmp347 = 8*tmp47*Dt12*tmp69*sO2*tmp16*tmp17*tmp19*tmp39;
double tmp348 = 8*tmp48*sO1*tmp10*tmp17*tmp19*tmp39;
double tmp349 = 4*tmp48*sO2*tmp14*tmp17*tmp19*tmp39;
double tmp350 = -8*tmp69*sO2*tmp16*tmp9*tmp28*tmp39;
double tmp351 = -8*tmp47*Dt12*tmp69*sO2*tmp16*tmp9*tmp28*tmp39;
double tmp352 = 8*tmp69*sO3*tmp13*tmp9*tmp28*tmp39;
double tmp353 = 8*tmp47*Dt12*tmp69*sO3*tmp13*tmp9*tmp28*tmp39;
double tmp354 = 8*tmp69*sO3*tmp16*tmp10*tmp28*tmp39;
double tmp355 = 8*tmp47*Dt12*tmp69*sO3*tmp16*tmp10*tmp28*tmp39;
double tmp356 = 8*tmp69*sO2*tmp13*tmp10*tmp28*tmp39;
double tmp357 = 8*tmp47*Dt12*tmp69*sO2*tmp13*tmp10*tmp28*tmp39;
double tmp358 = 8*tmp69*sO2*tmp12*tmp14*tmp28*tmp39;
double tmp359 = 8*tmp47*Dt12*tmp69*sO2*tmp12*tmp14*tmp28*tmp39;
double tmp360 = -8*tmp69*sO3*tmp15*tmp14*tmp28*tmp39;
double tmp361 = -8*tmp47*Dt12*tmp69*sO3*tmp15*tmp14*tmp28*tmp39;
double tmp362 = -4*tmp48*sO2*tmp9*tmp14*tmp28*tmp39;
double tmp363 = 4*tmp48*sO3*tmp10*tmp14*tmp28*tmp39;
double tmp364 = -8*tmp69*sO3*tmp12*tmp17*tmp28*tmp39;
double tmp365 = -8*tmp47*Dt12*tmp69*sO3*tmp12*tmp17*tmp28*tmp39;
double tmp366 = -8*tmp69*sO2*tmp15*tmp17*tmp28*tmp39;
double tmp367 = -8*tmp47*Dt12*tmp69*sO2*tmp15*tmp17*tmp28*tmp39;
double tmp368 = 4*tmp48*sO3*tmp9*tmp17*tmp28*tmp39;
double tmp369 = 4*tmp48*sO2*tmp10*tmp17*tmp28*tmp39;
double tmp370 = -8*tmp69*sO3*tmp16*tmp9*tmp46;
double tmp371 = -8*tmp47*Dt12*tmp69*sO3*tmp16*tmp9*tmp46;
double tmp372 = -4*tmp48*sO1*tmp72*tmp46;
double tmp373 = 8*tmp69*sO3*tmp13*tmp10*tmp46;
double tmp374 = 8*tmp47*Dt12*tmp69*sO3*tmp13*tmp10*tmp46;
double tmp375 = -4*tmp48*sO1*tmp24*tmp46;
double tmp376 = 8*tmp69*sO3*tmp12*tmp14*tmp46;
double tmp377 = 8*tmp47*Dt12*tmp69*sO3*tmp12*tmp14*tmp46;
double tmp378 = -4*tmp48*sO3*tmp9*tmp14*tmp46;
double tmp379 = -4*tmp48*sO2*tmp10*tmp14*tmp46;
double tmp380 = -8*tmp69*sO3*tmp15*tmp17*tmp46;
double tmp381 = -8*tmp47*Dt12*tmp69*sO3*tmp15*tmp17*tmp46;
double tmp382 = tmp47*tmp44;
double tmp383 = tmp70*tmp73;
double tmp384 = tmp382 + tmp383;
double tmp385 = tmp19*tmp28;
double tmp386 = tmp18*tmp39;
double tmp387 = tmp385 + tmp386;
double tmp388 = 2*tmp384*tmp387;
double tmp389 = tmp47*tmp34;
double tmp390 = tmp70*tmp74;
double tmp391 = tmp389 + tmp390;
double tmp392 = -(tmp18*tmp28);
double tmp393 = tmp19*tmp39;
double tmp394 = tmp392 + tmp393;
double tmp395 = 2*tmp391*tmp394;
double tmp396 = 2*tmp31;
double tmp397 = 2*tmp46;
double tmp398 = -1 + tmp396 + tmp397;
double tmp399 = tmp47*tmp70*tmp68*tmp398;
double tmp400 = tmp388 + tmp395 + tmp399;
double tmp401 = 2*tmp49*tmp400;
double tmp402 = tmp206 + tmp207 + tmp208 + tmp209 + tmp210 + tmp211 + tmp212 + tmp213 + tmp214 + tmp215 + tmp216 + tmp217 + tmp218 + tmp219 + tmp220 + tmp221 + tmp222 + tmp223 + tmp224 + tmp225 + tmp226 + tmp227 + tmp228 + tmp229 + tmp230 + tmp231 + tmp232 + tmp233 + tmp234 + tmp235 + tmp236 + tmp237 + tmp238 + tmp239 + tmp240 + tmp241 + tmp242 + tmp243 + tmp244 + tmp245 + tmp246 + tmp247 + tmp248 + tmp249 + tmp250 + tmp251 + tmp252 + tmp253 + tmp254 + tmp255 + tmp256 + tmp257 + tmp258 + tmp259 + tmp260 + tmp261 + tmp262 + tmp263 + tmp264 + tmp265 + tmp266 + tmp267 + tmp268 + tmp269 + tmp270 + tmp271 + tmp272 + tmp273 + tmp274 + tmp275 + tmp276 + tmp277 + tmp278 + tmp279 + tmp280 + tmp281 + tmp282 + tmp283 + tmp284 + tmp285 + tmp286 + tmp287 + tmp288 + tmp289 + tmp290 + tmp291 + tmp292 + tmp293 + tmp294 + tmp295 + tmp296 + tmp297 + tmp298 + tmp299 + tmp300 + tmp301 + tmp302 + tmp303 + tmp304 + tmp305 + tmp306 + tmp307 + tmp308 + tmp309 + tmp310 + tmp311 + tmp312 + tmp313 + tmp314 + tmp315 + tmp316 + tmp317 + tmp318 + tmp319 + tmp320 + tmp321 + tmp322 + tmp323 + tmp324 + tmp325 + tmp326 + tmp327 + tmp328 + tmp329 + tmp330 + tmp331 + tmp332 + tmp333 + tmp334 + tmp335 + tmp336 + tmp337 + tmp338 + tmp339 + tmp340 + tmp341 + tmp342 + tmp343 + tmp344 + tmp345 + tmp346 + tmp347 + tmp348 + tmp349 + tmp350 + tmp351 + tmp352 + tmp353 + tmp354 + tmp355 + tmp356 + tmp357 + tmp358 + tmp359 + tmp360 + tmp361 + tmp362 + tmp363 + tmp364 + tmp365 + tmp366 + tmp367 + tmp368 + tmp369 + tmp370 + tmp371 + tmp372 + tmp373 + tmp374 + tmp375 + tmp376 + tmp377 + tmp378 + tmp379 + tmp380 + tmp381 + tmp401;
J(1+_OFF,1+_OFF) = -4*tmp47*tmp48*tmp49*(tmp0*tmp50 - tmp205)*tmp204 + 2*tmp47*tmp48*tmp49*(qOS1 - qOS2*qOS3*tmp50)*(2*tmp7*tmp43 - 2*Dt01*Dt12*tmp21 - 2*tmp7*tmp21 - 4*tmp7*sO3*tmp15*tmp9 + 4*tmp7*sO1*tmp13*tmp9 + 4*tmp7*sO3*tmp12*tmp10 + 4*tmp7*sO1*tmp16*tmp10 - 4*Dt01*tmp11*sO2*tmp24 - 4*tmp7*sO1*tmp15*tmp14 - 4*tmp7*sO3*tmp13*tmp14 + 4*Dt01*tmp11*sO1*tmp10*tmp14 - 4*tmp7*sO1*tmp12*tmp17 + 4*tmp7*sO3*tmp16*tmp17 + 4*Dt01*tmp11*sO3*tmp14*tmp17 - 4*Dt01*tmp11*sO2*tmp29 + 2*Dt01*Dt12*tmp45 + 4*Dt01*Dt12*sO3*tmp10*tmp18 - 4*Dt01*Dt12*sO1*tmp17*tmp18 - 4*Dt01*Dt12*sO3*tmp9*tmp19 + 4*Dt01*Dt12*sO1*tmp14*tmp19 - 8*tmp7*sO1*tmp16*tmp9*tmp18*tmp19 + 8*tmp7*sO1*tmp13*tmp10*tmp18*tmp19 + 8*Dt01*tmp11*sO2*tmp9*tmp10*tmp18*tmp19 + 8*tmp7*sO1*tmp12*tmp14*tmp18*tmp19 - 4*Dt01*tmp11*sO1*tmp9*tmp14*tmp18*tmp19 - 4*Dt01*tmp11*sO3*tmp20*tmp18*tmp19 - 8*tmp7*sO1*tmp15*tmp17*tmp18*tmp19 + 4*Dt01*tmp11*sO1*tmp10*tmp17*tmp18*tmp19 + 8*Dt01*tmp11*sO2*tmp14*tmp17*tmp18*tmp19 + 4*Dt01*tmp11*sO3*tmp29*tmp18*tmp19 + 4*Dt12*(Dt12*tmp34 + Dt01*tmp74)*tmp18*tmp19 - 8*tmp7*sO1*tmp13*tmp9*tmp23 - 8*tmp7*sO1*tmp16*tmp10*tmp23 + 8*Dt01*tmp11*sO2*tmp24*tmp23 + 8*tmp7*sO1*tmp15*tmp14*tmp23 - 4*Dt01*tmp11*sO1*tmp10*tmp14*tmp23 + 8*tmp7*sO1*tmp12*tmp17*tmp23 - 4*Dt01*tmp11*sO1*tmp9*tmp17*tmp23 - 8*Dt01*tmp11*sO3*tmp14*tmp17*tmp23 + 8*Dt01*tmp11*sO2*tmp29*tmp23 - 4*tmp55*tmp23 - 4*Dt01*Dt12*sO1*tmp10*tmp28 - 4*Dt01*Dt12*sO3*tmp17*tmp28 + 8*tmp7*sO1*tmp15*tmp9*tmp18*tmp28 + 8*tmp7*sO3*tmp13*tmp9*tmp18*tmp28 - 8*tmp7*sO1*tmp12*tmp10*tmp18*tmp28 + 8*tmp7*sO3*tmp16*tmp10*tmp18*tmp28 - 4*Dt01*tmp11*sO1*tmp9*tmp10*tmp18*tmp28 - 8*tmp7*sO3*tmp15*tmp14*tmp18*tmp28 + 8*tmp7*sO1*tmp13*tmp14*tmp18*tmp28 + 4*Dt01*tmp11*sO3*tmp10*tmp14*tmp18*tmp28 - 8*tmp7*sO3*tmp12*tmp17*tmp18*tmp28 - 8*tmp7*sO1*tmp16*tmp17*tmp18*tmp28 - 4*Dt01*tmp11*sO3*tmp9*tmp17*tmp18*tmp28 - 4*Dt01*tmp11*sO1*tmp14*tmp17*tmp18*tmp28 - 8*tmp7*sO3*tmp16*tmp9*tmp19*tmp28 + 8*tmp7*sO3*tmp13*tmp10*tmp19*tmp28 - 4*Dt01*tmp11*sO1*tmp24*tmp19*tmp28 + 8*tmp7*sO3*tmp12*tmp14*tmp19*tmp28 + 4*Dt01*tmp11*sO3*tmp9*tmp14*tmp19*tmp28 + 8*Dt01*tmp11*sO2*tmp10*tmp14*tmp19*tmp28 - 4*Dt01*tmp11*sO1*tmp20*tmp19*tmp28 - 8*tmp7*sO3*tmp15*tmp17*tmp19*tmp28 - 8*Dt01*tmp11*sO2*tmp9*tmp17*tmp19*tmp28 + 4*Dt01*tmp11*sO3*tmp10*tmp17*tmp19*tmp28 - 8*Dt01*tmp11*sO1*tmp29*tmp19*tmp28 + 4*tmp61*tmp19*tmp28 + 8*tmp7*sO3*tmp15*tmp9*tmp31 - 8*tmp7*sO1*tmp13*tmp9*tmp31 - 8*tmp7*sO3*tmp12*tmp10*tmp31 - 8*tmp7*sO1*tmp16*tmp10*tmp31 - 4*Dt01*tmp11*sO3*tmp9*tmp10*tmp31 + 8*tmp7*sO1*tmp15*tmp14*tmp31 + 8*tmp7*sO3*tmp13*tmp14*tmp31 - 4*Dt01*tmp11*sO1*tmp10*tmp14*tmp31 + 8*tmp7*sO1*tmp12*tmp17*tmp31 - 8*tmp7*sO3*tmp16*tmp17*tmp31 + 4*Dt01*tmp11*sO1*tmp9*tmp17*tmp31 - 4*Dt01*tmp11*sO3*tmp14*tmp17*tmp31 + 4*Dt01*Dt12*sO1*tmp9*tmp39 + 4*Dt01*Dt12*sO3*tmp14*tmp39 - 8*tmp7*sO3*tmp16*tmp9*tmp18*tmp39 + 8*tmp7*sO3*tmp13*tmp10*tmp18*tmp39 - 4*Dt01*tmp11*sO1*tmp24*tmp18*tmp39 + 8*tmp7*sO3*tmp12*tmp14*tmp18*tmp39 - 4*Dt01*tmp11*sO3*tmp9*tmp14*tmp18*tmp39 - 8*Dt01*tmp11*sO2*tmp10*tmp14*tmp18*tmp39 + 4*Dt01*tmp11*sO1*tmp20*tmp18*tmp39 - 8*tmp7*sO3*tmp15*tmp17*tmp18*tmp39 + 8*Dt01*tmp11*sO2*tmp9*tmp17*tmp18*tmp39 - 4*Dt01*tmp11*sO3*tmp10*tmp17*tmp18*tmp39 + 4*Dt12*tmp68*tmp18*tmp39 + 8*tmp7*sO1*tmp15*tmp9*tmp19*tmp39 - 8*tmp7*sO3*tmp13*tmp9*tmp19*tmp39 - 8*tmp7*sO1*tmp12*tmp10*tmp19*tmp39 - 8*tmp7*sO3*tmp16*tmp10*tmp19*tmp39 + 4*Dt01*tmp11*sO1*tmp9*tmp10*tmp19*tmp39 + 8*tmp7*sO3*tmp15*tmp14*tmp19*tmp39 + 8*tmp7*sO1*tmp13*tmp14*tmp19*tmp39 + 4*Dt01*tmp11*sO3*tmp10*tmp14*tmp19*tmp39 + 8*tmp7*sO3*tmp12*tmp17*tmp19*tmp39 - 8*tmp7*sO1*tmp16*tmp17*tmp19*tmp39 - 4*Dt01*tmp11*sO3*tmp9*tmp17*tmp19*tmp39 + 4*Dt01*tmp11*sO1*tmp14*tmp17*tmp19*tmp39 + 8*tmp7*sO1*tmp16*tmp9*tmp28*tmp39 - 8*tmp7*sO1*tmp13*tmp10*tmp28*tmp39 + 8*Dt01*tmp11*sO2*tmp9*tmp10*tmp28*tmp39 - 8*Dt01*tmp11*sO3*tmp24*tmp28*tmp39 - 8*tmp7*sO1*tmp12*tmp14*tmp28*tmp39 - 4*Dt01*tmp11*sO1*tmp9*tmp14*tmp28*tmp39 - 4*Dt01*tmp11*sO3*tmp20*tmp28*tmp39 + 8*tmp7*sO1*tmp15*tmp17*tmp28*tmp39 + 4*Dt01*tmp11*sO1*tmp10*tmp17*tmp28*tmp39 + 8*Dt01*tmp11*sO2*tmp14*tmp17*tmp28*tmp39 - 4*Dt01*tmp11*sO3*tmp29*tmp28*tmp39 + 4*tmp38*tmp28*tmp39 + 8*tmp7*sO3*tmp15*tmp9*tmp46 - 8*tmp7*sO3*tmp12*tmp10*tmp46 + 4*Dt01*tmp11*sO3*tmp9*tmp10*tmp46 + 8*Dt01*tmp11*sO2*tmp24*tmp46 + 8*tmp7*sO3*tmp13*tmp14*tmp46 - 8*Dt01*tmp11*sO1*tmp10*tmp14*tmp46 - 8*tmp7*sO3*tmp16*tmp17*tmp46 - 4*Dt01*tmp11*sO3*tmp14*tmp17*tmp46 + 8*Dt01*tmp11*sO2*tmp29*tmp46 - 4*tmp55*tmp46) - 4*qOS2*tmp402;
J(2+_OFF,1+_OFF) = -4*tmp47*tmp48*tmp49*(qOS3 - qOS1*qOS2*tmp50)*tmp204 + 4*tmp47*tmp48*tmp49*(qOS1 + qOS2*qOS3*tmp50)*(tmp7*tmp40 - Dt01*Dt12*tmp30 - tmp7*tmp30 + 2*tmp7*sO3*tmp16*tmp9 - 2*tmp7*sO2*tmp13*tmp9 - 2*tmp7*sO2*tmp16*tmp10 - 2*tmp7*sO3*tmp13*tmp10 - 2*tmp7*sO3*tmp12*tmp14 + 2*tmp7*sO2*tmp15*tmp14 + 2*tmp7*sO2*tmp12*tmp17 + 2*tmp7*sO3*tmp15*tmp17 + Dt01*Dt12*tmp42 - 2*Dt01*Dt12*sO3*tmp14*tmp18 + 2*Dt01*Dt12*sO2*tmp17*tmp18 + 2*tmp32*sO2*tmp10*tmp14*tmp71 + 2*Dt01*Dt12*sO2*tmp10*tmp14*tmp71 - 2*tmp32*sO1*tmp20*tmp71 - 2*Dt01*Dt12*sO1*tmp20*tmp71 + 2*tmp32*sO3*tmp10*tmp17*tmp71 + 2*Dt01*Dt12*sO3*tmp10*tmp17*tmp71 - 2*tmp32*sO1*tmp29*tmp71 - 2*Dt01*Dt12*sO1*tmp29*tmp71 - 2*Dt01*Dt12*sO2*tmp14*tmp19 - 2*Dt01*Dt12*sO3*tmp17*tmp19 + 4*tmp7*sO2*tmp16*tmp9*tmp18*tmp19 + 4*tmp7*sO3*tmp13*tmp9*tmp18*tmp19 + 4*tmp7*sO3*tmp16*tmp10*tmp18*tmp19 - 4*tmp7*sO2*tmp13*tmp10*tmp18*tmp19 - 4*tmp7*sO2*tmp12*tmp14*tmp18*tmp19 - 4*tmp7*sO3*tmp15*tmp14*tmp18*tmp19 - 2*tmp32*sO2*tmp9*tmp14*tmp18*tmp19 - 2*Dt01*Dt12*sO2*tmp9*tmp14*tmp18*tmp19 - 2*tmp32*sO3*tmp10*tmp14*tmp18*tmp19 - 2*Dt01*Dt12*sO3*tmp10*tmp14*tmp18*tmp19 - 4*tmp7*sO3*tmp12*tmp17*tmp18*tmp19 + 4*tmp7*sO2*tmp15*tmp17*tmp18*tmp19 - 2*tmp32*sO3*tmp9*tmp17*tmp18*tmp19 - 2*Dt01*Dt12*sO3*tmp9*tmp17*tmp18*tmp19 + 2*tmp32*sO2*tmp10*tmp17*tmp18*tmp19 + 2*Dt01*Dt12*sO2*tmp10*tmp17*tmp18*tmp19 - 4*tmp7*sO3*tmp16*tmp9*tmp23 + 4*tmp7*sO2*tmp13*tmp9*tmp23 + 4*tmp7*sO2*tmp16*tmp10*tmp23 + 4*tmp7*sO3*tmp13*tmp10*tmp23 + 4*tmp7*sO3*tmp12*tmp14*tmp23 - 4*tmp7*sO2*tmp15*tmp14*tmp23 + 2*tmp32*sO3*tmp9*tmp14*tmp23 + 2*Dt01*Dt12*sO3*tmp9*tmp14*tmp23 - 2*tmp32*sO1*tmp20*tmp23 - 2*Dt01*Dt12*sO1*tmp20*tmp23 - 4*tmp7*sO2*tmp12*tmp17*tmp23 - 4*tmp7*sO3*tmp15*tmp17*tmp23 - 2*tmp32*sO2*tmp9*tmp17*tmp23 - 2*Dt01*Dt12*sO2*tmp9*tmp17*tmp23 - 2*tmp32*sO1*tmp29*tmp23 - 2*Dt01*Dt12*sO1*tmp29*tmp23 + 2*Dt01*Dt12*sO3*tmp9*tmp28 + 2*Dt01*Dt12*sO2*tmp10*tmp28 - 2*tmp7*tmp25*tmp18*tmp28 + 2*Dt01*Dt12*tmp8*tmp18*tmp28 + 2*tmp7*tmp8*tmp18*tmp28 - 4*tmp7*sO2*tmp15*tmp9*tmp18*tmp28 + 4*tmp7*sO2*tmp12*tmp10*tmp18*tmp28 - 2*tmp32*sO2*tmp9*tmp10*tmp18*tmp28 - 2*Dt01*Dt12*sO2*tmp9*tmp10*tmp18*tmp28 + 2*tmp32*sO3*tmp24*tmp18*tmp28 + 2*Dt01*Dt12*sO3*tmp24*tmp18*tmp28 - 4*tmp7*sO2*tmp13*tmp14*tmp18*tmp28 + 4*tmp32*sO1*tmp9*tmp14*tmp18*tmp28 + 4*Dt01*Dt12*sO1*tmp9*tmp14*tmp18*tmp28 + 4*tmp7*sO2*tmp16*tmp17*tmp18*tmp28 - 4*tmp32*sO1*tmp10*tmp17*tmp18*tmp28 - 4*Dt01*Dt12*sO1*tmp10*tmp17*tmp18*tmp28 - 2*tmp32*sO2*tmp14*tmp17*tmp18*tmp28 - 2*Dt01*Dt12*sO2*tmp14*tmp17*tmp18*tmp28 - 2*tmp32*sO3*tmp29*tmp18*tmp28 - 2*Dt01*Dt12*sO3*tmp29*tmp18*tmp28 - 2*Dt01*Dt12*tmp27*tmp18*tmp28 + 2*tmp7*tmp43*tmp19*tmp28 - 2*Dt01*Dt12*tmp21*tmp19*tmp28 - 2*tmp7*tmp21*tmp19*tmp28 + 4*tmp7*sO3*tmp15*tmp9*tmp19*tmp28 + 2*tmp32*sO2*tmp72*tmp19*tmp28 + 2*Dt01*Dt12*sO2*tmp72*tmp19*tmp28 - 4*tmp7*sO3*tmp12*tmp10*tmp19*tmp28 - 2*tmp32*sO3*tmp9*tmp10*tmp19*tmp28 - 2*Dt01*Dt12*sO3*tmp9*tmp10*tmp19*tmp28 + 4*tmp7*sO3*tmp13*tmp14*tmp19*tmp28 + 4*tmp32*sO1*tmp10*tmp14*tmp19*tmp28 + 4*Dt01*Dt12*sO1*tmp10*tmp14*tmp19*tmp28 - 4*tmp7*sO3*tmp16*tmp17*tmp19*tmp28 + 4*tmp32*sO1*tmp9*tmp17*tmp19*tmp28 + 4*Dt01*Dt12*sO1*tmp9*tmp17*tmp19*tmp28 + 2*tmp32*sO3*tmp14*tmp17*tmp19*tmp28 + 2*Dt01*Dt12*sO3*tmp14*tmp17*tmp19*tmp28 - 2*tmp32*sO2*tmp29*tmp19*tmp28 - 2*Dt01*Dt12*sO2*tmp29*tmp19*tmp28 + 2*Dt01*Dt12*tmp45*tmp19*tmp28 - 2*tmp7*tmp40*tmp31 + 2*Dt01*Dt12*tmp30*tmp31 + 2*tmp7*tmp30*tmp31 + 4*tmp7*sO2*tmp13*tmp9*tmp31 - 2*tmp32*sO1*tmp72*tmp31 - 2*Dt01*Dt12*sO1*tmp72*tmp31 + 4*tmp7*sO2*tmp16*tmp10*tmp31 - 2*tmp32*sO1*tmp24*tmp31 - 2*Dt01*Dt12*sO1*tmp24*tmp31 - 4*tmp7*sO2*tmp15*tmp14*tmp31 - 4*tmp7*sO2*tmp12*tmp17*tmp31 + 2*tmp32*sO2*tmp9*tmp17*tmp31 + 2*Dt01*Dt12*sO2*tmp9*tmp17*tmp31 - 2*tmp32*sO3*tmp10*tmp17*tmp31 - 2*Dt01*Dt12*sO3*tmp10*tmp17*tmp31 - 2*Dt01*Dt12*tmp42*tmp31 - 2*Dt01*Dt12*sO2*tmp9*tmp39 + 2*Dt01*Dt12*sO3*tmp10*tmp39 + 2*tmp7*tmp43*tmp18*tmp39 - 2*Dt01*Dt12*tmp21*tmp18*tmp39 - 2*tmp7*tmp21*tmp18*tmp39 - 4*tmp7*sO3*tmp15*tmp9*tmp18*tmp39 + 4*tmp7*sO3*tmp12*tmp10*tmp18*tmp39 - 2*tmp32*sO3*tmp9*tmp10*tmp18*tmp39 - 2*Dt01*Dt12*sO3*tmp9*tmp10*tmp18*tmp39 - 2*tmp32*sO2*tmp24*tmp18*tmp39 - 2*Dt01*Dt12*sO2*tmp24*tmp18*tmp39 - 4*tmp7*sO3*tmp13*tmp14*tmp18*tmp39 + 4*tmp32*sO1*tmp10*tmp14*tmp18*tmp39 + 4*Dt01*Dt12*sO1*tmp10*tmp14*tmp18*tmp39 + 2*tmp32*sO2*tmp20*tmp18*tmp39 + 2*Dt01*Dt12*sO2*tmp20*tmp18*tmp39 + 4*tmp7*sO3*tmp16*tmp17*tmp18*tmp39 + 4*tmp32*sO1*tmp9*tmp17*tmp18*tmp39 + 4*Dt01*Dt12*sO1*tmp9*tmp17*tmp18*tmp39 + 2*tmp32*sO3*tmp14*tmp17*tmp18*tmp39 + 2*Dt01*Dt12*sO3*tmp14*tmp17*tmp18*tmp39 + 2*Dt01*Dt12*tmp45*tmp18*tmp39 + 2*tmp7*tmp25*tmp19*tmp39 - 2*Dt01*Dt12*tmp8*tmp19*tmp39 - 2*tmp7*tmp8*tmp19*tmp39 - 4*tmp7*sO2*tmp15*tmp9*tmp19*tmp39 + 2*tmp32*sO3*tmp72*tmp19*tmp39 + 2*Dt01*Dt12*sO3*tmp72*tmp19*tmp39 + 4*tmp7*sO2*tmp12*tmp10*tmp19*tmp39 + 2*tmp32*sO2*tmp9*tmp10*tmp19*tmp39 + 2*Dt01*Dt12*sO2*tmp9*tmp10*tmp19*tmp39 - 4*tmp7*sO2*tmp13*tmp14*tmp19*tmp39 - 4*tmp32*sO1*tmp9*tmp14*tmp19*tmp39 - 4*Dt01*Dt12*sO1*tmp9*tmp14*tmp19*tmp39 - 2*tmp32*sO3*tmp20*tmp19*tmp39 - 2*Dt01*Dt12*sO3*tmp20*tmp19*tmp39 + 4*tmp7*sO2*tmp16*tmp17*tmp19*tmp39 + 4*tmp32*sO1*tmp10*tmp17*tmp19*tmp39 + 4*Dt01*Dt12*sO1*tmp10*tmp17*tmp19*tmp39 + 2*tmp32*sO2*tmp14*tmp17*tmp19*tmp39 + 2*Dt01*Dt12*sO2*tmp14*tmp17*tmp19*tmp39 + 2*Dt01*Dt12*tmp27*tmp19*tmp39 - 4*tmp7*sO2*tmp16*tmp9*tmp28*tmp39 + 4*tmp7*sO3*tmp13*tmp9*tmp28*tmp39 + 4*tmp7*sO3*tmp16*tmp10*tmp28*tmp39 + 4*tmp7*sO2*tmp13*tmp10*tmp28*tmp39 + 4*tmp7*sO2*tmp12*tmp14*tmp28*tmp39 - 4*tmp7*sO3*tmp15*tmp14*tmp28*tmp39 - 2*tmp32*sO2*tmp9*tmp14*tmp28*tmp39 - 2*Dt01*Dt12*sO2*tmp9*tmp14*tmp28*tmp39 + 2*tmp32*sO3*tmp10*tmp14*tmp28*tmp39 + 2*Dt01*Dt12*sO3*tmp10*tmp14*tmp28*tmp39 - 4*tmp7*sO3*tmp12*tmp17*tmp28*tmp39 - 4*tmp7*sO2*tmp15*tmp17*tmp28*tmp39 + 2*tmp32*sO3*tmp9*tmp17*tmp28*tmp39 + 2*Dt01*Dt12*sO3*tmp9*tmp17*tmp28*tmp39 + 2*tmp32*sO2*tmp10*tmp17*tmp28*tmp39 + 2*Dt01*Dt12*sO2*tmp10*tmp17*tmp28*tmp39 - 2*tmp7*tmp40*tmp46 + 2*Dt01*Dt12*tmp30*tmp46 + 2*tmp7*tmp30*tmp46 - 4*tmp7*sO3*tmp16*tmp9*tmp46 - 2*tmp32*sO1*tmp72*tmp46 - 2*Dt01*Dt12*sO1*tmp72*tmp46 + 4*tmp7*sO3*tmp13*tmp10*tmp46 - 2*tmp32*sO1*tmp24*tmp46 - 2*Dt01*Dt12*sO1*tmp24*tmp46 + 4*tmp7*sO3*tmp12*tmp14*tmp46 - 2*tmp32*sO3*tmp9*tmp14*tmp46 - 2*Dt01*Dt12*sO3*tmp9*tmp14*tmp46 - 2*tmp32*sO2*tmp10*tmp14*tmp46 - 2*Dt01*Dt12*sO2*tmp10*tmp14*tmp46 - 4*tmp7*sO3*tmp15*tmp17*tmp46 - 2*Dt01*Dt12*tmp42*tmp46);
J(3+_OFF,1+_OFF) = 8*tmp47*tmp48*tmp49*qOS2*tmp204 - 4*tmp47*tmp48*tmp49*(qOS3 + qOS1*qOS2*tmp50)*(-(tmp7*tmp43) + Dt01*Dt12*tmp21 + tmp7*tmp21 + 2*tmp7*sO3*tmp15*tmp9 - 2*tmp7*sO1*tmp13*tmp9 - 2*tmp7*sO3*tmp12*tmp10 - 2*tmp7*sO1*tmp16*tmp10 + 2*Dt01*tmp11*sO2*tmp24 + 2*tmp7*sO1*tmp15*tmp14 + 2*tmp7*sO3*tmp13*tmp14 - 2*Dt01*tmp11*sO1*tmp10*tmp14 + 2*tmp7*sO1*tmp12*tmp17 - 2*tmp7*sO3*tmp16*tmp17 - 2*Dt01*tmp11*sO3*tmp14*tmp17 + 2*Dt01*tmp11*sO2*tmp29 - Dt01*Dt12*tmp45 - 2*Dt01*Dt12*sO3*tmp10*tmp18 + 2*Dt01*Dt12*sO1*tmp17*tmp18 + 2*Dt01*Dt12*sO3*tmp9*tmp19 - 2*Dt01*Dt12*sO1*tmp14*tmp19 + 4*tmp7*sO1*tmp16*tmp9*tmp18*tmp19 - 4*tmp7*sO1*tmp13*tmp10*tmp18*tmp19 - 4*Dt01*tmp11*sO2*tmp9*tmp10*tmp18*tmp19 - 4*tmp7*sO1*tmp12*tmp14*tmp18*tmp19 + 2*Dt01*tmp11*sO1*tmp9*tmp14*tmp18*tmp19 + 2*Dt01*tmp11*sO3*tmp20*tmp18*tmp19 + 4*tmp7*sO1*tmp15*tmp17*tmp18*tmp19 - 2*Dt01*tmp11*sO1*tmp10*tmp17*tmp18*tmp19 - 4*Dt01*tmp11*sO2*tmp14*tmp17*tmp18*tmp19 - 2*Dt01*tmp11*sO3*tmp29*tmp18*tmp19 + 2*Dt12*(Dt12*(-tmp25 + tmp8) + Dt01*(tmp8 - tmp27))*tmp18*tmp19 + 4*tmp7*sO1*tmp13*tmp9*tmp23 + 4*tmp7*sO1*tmp16*tmp10*tmp23 - 4*Dt01*tmp11*sO2*tmp24*tmp23 - 4*tmp7*sO1*tmp15*tmp14*tmp23 + 2*Dt01*tmp11*sO1*tmp10*tmp14*tmp23 - 4*tmp7*sO1*tmp12*tmp17*tmp23 + 2*Dt01*tmp11*sO1*tmp9*tmp17*tmp23 + 4*Dt01*tmp11*sO3*tmp14*tmp17*tmp23 - 4*Dt01*tmp11*sO2*tmp29*tmp23 + 2*tmp55*tmp23 + 2*Dt01*Dt12*sO1*tmp10*tmp28 + 2*Dt01*Dt12*sO3*tmp17*tmp28 - 4*tmp7*sO1*tmp15*tmp9*tmp18*tmp28 - 4*tmp7*sO3*tmp13*tmp9*tmp18*tmp28 + 4*tmp7*sO1*tmp12*tmp10*tmp18*tmp28 - 4*tmp7*sO3*tmp16*tmp10*tmp18*tmp28 + 2*Dt01*tmp11*sO1*tmp9*tmp10*tmp18*tmp28 + 4*tmp7*sO3*tmp15*tmp14*tmp18*tmp28 - 4*tmp7*sO1*tmp13*tmp14*tmp18*tmp28 - 2*Dt01*tmp11*sO3*tmp10*tmp14*tmp18*tmp28 + 4*tmp7*sO3*tmp12*tmp17*tmp18*tmp28 + 4*tmp7*sO1*tmp16*tmp17*tmp18*tmp28 + 2*Dt01*tmp11*sO3*tmp9*tmp17*tmp18*tmp28 + 2*Dt01*tmp11*sO1*tmp14*tmp17*tmp18*tmp28 + 4*tmp7*sO3*tmp16*tmp9*tmp19*tmp28 - 4*tmp7*sO3*tmp13*tmp10*tmp19*tmp28 + 2*Dt01*tmp11*sO1*tmp24*tmp19*tmp28 - 4*tmp7*sO3*tmp12*tmp14*tmp19*tmp28 - 2*Dt01*tmp11*sO3*tmp9*tmp14*tmp19*tmp28 - 4*Dt01*tmp11*sO2*tmp10*tmp14*tmp19*tmp28 + 2*Dt01*tmp11*sO1*tmp20*tmp19*tmp28 + 4*tmp7*sO3*tmp15*tmp17*tmp19*tmp28 + 4*Dt01*tmp11*sO2*tmp9*tmp17*tmp19*tmp28 - 2*Dt01*tmp11*sO3*tmp10*tmp17*tmp19*tmp28 + 4*Dt01*tmp11*sO1*tmp29*tmp19*tmp28 - 2*tmp61*tmp19*tmp28 - 4*tmp7*sO3*tmp15*tmp9*tmp31 + 4*tmp7*sO1*tmp13*tmp9*tmp31 + 4*tmp7*sO3*tmp12*tmp10*tmp31 + 4*tmp7*sO1*tmp16*tmp10*tmp31 + 2*Dt01*tmp11*sO3*tmp9*tmp10*tmp31 - 4*tmp7*sO1*tmp15*tmp14*tmp31 - 4*tmp7*sO3*tmp13*tmp14*tmp31 + 2*Dt01*tmp11*sO1*tmp10*tmp14*tmp31 - 4*tmp7*sO1*tmp12*tmp17*tmp31 + 4*tmp7*sO3*tmp16*tmp17*tmp31 - 2*Dt01*tmp11*sO1*tmp9*tmp17*tmp31 + 2*Dt01*tmp11*sO3*tmp14*tmp17*tmp31 - 2*Dt01*Dt12*sO1*tmp9*tmp39 - 2*Dt01*Dt12*sO3*tmp14*tmp39 + 4*tmp7*sO3*tmp16*tmp9*tmp18*tmp39 - 4*tmp7*sO3*tmp13*tmp10*tmp18*tmp39 + 2*Dt01*tmp11*sO1*tmp24*tmp18*tmp39 - 4*tmp7*sO3*tmp12*tmp14*tmp18*tmp39 + 2*Dt01*tmp11*sO3*tmp9*tmp14*tmp18*tmp39 + 4*Dt01*tmp11*sO2*tmp10*tmp14*tmp18*tmp39 - 2*Dt01*tmp11*sO1*tmp20*tmp18*tmp39 + 4*tmp7*sO3*tmp15*tmp17*tmp18*tmp39 - 4*Dt01*tmp11*sO2*tmp9*tmp17*tmp18*tmp39 + 2*Dt01*tmp11*sO3*tmp10*tmp17*tmp18*tmp39 + 2*Dt12*(Dt12*tmp57 + Dt01*(tmp41 + tmp42))*tmp18*tmp39 - 4*tmp7*sO1*tmp15*tmp9*tmp19*tmp39 + 4*tmp7*sO3*tmp13*tmp9*tmp19*tmp39 + 4*tmp7*sO1*tmp12*tmp10*tmp19*tmp39 + 4*tmp7*sO3*tmp16*tmp10*tmp19*tmp39 - 2*Dt01*tmp11*sO1*tmp9*tmp10*tmp19*tmp39 - 4*tmp7*sO3*tmp15*tmp14*tmp19*tmp39 - 4*tmp7*sO1*tmp13*tmp14*tmp19*tmp39 - 2*Dt01*tmp11*sO3*tmp10*tmp14*tmp19*tmp39 - 4*tmp7*sO3*tmp12*tmp17*tmp19*tmp39 + 4*tmp7*sO1*tmp16*tmp17*tmp19*tmp39 + 2*Dt01*tmp11*sO3*tmp9*tmp17*tmp19*tmp39 - 2*Dt01*tmp11*sO1*tmp14*tmp17*tmp19*tmp39 - 4*tmp7*sO1*tmp16*tmp9*tmp28*tmp39 + 4*tmp7*sO1*tmp13*tmp10*tmp28*tmp39 - 4*Dt01*tmp11*sO2*tmp9*tmp10*tmp28*tmp39 + 4*Dt01*tmp11*sO3*tmp24*tmp28*tmp39 + 4*tmp7*sO1*tmp12*tmp14*tmp28*tmp39 + 2*Dt01*tmp11*sO1*tmp9*tmp14*tmp28*tmp39 + 2*Dt01*tmp11*sO3*tmp20*tmp28*tmp39 - 4*tmp7*sO1*tmp15*tmp17*tmp28*tmp39 - 2*Dt01*tmp11*sO1*tmp10*tmp17*tmp28*tmp39 - 4*Dt01*tmp11*sO2*tmp14*tmp17*tmp28*tmp39 + 2*Dt01*tmp11*sO3*tmp29*tmp28*tmp39 - 2*tmp38*tmp28*tmp39 - 4*tmp7*sO3*tmp15*tmp9*tmp46 + 4*tmp7*sO3*tmp12*tmp10*tmp46 - 2*Dt01*tmp11*sO3*tmp9*tmp10*tmp46 - 4*Dt01*tmp11*sO2*tmp24*tmp46 - 4*tmp7*sO3*tmp13*tmp14*tmp46 + 4*Dt01*tmp11*sO1*tmp10*tmp14*tmp46 + 4*tmp7*sO3*tmp16*tmp17*tmp46 + 2*Dt01*tmp11*sO3*tmp14*tmp17*tmp46 - 4*Dt01*tmp11*sO2*tmp29*tmp46 + 2*tmp55*tmp46) + 2*(-(tmp0*tmp50) + tmp205)*tmp402;
