double tmp0 = Dt01 + Dt12;
double tmp1 = x1(5+_OFF);
double tmp2 = x1(6+_OFF);
double tmp3 = x2(4+_OFF);
double tmp4 = x2(5+_OFF);
double tmp5 = std::pow(tmp1,2);
double tmp6 = std::pow(tmp4,2);
double tmp7 = std::pow(tmp2,2);
double tmp8 = x1(4+_OFF);
double tmp9 = x1(7+_OFF);
double tmp10 = x2(6+_OFF);
double tmp11 = std::pow(Dt01,2);
double tmp12 = Dt01*Dt12;
double tmp13 = tmp11 + tmp12;
double tmp14 = std::pow(tmp10,2);
double tmp15 = x2(7+_OFF);
double tmp16 = std::pow(qOS2,2);
double tmp17 = std::pow(qOS3,2);
double tmp18 = 1/Dt01;
double tmp19 = std::pow(tmp0,-2);
double tmp20 = x0(6+_OFF);
double tmp21 = x0(7+_OFF);
double tmp22 = x0(4+_OFF);
double tmp23 = x0(5+_OFF);
double tmp24 = std::pow(Dt12,-2);
double tmp25 = 1/Dt12;
double tmp26 = std::pow(tmp15,2);
double tmp27 = 1/tmp0;
double tmp28 = std::pow(qOS1,2);
double tmp29 = -tmp28;
double tmp30 = -tmp16;
double tmp31 = -tmp17;
double tmp32 = 1 + tmp29 + tmp30 + tmp31;
double tmp33 = std::sqrt(tmp32);
double tmp34 = std::pow(Dt12,2);
double tmp35 = std::pow(tmp9,2);
double tmp36 = 2*Dt01*tmp0*tmp5;
double tmp37 = 2*Dt01*tmp0*tmp7;
double tmp38 = -4*Dt01*tmp0*tmp8*tmp1*tmp3*tmp4;
double tmp39 = 4*Dt01*tmp0*tmp2*tmp9*tmp3*tmp4;
double tmp40 = 2*tmp13*tmp6;
double tmp41 = -4*Dt01*tmp0*tmp5*tmp6;
double tmp42 = -4*Dt01*tmp0*tmp7*tmp6;
double tmp43 = -4*Dt01*tmp0*tmp8*tmp2*tmp3*tmp10;
double tmp44 = -4*Dt01*tmp0*tmp1*tmp9*tmp3*tmp10;
double tmp45 = 2*tmp13*tmp14;
double tmp46 = -4*Dt01*tmp0*tmp5*tmp14;
double tmp47 = -4*Dt01*tmp0*tmp7*tmp14;
double tmp48 = -4*Dt01*tmp0*tmp8*tmp2*tmp4*tmp15;
double tmp49 = -4*Dt01*tmp0*tmp1*tmp9*tmp4*tmp15;
double tmp50 = 4*Dt01*tmp0*tmp8*tmp1*tmp10*tmp15;
double tmp51 = -4*Dt01*tmp0*tmp2*tmp9*tmp10*tmp15;
double tmp52 = tmp36 + tmp37 + tmp38 + tmp39 + tmp40 + tmp41 + tmp42 + tmp43 + tmp44 + tmp45 + tmp46 + tmp47 + tmp48 + tmp49 + tmp50 + tmp51;
double tmp53 = qOS1*qOS2;
double tmp54 = std::pow(tmp3,2);
double tmp55 = std::pow(tmp8,2);
double tmp56 = 2*tmp28;
double tmp57 = qOS1*qOS3;
double tmp58 = 4*tmp19*tmp20*tmp8;
double tmp59 = 4*tmp18*Dt12*tmp19*tmp20*tmp8;
double tmp60 = -4*tmp19*tmp21*tmp1;
double tmp61 = -4*tmp18*Dt12*tmp19*tmp21*tmp1;
double tmp62 = -4*tmp19*tmp22*tmp2;
double tmp63 = -4*tmp18*Dt12*tmp19*tmp22*tmp2;
double tmp64 = 4*tmp19*tmp23*tmp9;
double tmp65 = 4*tmp18*Dt12*tmp19*tmp23*tmp9;
double tmp66 = -4*tmp19*tmp2*tmp3;
double tmp67 = -4*Dt01*tmp25*tmp19*tmp2*tmp3;
double tmp68 = 4*tmp24*tmp1*tmp9*tmp54;
double tmp69 = -4*tmp19*tmp9*tmp4;
double tmp70 = -4*Dt01*tmp25*tmp19*tmp9*tmp4;
double tmp71 = 8*tmp19*tmp21*tmp8*tmp3*tmp4;
double tmp72 = 8*tmp18*Dt12*tmp19*tmp21*tmp8*tmp3*tmp4;
double tmp73 = 8*tmp19*tmp20*tmp1*tmp3*tmp4;
double tmp74 = 8*tmp18*Dt12*tmp19*tmp20*tmp1*tmp3*tmp4;
double tmp75 = -8*tmp19*tmp23*tmp2*tmp3*tmp4;
double tmp76 = -8*tmp18*Dt12*tmp19*tmp23*tmp2*tmp3*tmp4;
double tmp77 = -4*tmp24*tmp1*tmp2*tmp3*tmp4;
double tmp78 = -8*tmp19*tmp22*tmp9*tmp3*tmp4;
double tmp79 = -8*tmp18*Dt12*tmp19*tmp22*tmp9*tmp3*tmp4;
double tmp80 = -4*tmp24*tmp8*tmp9*tmp3*tmp4;
double tmp81 = -8*tmp19*tmp20*tmp8*tmp6;
double tmp82 = -8*tmp18*Dt12*tmp19*tmp20*tmp8*tmp6;
double tmp83 = 8*tmp19*tmp21*tmp1*tmp6;
double tmp84 = 8*tmp18*Dt12*tmp19*tmp21*tmp1*tmp6;
double tmp85 = 8*tmp19*tmp22*tmp2*tmp6;
double tmp86 = 8*tmp18*Dt12*tmp19*tmp22*tmp2*tmp6;
double tmp87 = 4*tmp24*tmp8*tmp2*tmp6;
double tmp88 = -8*tmp19*tmp23*tmp9*tmp6;
double tmp89 = -8*tmp18*Dt12*tmp19*tmp23*tmp9*tmp6;
double tmp90 = 4*tmp19*tmp8*tmp10;
double tmp91 = 4*Dt01*tmp25*tmp19*tmp8*tmp10;
double tmp92 = 4*tmp24*tmp5*tmp3*tmp10;
double tmp93 = -4*tmp24*tmp35*tmp3*tmp10;
double tmp94 = 8*tmp19*tmp23*tmp8*tmp4*tmp10;
double tmp95 = 8*tmp18*Dt12*tmp19*tmp23*tmp8*tmp4*tmp10;
double tmp96 = -8*tmp19*tmp22*tmp1*tmp4*tmp10;
double tmp97 = -8*tmp18*Dt12*tmp19*tmp22*tmp1*tmp4*tmp10;
double tmp98 = -4*tmp24*tmp8*tmp1*tmp4*tmp10;
double tmp99 = 8*tmp19*tmp21*tmp2*tmp4*tmp10;
double tmp100 = 8*tmp18*Dt12*tmp19*tmp21*tmp2*tmp4*tmp10;
double tmp101 = -8*tmp19*tmp20*tmp9*tmp4*tmp10;
double tmp102 = -8*tmp18*Dt12*tmp19*tmp20*tmp9*tmp4*tmp10;
double tmp103 = 4*tmp24*tmp2*tmp9*tmp4*tmp10;
double tmp104 = -4*tmp24*tmp1*tmp9*tmp14;
double tmp105 = 4*tmp19*tmp1*tmp15;
double tmp106 = 4*Dt01*tmp25*tmp19*tmp1*tmp15;
double tmp107 = -8*tmp19*tmp23*tmp8*tmp3*tmp15;
double tmp108 = -8*tmp18*Dt12*tmp19*tmp23*tmp8*tmp3*tmp15;
double tmp109 = 8*tmp19*tmp22*tmp1*tmp3*tmp15;
double tmp110 = 8*tmp18*Dt12*tmp19*tmp22*tmp1*tmp3*tmp15;
double tmp111 = -4*tmp24*tmp8*tmp1*tmp3*tmp15;
double tmp112 = -8*tmp19*tmp21*tmp2*tmp3*tmp15;
double tmp113 = -8*tmp18*Dt12*tmp19*tmp21*tmp2*tmp3*tmp15;
double tmp114 = 8*tmp19*tmp20*tmp9*tmp3*tmp15;
double tmp115 = 8*tmp18*Dt12*tmp19*tmp20*tmp9*tmp3*tmp15;
double tmp116 = 4*tmp24*tmp2*tmp9*tmp3*tmp15;
double tmp117 = 4*tmp24*tmp55*tmp4*tmp15;
double tmp118 = -4*tmp24*tmp7*tmp4*tmp15;
double tmp119 = 8*tmp19*tmp21*tmp8*tmp10*tmp15;
double tmp120 = 8*tmp18*Dt12*tmp19*tmp21*tmp8*tmp10*tmp15;
double tmp121 = 8*tmp19*tmp20*tmp1*tmp10*tmp15;
double tmp122 = 8*tmp18*Dt12*tmp19*tmp20*tmp1*tmp10*tmp15;
double tmp123 = -8*tmp19*tmp23*tmp2*tmp10*tmp15;
double tmp124 = -8*tmp18*Dt12*tmp19*tmp23*tmp2*tmp10*tmp15;
double tmp125 = 4*tmp24*tmp1*tmp2*tmp10*tmp15;
double tmp126 = -8*tmp19*tmp22*tmp9*tmp10*tmp15;
double tmp127 = -8*tmp18*Dt12*tmp19*tmp22*tmp9*tmp10*tmp15;
double tmp128 = 4*tmp24*tmp8*tmp9*tmp10*tmp15;
double tmp129 = -8*tmp19*tmp20*tmp8*tmp26;
double tmp130 = -8*tmp18*Dt12*tmp19*tmp20*tmp8*tmp26;
double tmp131 = 8*tmp19*tmp21*tmp1*tmp26;
double tmp132 = 8*tmp18*Dt12*tmp19*tmp21*tmp1*tmp26;
double tmp133 = 8*tmp19*tmp22*tmp2*tmp26;
double tmp134 = 8*tmp18*Dt12*tmp19*tmp22*tmp2*tmp26;
double tmp135 = -4*tmp24*tmp8*tmp2*tmp26;
double tmp136 = -8*tmp19*tmp23*tmp9*tmp26;
double tmp137 = -8*tmp18*Dt12*tmp19*tmp23*tmp9*tmp26;
double tmp138 = tmp58 + tmp59 + tmp60 + tmp61 + tmp62 + tmp63 + tmp64 + tmp65 + tmp66 + tmp67 + tmp68 + tmp69 + tmp70 + tmp71 + tmp72 + tmp73 + tmp74 + tmp75 + tmp76 + tmp77 + tmp78 + tmp79 + tmp80 + tmp81 + tmp82 + tmp83 + tmp84 + tmp85 + tmp86 + tmp87 + tmp88 + tmp89 + tmp90 + tmp91 + tmp92 + tmp93 + tmp94 + tmp95 + tmp96 + tmp97 + tmp98 + tmp99 + tmp100 + tmp101 + tmp102 + tmp103 + tmp104 + tmp105 + tmp106 + tmp107 + tmp108 + tmp109 + tmp110 + tmp111 + tmp112 + tmp113 + tmp114 + tmp115 + tmp116 + tmp117 + tmp118 + tmp119 + tmp120 + tmp121 + tmp122 + tmp123 + tmp124 + tmp125 + tmp126 + tmp127 + tmp128 + tmp129 + tmp130 + tmp131 + tmp132 + tmp133 + tmp134 + tmp135 + tmp136 + tmp137;
double tmp139 = qOS2*qOS3;
double tmp140 = 2*tmp34*tmp23*tmp8;
double tmp141 = -2*tmp34*tmp22*tmp1;
double tmp142 = 2*tmp34*tmp21*tmp2;
double tmp143 = -2*tmp34*tmp20*tmp9;
double tmp144 = -2*Dt01*tmp0*tmp2*tmp9;
double tmp145 = -2*Dt01*Dt12*tmp1*tmp3;
double tmp146 = 2*Dt01*Dt12*tmp8*tmp4;
double tmp147 = 2*Dt01*tmp0*tmp7*tmp3*tmp4;
double tmp148 = -2*Dt01*tmp0*tmp35*tmp3*tmp4;
double tmp149 = 4*Dt01*tmp0*tmp2*tmp9*tmp6;
double tmp150 = 2*Dt01*Dt12*tmp9*tmp10;
double tmp151 = -4*tmp34*tmp21*tmp8*tmp3*tmp10;
double tmp152 = -4*tmp34*tmp20*tmp1*tmp3*tmp10;
double tmp153 = 4*tmp34*tmp23*tmp2*tmp3*tmp10;
double tmp154 = -2*Dt01*tmp0*tmp1*tmp2*tmp3*tmp10;
double tmp155 = 4*tmp34*tmp22*tmp9*tmp3*tmp10;
double tmp156 = 2*Dt01*tmp0*tmp8*tmp9*tmp3*tmp10;
double tmp157 = 4*tmp34*tmp20*tmp8*tmp4*tmp10;
double tmp158 = -4*tmp34*tmp21*tmp1*tmp4*tmp10;
double tmp159 = -4*tmp34*tmp22*tmp2*tmp4*tmp10;
double tmp160 = -2*Dt01*tmp0*tmp8*tmp2*tmp4*tmp10;
double tmp161 = 4*tmp34*tmp23*tmp9*tmp4*tmp10;
double tmp162 = -2*Dt01*tmp0*tmp1*tmp9*tmp4*tmp10;
double tmp163 = -4*tmp34*tmp23*tmp8*tmp14;
double tmp164 = 4*tmp34*tmp22*tmp1*tmp14;
double tmp165 = 2*Dt01*tmp0*tmp8*tmp1*tmp14;
double tmp166 = -4*tmp34*tmp21*tmp2*tmp14;
double tmp167 = 4*tmp34*tmp20*tmp9*tmp14;
double tmp168 = 2*Dt01*tmp0*tmp2*tmp9*tmp14;
double tmp169 = -2*Dt01*Dt12*tmp2*tmp15;
double tmp170 = 4*tmp34*tmp20*tmp8*tmp3*tmp15;
double tmp171 = -4*tmp34*tmp21*tmp1*tmp3*tmp15;
double tmp172 = -4*tmp34*tmp22*tmp2*tmp3*tmp15;
double tmp173 = 2*Dt01*tmp0*tmp8*tmp2*tmp3*tmp15;
double tmp174 = 4*tmp34*tmp23*tmp9*tmp3*tmp15;
double tmp175 = 2*Dt01*tmp0*tmp1*tmp9*tmp3*tmp15;
double tmp176 = 4*tmp34*tmp21*tmp8*tmp4*tmp15;
double tmp177 = 4*tmp34*tmp20*tmp1*tmp4*tmp15;
double tmp178 = -4*tmp34*tmp23*tmp2*tmp4*tmp15;
double tmp179 = -2*Dt01*tmp0*tmp1*tmp2*tmp4*tmp15;
double tmp180 = -4*tmp34*tmp22*tmp9*tmp4*tmp15;
double tmp181 = 2*Dt01*tmp0*tmp8*tmp9*tmp4*tmp15;
double tmp182 = -2*tmp13*tmp10*tmp15;
double tmp183 = 4*Dt01*tmp0*tmp5*tmp10*tmp15;
double tmp184 = 2*Dt01*tmp0*tmp7*tmp10*tmp15;
double tmp185 = 2*Dt01*tmp0*tmp35*tmp10*tmp15;
double tmp186 = -4*tmp34*tmp23*tmp8*tmp26;
double tmp187 = 4*tmp34*tmp22*tmp1*tmp26;
double tmp188 = -2*Dt01*tmp0*tmp8*tmp1*tmp26;
double tmp189 = -4*tmp34*tmp21*tmp2*tmp26;
double tmp190 = 4*tmp34*tmp20*tmp9*tmp26;
double tmp191 = 2*Dt01*tmp0*tmp2*tmp9*tmp26;
double tmp192 = tmp140 + tmp141 + tmp142 + tmp143 + tmp144 + tmp145 + tmp146 + tmp147 + tmp148 + tmp149 + tmp150 + tmp151 + tmp152 + tmp153 + tmp154 + tmp155 + tmp156 + tmp157 + tmp158 + tmp159 + tmp160 + tmp161 + tmp162 + tmp163 + tmp164 + tmp165 + tmp166 + tmp167 + tmp168 + tmp169 + tmp170 + tmp171 + tmp172 + tmp173 + tmp174 + tmp175 + tmp176 + tmp177 + tmp178 + tmp179 + tmp180 + tmp181 + tmp182 + tmp183 + tmp184 + tmp185 + tmp186 + tmp187 + tmp188 + tmp189 + tmp190 + tmp191;
J(1+_OFF,1+_OFF) = -4*tmp18*tmp24*tmp27*(tmp57 - qOS2*tmp33)*tmp52 + (1 - 2*tmp16 - 2*tmp17)*tmp138 + 2*tmp18*tmp24*tmp27*(tmp53 + qOS3*tmp33)*(-4*tmp34*tmp23*tmp8 + 4*tmp34*tmp22*tmp1 - 4*tmp34*tmp21*tmp2 + 4*tmp34*tmp20*tmp9 + 4*Dt01*tmp0*tmp2*tmp9 + 4*Dt01*Dt12*tmp1*tmp3 - 4*Dt01*Dt12*tmp8*tmp4 - 4*Dt01*tmp0*tmp7*tmp3*tmp4 + 4*Dt01*tmp0*tmp35*tmp3*tmp4 - 8*Dt01*tmp0*tmp2*tmp9*tmp6 - 4*Dt01*Dt12*tmp9*tmp10 + 8*tmp34*tmp21*tmp8*tmp3*tmp10 + 8*tmp34*tmp20*tmp1*tmp3*tmp10 - 8*tmp34*tmp23*tmp2*tmp3*tmp10 + 4*Dt01*tmp0*tmp1*tmp2*tmp3*tmp10 - 8*tmp34*tmp22*tmp9*tmp3*tmp10 - 4*Dt01*tmp0*tmp8*tmp9*tmp3*tmp10 - 8*tmp34*tmp20*tmp8*tmp4*tmp10 + 8*tmp34*tmp21*tmp1*tmp4*tmp10 + 8*tmp34*tmp22*tmp2*tmp4*tmp10 + 4*Dt01*tmp0*tmp8*tmp2*tmp4*tmp10 - 8*tmp34*tmp23*tmp9*tmp4*tmp10 + 4*Dt01*tmp0*tmp1*tmp9*tmp4*tmp10 + 8*tmp34*tmp23*tmp8*tmp14 - 8*tmp34*tmp22*tmp1*tmp14 - 4*Dt01*tmp0*tmp8*tmp1*tmp14 + 8*tmp34*tmp21*tmp2*tmp14 - 8*tmp34*tmp20*tmp9*tmp14 - 4*Dt01*tmp0*tmp2*tmp9*tmp14 + 4*Dt01*Dt12*tmp2*tmp15 - 8*tmp34*tmp20*tmp8*tmp3*tmp15 + 8*tmp34*tmp21*tmp1*tmp3*tmp15 + 8*tmp34*tmp22*tmp2*tmp3*tmp15 - 4*Dt01*tmp0*tmp8*tmp2*tmp3*tmp15 - 8*tmp34*tmp23*tmp9*tmp3*tmp15 - 4*Dt01*tmp0*tmp1*tmp9*tmp3*tmp15 - 8*tmp34*tmp21*tmp8*tmp4*tmp15 - 8*tmp34*tmp20*tmp1*tmp4*tmp15 + 8*tmp34*tmp23*tmp2*tmp4*tmp15 + 4*Dt01*tmp0*tmp1*tmp2*tmp4*tmp15 + 8*tmp34*tmp22*tmp9*tmp4*tmp15 - 4*Dt01*tmp0*tmp8*tmp9*tmp4*tmp15 + 4*tmp13*tmp10*tmp15 - 8*Dt01*tmp0*tmp5*tmp10*tmp15 - 4*Dt01*tmp0*tmp7*tmp10*tmp15 - 4*Dt01*tmp0*tmp35*tmp10*tmp15 + 8*tmp34*tmp23*tmp8*tmp26 - 8*tmp34*tmp22*tmp1*tmp26 + 4*Dt01*tmp0*tmp8*tmp1*tmp26 + 8*tmp34*tmp21*tmp2*tmp26 - 8*tmp34*tmp20*tmp9*tmp26 - 4*Dt01*tmp0*tmp2*tmp9*tmp26);
J(2+_OFF,1+_OFF) = -4*tmp18*tmp24*tmp27*(tmp139 + qOS1*tmp33)*tmp52 + 4*tmp18*tmp24*tmp27*(tmp53 - qOS3*tmp33)*(2*tmp34*tmp20*tmp8 - 2*tmp34*tmp21*tmp1 - 2*tmp34*tmp22*tmp2 + 2*tmp34*tmp23*tmp9 - 2*Dt01*Dt12*tmp2*tmp3 + 2*tmp11*tmp1*tmp9*tmp54 + 2*Dt01*Dt12*tmp1*tmp9*tmp54 - 2*Dt01*Dt12*tmp9*tmp4 + 4*tmp34*tmp21*tmp8*tmp3*tmp4 + 4*tmp34*tmp20*tmp1*tmp3*tmp4 - 4*tmp34*tmp23*tmp2*tmp3*tmp4 - 2*tmp11*tmp1*tmp2*tmp3*tmp4 - 2*Dt01*Dt12*tmp1*tmp2*tmp3*tmp4 - 4*tmp34*tmp22*tmp9*tmp3*tmp4 - 2*tmp11*tmp8*tmp9*tmp3*tmp4 - 2*Dt01*Dt12*tmp8*tmp9*tmp3*tmp4 - 4*tmp34*tmp20*tmp8*tmp6 + 4*tmp34*tmp21*tmp1*tmp6 + 4*tmp34*tmp22*tmp2*tmp6 + 2*tmp11*tmp8*tmp2*tmp6 + 2*Dt01*Dt12*tmp8*tmp2*tmp6 - 4*tmp34*tmp23*tmp9*tmp6 + 2*Dt01*Dt12*tmp8*tmp10 + 2*tmp11*tmp5*tmp3*tmp10 + 2*Dt01*Dt12*tmp5*tmp3*tmp10 - 2*tmp11*tmp35*tmp3*tmp10 - 2*Dt01*Dt12*tmp35*tmp3*tmp10 + 4*tmp34*tmp23*tmp8*tmp4*tmp10 - 4*tmp34*tmp22*tmp1*tmp4*tmp10 - 2*tmp11*tmp8*tmp1*tmp4*tmp10 - 2*Dt01*Dt12*tmp8*tmp1*tmp4*tmp10 + 4*tmp34*tmp21*tmp2*tmp4*tmp10 - 4*tmp34*tmp20*tmp9*tmp4*tmp10 + 2*tmp11*tmp2*tmp9*tmp4*tmp10 + 2*Dt01*Dt12*tmp2*tmp9*tmp4*tmp10 - 2*tmp11*tmp1*tmp9*tmp14 - 2*Dt01*Dt12*tmp1*tmp9*tmp14 + 2*Dt01*Dt12*tmp1*tmp15 - 4*tmp34*tmp23*tmp8*tmp3*tmp15 + 4*tmp34*tmp22*tmp1*tmp3*tmp15 - 2*tmp11*tmp8*tmp1*tmp3*tmp15 - 2*Dt01*Dt12*tmp8*tmp1*tmp3*tmp15 - 4*tmp34*tmp21*tmp2*tmp3*tmp15 + 4*tmp34*tmp20*tmp9*tmp3*tmp15 + 2*tmp11*tmp2*tmp9*tmp3*tmp15 + 2*Dt01*Dt12*tmp2*tmp9*tmp3*tmp15 + 2*tmp11*tmp55*tmp4*tmp15 + 2*Dt01*Dt12*tmp55*tmp4*tmp15 - 2*tmp11*tmp7*tmp4*tmp15 - 2*Dt01*Dt12*tmp7*tmp4*tmp15 + 4*tmp34*tmp21*tmp8*tmp10*tmp15 + 4*tmp34*tmp20*tmp1*tmp10*tmp15 - 4*tmp34*tmp23*tmp2*tmp10*tmp15 + 2*tmp11*tmp1*tmp2*tmp10*tmp15 + 2*Dt01*Dt12*tmp1*tmp2*tmp10*tmp15 - 4*tmp34*tmp22*tmp9*tmp10*tmp15 + 2*tmp11*tmp8*tmp9*tmp10*tmp15 + 2*Dt01*Dt12*tmp8*tmp9*tmp10*tmp15 - 4*tmp34*tmp20*tmp8*tmp26 + 4*tmp34*tmp21*tmp1*tmp26 + 4*tmp34*tmp22*tmp2*tmp26 - 2*tmp11*tmp8*tmp2*tmp26 - 2*Dt01*Dt12*tmp8*tmp2*tmp26 - 4*tmp34*tmp23*tmp9*tmp26) + 2*tmp18*tmp24*tmp27*(-1 + tmp56 + 2*tmp17)*tmp192;
J(3+_OFF,1+_OFF) = 2*tmp18*tmp24*tmp27*(-1 + tmp56 + 2*tmp16)*tmp52 + 2*(tmp57 + qOS2*tmp33)*tmp138 - 4*tmp18*tmp24*tmp27*(tmp139 - qOS1*tmp33)*tmp192;
