double tmp0 = qos(1+_OFF);
double tmp1 = 1.*tmp0;
double tmp2 = 0. + tmp1;
double tmp3 = qos(3+_OFF);
double tmp4 = 1.*tmp3;
double tmp5 = 0. + tmp4;
double tmp6 = qos(2+_OFF);
double tmp7 = 1.*tmp6;
double tmp8 = 0. + tmp7;
double tmp9 = qos(4+_OFF);
double tmp10 = 1.*tmp9;
double tmp11 = 0. + tmp10;
double tmp12 = x1(6+_OFF);
double tmp13 = x2(4+_OFF);
double tmp14 = x1(7+_OFF);
double tmp15 = x2(5+_OFF);
double tmp16 = x1(4+_OFF);
double tmp17 = x2(6+_OFF);
double tmp18 = x1(5+_OFF);
double tmp19 = x2(7+_OFF);
double tmp20 = 1/Dt12;
double tmp21 = -2*tmp14*tmp13;
double tmp22 = 2*tmp12*tmp15;
double tmp23 = -2*tmp18*tmp17;
double tmp24 = 2*tmp16*tmp19;
double tmp25 = tmp21 + tmp22 + tmp23 + tmp24;
double tmp26 = tmp2*tmp5;
double tmp27 = -(tmp8*tmp11);
double tmp28 = tmp26 + tmp27;
double tmp29 = std::pow(tmp5,2);
double tmp30 = -2*tmp29;
double tmp31 = std::pow(tmp11,2);
double tmp32 = -2*tmp31;
double tmp33 = 1 + tmp30 + tmp32;
double tmp34 = tmp8*tmp5;
double tmp35 = tmp2*tmp11;
double tmp36 = tmp34 + tmp35;
double tmp37 = 2*tmp18*tmp13;
double tmp38 = -2*tmp16*tmp15;
double tmp39 = -2*tmp14*tmp17;
double tmp40 = 2*tmp12*tmp19;
double tmp41 = tmp37 + tmp38 + tmp39 + tmp40;
double tmp42 = -2*tmp12*tmp13;
double tmp43 = -2*tmp14*tmp15;
double tmp44 = 2*tmp16*tmp17;
double tmp45 = 2*tmp18*tmp19;
double tmp46 = tmp42 + tmp43 + tmp44 + tmp45;
double tmp47 = tmp2*tmp8;
double tmp48 = tmp5*tmp11;
double tmp49 = tmp47 + tmp48;
double tmp50 = -(tmp2*tmp11);
double tmp51 = tmp34 + tmp50;
double tmp52 = 2*tmp12*tmp13;
double tmp53 = 2*tmp14*tmp15;
double tmp54 = -2*tmp16*tmp17;
double tmp55 = -2*tmp18*tmp19;
double tmp56 = tmp52 + tmp53 + tmp54 + tmp55;
double tmp57 = std::pow(tmp8,2);
double tmp58 = -2*tmp57;
double tmp59 = 1 + tmp58 + tmp32;
double tmp60 = 1 + tmp58 + tmp30;
double tmp61 = tmp8*tmp11;
double tmp62 = tmp26 + tmp61;
double tmp63 = -(tmp5*tmp11);
double tmp64 = tmp47 + tmp63;
J(1+_OFF,1+_OFF) = tmp20*(2*tmp36*tmp25 + 2*tmp28*tmp46);
J(1+_OFF,2+_OFF) = tmp20*(-(tmp33*tmp25) + 2*tmp28*tmp41);
J(1+_OFF,3+_OFF) = tmp20*(-(tmp33*tmp56) + 2*tmp36*tmp41);
J(2+_OFF,1+_OFF) = tmp20*(tmp59*tmp25 - 2*tmp49*tmp46);
J(2+_OFF,2+_OFF) = tmp20*(-2*tmp51*tmp25 - 2*tmp49*tmp41);
J(2+_OFF,3+_OFF) = tmp20*(-2*tmp51*tmp56 + tmp59*tmp41);
J(3+_OFF,1+_OFF) = -(tmp20*(2*tmp64*tmp25 + tmp60*tmp46));
J(3+_OFF,2+_OFF) = -(tmp20*(2*tmp62*tmp25 + tmp60*tmp41));
J(3+_OFF,3+_OFF) = -(tmp20*(2*tmp62*tmp56 + 2*tmp64*tmp41));
