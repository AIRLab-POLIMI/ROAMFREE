double tmp0 = x2(6+_OFF);
double tmp1 = -0.01*tmp0;
double tmp2 = 0. + tmp1;
double tmp3 = so(2+_OFF);
double tmp4 = x2(4+_OFF);
double tmp5 = so(3+_OFF);
double tmp6 = x2(5+_OFF);
double tmp7 = 1.*tmp0;
double tmp8 = 0. + tmp7;
double tmp9 = 1.*tmp4;
double tmp10 = 0. + tmp9;
double tmp11 = 1.*tmp6;
double tmp12 = 0. + tmp11;
double tmp13 = x2(7+_OFF);
double tmp14 = 0.01*tmp13;
double tmp15 = 0. + tmp14;
double tmp16 = 0.01*tmp4;
double tmp17 = 0. + tmp16;
double tmp18 = -0.01*tmp6;
double tmp19 = 0. + tmp18;
double tmp20 = 1.*tmp13;
double tmp21 = 0. + tmp20;
double tmp22 = so(1+_OFF);
double tmp23 = 0.01*tmp6;
double tmp24 = 0. + tmp23;
double tmp25 = -0.01*tmp13;
double tmp26 = 0. + tmp25;
double tmp27 = 0.01*tmp0;
double tmp28 = 0. + tmp27;
double tmp29 = -4*tmp2*tmp21;
double tmp30 = tmp5*tmp2*tmp8;
double tmp31 = -4*tmp24*tmp21;
double tmp32 = tmp5*tmp17*tmp21;
double tmp33 = -4*tmp17*tmp21;
double tmp34 = -4*tmp17*tmp12;
double tmp35 = -4*tmp8*tmp15;
double tmp36 = tmp3*tmp19*tmp12;
double tmp37 = -4*tmp17*tmp8;
double tmp38 = -4*tmp12*tmp26;
double tmp39 = tmp22*tmp26*tmp21;
double tmp40 = -4*tmp12*tmp28;
double tmp41 = -4*tmp19*tmp8;
double tmp42 = tmp22*tmp17*tmp12;
double tmp43 = tmp3*tmp17*tmp8;
J(1+_OFF,1+_OFF) = 0.001;
J(1+_OFF,4+_OFF) = 2*(-(tmp3*tmp10*tmp2) + tmp5*tmp12*tmp2 + tmp43 + tmp5*tmp19*tmp8 + tmp5*tmp10*tmp15 + tmp3*tmp12*tmp15 + tmp32 - tmp3*tmp19*tmp21) + tmp22*(tmp35 + tmp29);
J(1+_OFF,5+_OFF) = tmp22*(tmp37 + tmp31) + 2*(tmp5*tmp17*tmp10 - tmp3*tmp10*tmp24 + tmp3*tmp17*tmp12 + tmp5*tmp24*tmp12 + tmp30 + tmp3*tmp8*tmp26 - tmp3*tmp2*tmp21 + tmp5*tmp26*tmp21);
J(1+_OFF,6+_OFF) = tmp22*(tmp41 + tmp33) + 2*(-(tmp3*tmp17*tmp10) + tmp5*tmp10*tmp19 + tmp5*tmp17*tmp12 + tmp36 + tmp3*tmp28*tmp8 + tmp5*tmp8*tmp26 + tmp5*tmp28*tmp21 - tmp3*tmp26*tmp21);
J(2+_OFF,2+_OFF) = 0.001;
J(2+_OFF,4+_OFF) = tmp3*(tmp34 + tmp29) + 2*(-(tmp5*tmp17*tmp10) - tmp5*tmp19*tmp12 + tmp22*tmp10*tmp2 + tmp22*tmp17*tmp8 + tmp30 + tmp22*tmp12*tmp15 + tmp22*tmp19*tmp21 + tmp5*tmp15*tmp21);
J(2+_OFF,5+_OFF) = tmp3*(tmp38 + tmp31) + 2*(tmp22*tmp10*tmp24 + tmp42 - tmp5*tmp12*tmp2 + tmp5*tmp24*tmp8 - tmp5*tmp10*tmp26 + tmp22*tmp8*tmp26 + tmp32 + tmp22*tmp2*tmp21);
J(2+_OFF,6+_OFF) = tmp3*(tmp40 + tmp33) + 2*(tmp22*tmp17*tmp10 + tmp22*tmp19*tmp12 - tmp5*tmp10*tmp28 + tmp5*tmp17*tmp8 + tmp22*tmp28*tmp8 - tmp5*tmp12*tmp26 + tmp5*tmp19*tmp21 + tmp39);
J(3+_OFF,3+_OFF) = 0.001;
J(3+_OFF,4+_OFF) = tmp5*(tmp34 + tmp35) + 2*(tmp3*tmp17*tmp10 + tmp36 + tmp22*tmp12*tmp2 - tmp22*tmp19*tmp8 + tmp3*tmp2*tmp8 - tmp22*tmp10*tmp15 + tmp22*tmp17*tmp21 + tmp3*tmp15*tmp21);
J(3+_OFF,5+_OFF) = tmp5*(tmp37 + tmp38) + 2*(-(tmp22*tmp17*tmp10) + tmp22*tmp24*tmp12 + tmp3*tmp12*tmp2 + tmp3*tmp24*tmp8 - tmp22*tmp2*tmp8 + tmp3*tmp10*tmp26 + tmp3*tmp17*tmp21 + tmp39);
J(3+_OFF,6+_OFF) = tmp5*(tmp40 + tmp41) + 2*(-(tmp22*tmp10*tmp19) + tmp42 + tmp3*tmp10*tmp28 + tmp43 + tmp3*tmp12*tmp26 - tmp22*tmp8*tmp26 + tmp3*tmp19*tmp21 + tmp22*tmp28*tmp21);
