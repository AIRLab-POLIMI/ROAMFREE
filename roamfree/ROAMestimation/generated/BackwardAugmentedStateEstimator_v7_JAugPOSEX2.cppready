double tmp0 = x2(5+_OFF);
double tmp1 = x2(6+_OFF);
double tmp2 = x2(4+_OFF);
double tmp3 = x2(7+_OFF);
double tmp4 = 1.*tmp2;
double tmp5 = 0. + tmp4;
double tmp6 = -0.01*tmp1;
double tmp7 = 0. + tmp6;
double tmp8 = 0.01*tmp2;
double tmp9 = 0. + tmp8;
double tmp10 = 1.*tmp1;
double tmp11 = 0. + tmp10;
double tmp12 = 1.*tmp0;
double tmp13 = 0. + tmp12;
double tmp14 = 0.01*tmp3;
double tmp15 = 0. + tmp14;
double tmp16 = -0.01*tmp0;
double tmp17 = 0. + tmp16;
double tmp18 = 1.*tmp3;
double tmp19 = 0. + tmp18;
double tmp20 = so(1+_OFF);
double tmp21 = so(2+_OFF);
double tmp22 = 0.01*tmp0;
double tmp23 = 0. + tmp22;
double tmp24 = -0.01*tmp3;
double tmp25 = 0. + tmp24;
double tmp26 = so(3+_OFF);
double tmp27 = tmp9*tmp13;
double tmp28 = tmp11*tmp25;
double tmp29 = 0.01*tmp1;
double tmp30 = 0. + tmp29;
double tmp31 = tmp9*tmp11;
double tmp32 = tmp13*tmp15;
double tmp33 = 2*tmp5*tmp17;
double tmp34 = -2*tmp7*tmp19;
double tmp35 = -(tmp9*tmp5);
double tmp36 = tmp7*tmp11;
double tmp37 = tmp9*tmp19;
double tmp38 = 2*tmp5*tmp7;
double tmp39 = -2*tmp23*tmp19;
double tmp40 = 2*tmp5*tmp25;
double tmp41 = -2*tmp9*tmp19;
double tmp42 = tmp17*tmp19;
double tmp43 = tmp9*tmp5;
double tmp44 = tmp17*tmp13;
double tmp45 = tmp30*tmp11;
double tmp46 = tmp25*tmp19;
double tmp47 = tmp13*tmp7;
double tmp48 = -2*tmp9*tmp13;
double tmp49 = -2*tmp11*tmp15;
double tmp50 = tmp15*tmp19;
double tmp51 = tmp23*tmp11;
double tmp52 = -2*tmp9*tmp11;
double tmp53 = -2*tmp13*tmp25;
double tmp54 = tmp23*tmp13;
double tmp55 = -2*tmp13*tmp30;
double tmp56 = -2*tmp17*tmp11;
double tmp57 = tmp30*tmp19;
J(1+_OFF,1+_OFF) = 0.001;
J(1+_OFF,4+_OFF) = 2*tmp26*(tmp47 + tmp17*tmp11 + tmp5*tmp15 + tmp37) + 2*tmp21*(-(tmp5*tmp7) + tmp31 + tmp32 - tmp17*tmp19) + tmp20*(tmp33 + 2*tmp9*tmp13 + tmp49 + tmp34);
J(1+_OFF,5+_OFF) = tmp20*(tmp38 + tmp52 + 2*tmp13*tmp25 + tmp39) + 2*tmp21*(-(tmp5*tmp23) + tmp27 + tmp28 - tmp7*tmp19) + 2*tmp26*(tmp43 + tmp54 + tmp36 + tmp46);
J(1+_OFF,6+_OFF) = tmp20*(2*tmp13*tmp30 + tmp56 + tmp40 + tmp41) + 2*tmp26*(tmp5*tmp17 + tmp27 + tmp28 + tmp57) + 2*tmp21*(tmp35 + tmp44 + tmp45 - tmp25*tmp19);
J(2+_OFF,2+_OFF) = 0.001;
J(2+_OFF,4+_OFF) = 2*tmp20*(tmp5*tmp7 + tmp31 + tmp32 + tmp42) + tmp21*(tmp33 + tmp48 + 2*tmp11*tmp15 + tmp34) + 2*tmp26*(tmp35 - tmp17*tmp13 + tmp36 + tmp50);
J(2+_OFF,5+_OFF) = 2*tmp26*(-(tmp13*tmp7) + tmp51 - tmp5*tmp25 + tmp37) + tmp21*(tmp38 + 2*tmp9*tmp11 + tmp53 + tmp39) + 2*tmp20*(tmp5*tmp23 + tmp27 + tmp28 + tmp7*tmp19);
J(2+_OFF,6+_OFF) = tmp21*(tmp55 + 2*tmp17*tmp11 + tmp40 + tmp41) + 2*tmp26*(-(tmp5*tmp30) + tmp31 - tmp13*tmp25 + tmp42) + 2*tmp20*(tmp43 + tmp44 + tmp45 + tmp46);
J(3+_OFF,3+_OFF) = 0.001;
J(3+_OFF,4+_OFF) = 2*tmp20*(tmp47 - tmp17*tmp11 - tmp5*tmp15 + tmp37) + tmp26*(tmp33 + tmp48 + tmp49 + 2*tmp7*tmp19) + 2*tmp21*(tmp43 + tmp44 + tmp36 + tmp50);
J(3+_OFF,5+_OFF) = 2*tmp21*(tmp47 + tmp51 + tmp5*tmp25 + tmp37) + tmp26*(tmp38 + tmp52 + tmp53 + 2*tmp23*tmp19) + 2*tmp20*(tmp35 + tmp54 - tmp7*tmp11 + tmp46);
J(3+_OFF,6+_OFF) = tmp26*(tmp55 + tmp56 + tmp40 + 2*tmp9*tmp19) + 2*tmp21*(tmp5*tmp30 + tmp31 + tmp13*tmp25 + tmp42) + 2*tmp20*(-(tmp5*tmp17) + tmp27 - tmp11*tmp25 + tmp57);
