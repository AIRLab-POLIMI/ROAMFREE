double tmp0 = std::pow(qOS2,2);
double tmp1 = -2*tmp0;
double tmp2 = std::pow(qOS3,2);
double tmp3 = -2*tmp2;
double tmp4 = 1 + tmp1 + tmp3;
double tmp5 = x1(5+_OFF);
double tmp6 = 1.*tmp5;
double tmp7 = 0. + tmp6;
double tmp8 = x1(6+_OFF);
double tmp9 = 1.*tmp8;
double tmp10 = 0. + tmp9;
double tmp11 = x1(7+_OFF);
double tmp12 = 1.*tmp11;
double tmp13 = 0. + tmp12;
double tmp14 = x1(4+_OFF);
double tmp15 = 1.*tmp14;
double tmp16 = 0. + tmp15;
double tmp17 = qOS3*tmp10;
double tmp18 = -(qOS2*tmp13);
double tmp19 = tmp17 + tmp18;
double tmp20 = std::pow(qOS1,2);
double tmp21 = -tmp20;
double tmp22 = -tmp0;
double tmp23 = -tmp2;
double tmp24 = 1 + tmp21 + tmp22 + tmp23;
double tmp25 = std::sqrt(tmp24);
double tmp26 = qOS2*tmp10;
double tmp27 = qOS3*tmp13;
double tmp28 = tmp26 + tmp27;
double tmp29 = qOS2*tmp16;
double tmp30 = -(qOS3*tmp7);
double tmp31 = tmp25*tmp10;
double tmp32 = qOS1*tmp13;
double tmp33 = tmp29 + tmp30 + tmp31 + tmp32;
double tmp34 = qOS1*tmp16;
double tmp35 = tmp25*tmp7;
double tmp36 = tmp34 + tmp35 + tmp17 + tmp18;
double tmp37 = qOS3*tmp16;
double tmp38 = qOS2*tmp7;
double tmp39 = -(qOS1*tmp10);
double tmp40 = tmp25*tmp13;
double tmp41 = tmp37 + tmp38 + tmp39 + tmp40;
double tmp42 = 0.01*tmp14;
double tmp43 = 0. + tmp42;
double tmp44 = -0.01*tmp5;
double tmp45 = 0. + tmp44;
double tmp46 = -0.01*tmp8;
double tmp47 = 0. + tmp46;
double tmp48 = 0.01*tmp11;
double tmp49 = 0. + tmp48;
double tmp50 = tmp25*tmp16;
double tmp51 = -(qOS1*tmp7);
double tmp52 = -(qOS2*tmp10);
double tmp53 = -(qOS3*tmp13);
double tmp54 = tmp50 + tmp51 + tmp52 + tmp53;
double tmp55 = -(tmp33*tmp54);
double tmp56 = tmp36*tmp41;
double tmp57 = tmp55 + tmp56;
double tmp58 = tmp33*tmp36;
double tmp59 = -(tmp25*tmp16);
double tmp60 = qOS1*tmp7;
double tmp61 = tmp59 + tmp60 + tmp26 + tmp27;
double tmp62 = -(tmp61*tmp41);
double tmp63 = tmp58 + tmp62;
double tmp64 = std::pow(tmp16,2);
double tmp65 = tmp4*tmp64;
double tmp66 = std::pow(tmp7,2);
double tmp67 = tmp4*tmp66;
double tmp68 = 2*tmp0;
double tmp69 = 2*tmp2;
double tmp70 = -1 + tmp68 + tmp69;
double tmp71 = std::pow(tmp10,2);
double tmp72 = std::pow(tmp13,2);
double tmp73 = tmp71 + tmp72;
double tmp74 = tmp70*tmp73;
double tmp75 = tmp25*tmp19;
double tmp76 = qOS1*tmp28;
double tmp77 = tmp75 + tmp76;
double tmp78 = 4*tmp7*tmp77;
double tmp79 = qOS1*tmp19;
double tmp80 = -(tmp25*tmp28);
double tmp81 = tmp79 + tmp80;
double tmp82 = 4*tmp16*tmp81;
double tmp83 = tmp65 + tmp67 + tmp74 + tmp78 + tmp82;
double tmp84 = x0(5+_OFF);
double tmp85 = x0(4+_OFF);
double tmp86 = x0(6+_OFF);
double tmp87 = x0(7+_OFF);
double tmp88 = x2(5+_OFF);
double tmp89 = x2(4+_OFF);
double tmp90 = x2(6+_OFF);
double tmp91 = x2(7+_OFF);
double tmp92 = -(qOS2*tmp47);
double tmp93 = qOS3*tmp49;
double tmp94 = qOS3*tmp47;
double tmp95 = qOS2*tmp49;
double tmp96 = tmp94 + tmp95;
double tmp97 = tmp92 + tmp93;
double tmp98 = std::pow(tmp86,2);
double tmp99 = std::pow(tmp90,2);
double tmp100 = tmp25*tmp43;
double tmp101 = qOS1*tmp45;
double tmp102 = tmp100 + tmp101 + tmp92 + tmp93;
double tmp103 = -(qOS3*tmp43);
double tmp104 = qOS2*tmp45;
double tmp105 = qOS1*tmp47;
double tmp106 = tmp25*tmp49;
double tmp107 = tmp103 + tmp104 + tmp105 + tmp106;
double tmp108 = qOS2*tmp43;
double tmp109 = qOS3*tmp45;
double tmp110 = tmp25*tmp47;
double tmp111 = -(qOS1*tmp49);
double tmp112 = tmp108 + tmp109 + tmp110 + tmp111;
double tmp113 = std::pow(tmp84,2);
double tmp114 = std::pow(tmp87,2);
double tmp115 = std::pow(tmp88,2);
double tmp116 = std::pow(tmp91,2);
double tmp117 = 0.01*tmp5;
double tmp118 = 0. + tmp117;
double tmp119 = -0.01*tmp11;
double tmp120 = 0. + tmp119;
double tmp121 = -2*tmp7*tmp47;
double tmp122 = -2*tmp43*tmp16;
double tmp123 = -(qOS1*tmp43);
double tmp124 = std::pow(Dt01,2);
double tmp125 = 4.9*tmp124;
double tmp126 = std::pow(Dt12,2);
double tmp127 = 4.9*tmp126;
double tmp128 = x0(3+_OFF);
double tmp129 = 2.*sO2*tmp85*tmp84;
double tmp130 = -2.*sO3*tmp113;
double tmp131 = -2.*sO1*tmp85*tmp86;
double tmp132 = -2.*sO3*tmp98;
double tmp133 = 2.*sO1*tmp84*tmp87;
double tmp134 = 2.*sO2*tmp86*tmp87;
double tmp135 = x1(3+_OFF);
double tmp136 = 0. + tmp135;
double tmp137 = -2.*tmp136;
double tmp138 = -4.*sO2*tmp16*tmp7;
double tmp139 = 4.*sO3*tmp66;
double tmp140 = 4.*sO1*tmp16*tmp10;
double tmp141 = 4.*sO3*tmp71;
double tmp142 = -4.*sO1*tmp7*tmp13;
double tmp143 = -4.*sO2*tmp10*tmp13;
double tmp144 = x2(3+_OFF);
double tmp145 = 2.*sO2*tmp89*tmp88;
double tmp146 = -2.*sO3*tmp115;
double tmp147 = -2.*sO1*tmp89*tmp90;
double tmp148 = -2.*sO3*tmp99;
double tmp149 = 2.*sO1*tmp88*tmp91;
double tmp150 = 2.*sO2*tmp90*tmp91;
double tmp151 = tmp125 + tmp127 + tmp128 + tmp129 + tmp130 + tmp131 + tmp132 + tmp133 + tmp134 + tmp137 + tmp138 + tmp139 + tmp140 + tmp141 + tmp142 + tmp143 + tmp144 + tmp145 + tmp146 + tmp147 + tmp148 + tmp149 + tmp150;
double tmp152 = qOS3*tmp43;
double tmp153 = -(qOS2*tmp118);
double tmp154 = tmp152 + tmp153;
double tmp155 = qOS3*tmp118;
double tmp156 = tmp108 + tmp155;
double tmp157 = x0(1+_OFF);
double tmp158 = 2*sO2*tmp84*tmp86;
double tmp159 = -2*sO1*tmp98;
double tmp160 = -2*sO2*tmp85*tmp87;
double tmp161 = -2*sO1*tmp114;
double tmp162 = x1(1+_OFF);
double tmp163 = 0. + tmp162;
double tmp164 = -2*tmp163;
double tmp165 = -4*sO2*tmp7*tmp10;
double tmp166 = 4*sO1*tmp71;
double tmp167 = 4*sO2*tmp16*tmp13;
double tmp168 = 4*sO1*tmp72;
double tmp169 = x2(1+_OFF);
double tmp170 = 2*sO2*tmp88*tmp90;
double tmp171 = -2*sO1*tmp99;
double tmp172 = -2*sO2*tmp89*tmp91;
double tmp173 = -2*sO1*tmp116;
double tmp174 = tmp85*tmp86;
double tmp175 = tmp84*tmp87;
double tmp176 = -2*tmp16*tmp10;
double tmp177 = -2*tmp7*tmp13;
double tmp178 = tmp89*tmp90;
double tmp179 = tmp88*tmp91;
double tmp180 = tmp174 + tmp175 + tmp176 + tmp177 + tmp178 + tmp179;
double tmp181 = 2*sO3*tmp180;
double tmp182 = tmp157 + tmp158 + tmp159 + tmp160 + tmp161 + tmp164 + tmp165 + tmp166 + tmp167 + tmp168 + tmp169 + tmp170 + tmp171 + tmp172 + tmp173 + tmp181;
double tmp183 = tmp25*tmp120;
double tmp184 = tmp152 + tmp153 + tmp105 + tmp183;
double tmp185 = qOS1*tmp118;
double tmp186 = qOS2*tmp47;
double tmp187 = -(qOS3*tmp120);
double tmp188 = tmp100 + tmp185 + tmp186 + tmp187;
double tmp189 = tmp25*tmp118;
double tmp190 = qOS2*tmp120;
double tmp191 = tmp123 + tmp189 + tmp94 + tmp190;
double tmp192 = x0(2+_OFF);
double tmp193 = -2*sO2*tmp113;
double tmp194 = 2*sO1*tmp84*tmp86;
double tmp195 = 2*sO1*tmp85*tmp87;
double tmp196 = -2*sO2*tmp114;
double tmp197 = x1(2+_OFF);
double tmp198 = 0. + tmp197;
double tmp199 = -2*tmp198;
double tmp200 = 4*sO2*tmp66;
double tmp201 = -4*sO1*tmp7*tmp10;
double tmp202 = -4*sO1*tmp16*tmp13;
double tmp203 = 4*sO2*tmp72;
double tmp204 = x2(2+_OFF);
double tmp205 = -2*sO2*tmp115;
double tmp206 = 2*sO1*tmp88*tmp90;
double tmp207 = 2*sO1*tmp89*tmp91;
double tmp208 = -2*sO2*tmp116;
double tmp209 = tmp85*tmp84;
double tmp210 = -(tmp86*tmp87);
double tmp211 = -2*tmp16*tmp7;
double tmp212 = 2*tmp10*tmp13;
double tmp213 = tmp89*tmp88;
double tmp214 = -(tmp90*tmp91);
double tmp215 = tmp209 + tmp210 + tmp211 + tmp212 + tmp213 + tmp214;
double tmp216 = -2*sO3*tmp215;
double tmp217 = tmp192 + tmp193 + tmp194 + tmp195 + tmp196 + tmp199 + tmp200 + tmp201 + tmp202 + tmp203 + tmp204 + tmp205 + tmp206 + tmp207 + tmp208 + tmp216;
double tmp218 = 0.01*tmp8;
double tmp219 = 0. + tmp218;
double tmp220 = 2*tmp43*tmp10;
double tmp221 = qOS1*tmp43;
double tmp222 = tmp25*tmp45;
double tmp223 = -(qOS2*tmp43);
double tmp224 = qOS1*tmp120;
double tmp225 = tmp152 + tmp104;
double tmp226 = tmp223 + tmp109;
double tmp227 = 2*tmp43*tmp13;
double tmp228 = tmp25*tmp219;
double tmp229 = tmp223 + tmp109 + tmp228 + tmp224;
double tmp230 = -(qOS3*tmp219);
double tmp231 = tmp221 + tmp222 + tmp230 + tmp190;
double tmp232 = -(qOS1*tmp45);
double tmp233 = qOS2*tmp219;
double tmp234 = qOS3*tmp120;
double tmp235 = tmp100 + tmp232 + tmp233 + tmp234;
double tmp236 = 4*tmp66;
double tmp237 = 4*tmp72;
double tmp238 = -2 + tmp236 + tmp237;
double tmp239 = -4.*sO2*tmp43*tmp16;
double tmp240 = 8.*sO3*tmp43*tmp7;
double tmp241 = -4.*sO2*tmp45*tmp7;
double tmp242 = -4.*sO1*tmp7*tmp47;
double tmp243 = 4.*sO1*tmp45*tmp10;
double tmp244 = -4.*sO2*tmp47*tmp10;
double tmp245 = 4.*sO1*tmp16*tmp49;
double tmp246 = 8.*sO3*tmp10*tmp49;
double tmp247 = -4.*sO1*tmp43*tmp13;
double tmp248 = -4.*sO2*tmp49*tmp13;
double tmp249 = tmp239 + tmp240 + tmp241 + tmp242 + tmp243 + tmp244 + tmp245 + tmp246 + tmp247 + tmp248;
double tmp250 = -(tmp36*tmp61);
double tmp251 = tmp33*tmp41;
double tmp252 = tmp250 + tmp251;
double tmp253 = tmp61*tmp41;
double tmp254 = tmp58 + tmp253;
double tmp255 = 4*sO2*tmp16*tmp47;
double tmp256 = -4*sO2*tmp43*tmp10;
double tmp257 = -4*sO2*tmp7*tmp49;
double tmp258 = 8*sO1*tmp10*tmp49;
double tmp259 = 4*sO2*tmp45*tmp13;
double tmp260 = 8*sO1*tmp47*tmp13;
double tmp261 = -2*tmp45*tmp10;
double tmp262 = -2*tmp16*tmp49;
double tmp263 = -2*tmp43*tmp13;
double tmp264 = tmp121 + tmp261 + tmp262 + tmp263;
double tmp265 = 2*sO3*tmp264;
double tmp266 = tmp255 + tmp256 + tmp257 + tmp258 + tmp259 + tmp260 + tmp265;
double tmp267 = 8*sO2*tmp43*tmp7;
double tmp268 = -4*sO1*tmp16*tmp47;
double tmp269 = -4*sO1*tmp43*tmp10;
double tmp270 = -4*sO1*tmp7*tmp49;
double tmp271 = -4*sO1*tmp45*tmp13;
double tmp272 = 8*sO2*tmp47*tmp13;
double tmp273 = -2*tmp45*tmp7;
double tmp274 = 2*tmp47*tmp10;
double tmp275 = 2*tmp49*tmp13;
double tmp276 = tmp122 + tmp273 + tmp274 + tmp275;
double tmp277 = -2*sO3*tmp276;
double tmp278 = tmp267 + tmp268 + tmp269 + tmp270 + tmp271 + tmp272 + tmp277;
double tmp279 = -2*tmp66;
double tmp280 = -2*tmp72;
double tmp281 = tmp20*tmp238;
double tmp282 = tmp2*tmp238;
double tmp283 = -(tmp25*tmp7);
double tmp284 = qOS2*tmp13;
double tmp285 = tmp283 + tmp284;
double tmp286 = tmp16*tmp285;
double tmp287 = tmp38 + tmp40;
double tmp288 = tmp10*tmp287;
double tmp289 = tmp286 + tmp288;
double tmp290 = 4*qOS1*tmp289;
double tmp291 = tmp7*tmp10;
double tmp292 = tmp16*tmp13;
double tmp293 = tmp291 + tmp292;
double tmp294 = tmp25*tmp293;
double tmp295 = tmp16*tmp7;
double tmp296 = -(tmp10*tmp13);
double tmp297 = tmp295 + tmp296;
double tmp298 = qOS2*tmp297;
double tmp299 = tmp294 + tmp298;
double tmp300 = -4*qOS3*tmp299;
double tmp301 = 1 + tmp279 + tmp280 + tmp281 + tmp282 + tmp290 + tmp300;
double tmp302 = -(tmp25*tmp45);
double tmp303 = tmp221 + tmp302 + tmp94 + tmp95;
double tmp304 = tmp102*tmp33;
double tmp305 = tmp107*tmp36;
double tmp306 = 8*tmp43*tmp7;
double tmp307 = 8*tmp47*tmp13;
double tmp308 = tmp306 + tmp307;
double tmp309 = 4.*sO1*tmp43*tmp16;
double tmp310 = -4.*sO1*tmp118*tmp7;
double tmp311 = -4.*sO2*tmp7*tmp47;
double tmp312 = 8.*sO3*tmp43*tmp10;
double tmp313 = -4.*sO2*tmp118*tmp10;
double tmp314 = 4.*sO1*tmp47*tmp10;
double tmp315 = -4.*sO2*tmp16*tmp120;
double tmp316 = 8.*sO3*tmp7*tmp120;
double tmp317 = -4.*sO2*tmp43*tmp13;
double tmp318 = -4.*sO1*tmp120*tmp13;
double tmp319 = tmp309 + tmp310 + tmp311 + tmp312 + tmp313 + tmp314 + tmp315 + tmp316 + tmp317 + tmp318;
double tmp320 = 4*sO2*tmp16*tmp118;
double tmp321 = -4*sO2*tmp43*tmp7;
double tmp322 = 8*sO1*tmp43*tmp10;
double tmp323 = -4*sO2*tmp10*tmp120;
double tmp324 = 8*sO1*tmp118*tmp13;
double tmp325 = 4*sO2*tmp47*tmp13;
double tmp326 = -2*tmp118*tmp7;
double tmp327 = -2*tmp47*tmp10;
double tmp328 = -2*tmp120*tmp13;
double tmp329 = tmp122 + tmp326 + tmp327 + tmp328;
double tmp330 = 2*sO3*tmp329;
double tmp331 = tmp320 + tmp321 + tmp322 + tmp323 + tmp324 + tmp325 + tmp330;
double tmp332 = -4*sO1*tmp16*tmp118;
double tmp333 = -4*sO1*tmp43*tmp7;
double tmp334 = 8*sO2*tmp7*tmp120;
double tmp335 = -4*sO1*tmp10*tmp120;
double tmp336 = 8*sO2*tmp118*tmp13;
double tmp337 = -4*sO1*tmp47*tmp13;
double tmp338 = 2*tmp118*tmp10;
double tmp339 = -2*tmp16*tmp120;
double tmp340 = tmp121 + tmp338 + tmp339 + tmp227;
double tmp341 = -2*sO3*tmp340;
double tmp342 = tmp332 + tmp333 + tmp334 + tmp335 + tmp336 + tmp337 + tmp341;
double tmp343 = -(tmp25*tmp47);
double tmp344 = tmp108 + tmp155 + tmp343 + tmp224;
double tmp345 = tmp184*tmp33;
double tmp346 = tmp188*tmp36;
double tmp347 = 8*tmp7*tmp120;
double tmp348 = 8*tmp118*tmp13;
double tmp349 = tmp347 + tmp348;
double tmp350 = -(tmp25*tmp120);
double tmp351 = 4.*sO1*tmp16*tmp45;
double tmp352 = -4.*sO1*tmp43*tmp7;
double tmp353 = -4.*sO2*tmp16*tmp219;
double tmp354 = 8.*sO3*tmp7*tmp219;
double tmp355 = -4.*sO2*tmp43*tmp10;
double tmp356 = 8.*sO3*tmp45*tmp10;
double tmp357 = -4.*sO2*tmp7*tmp120;
double tmp358 = 4.*sO1*tmp10*tmp120;
double tmp359 = -4.*sO2*tmp45*tmp13;
double tmp360 = -4.*sO1*tmp219*tmp13;
double tmp361 = tmp351 + tmp352 + tmp353 + tmp354 + tmp355 + tmp356 + tmp357 + tmp358 + tmp359 + tmp360;
double tmp362 = 4*sO2*tmp43*tmp16;
double tmp363 = -4*sO2*tmp45*tmp7;
double tmp364 = 8*sO1*tmp45*tmp10;
double tmp365 = -4*sO2*tmp219*tmp10;
double tmp366 = 8*sO1*tmp43*tmp13;
double tmp367 = 4*sO2*tmp120*tmp13;
double tmp368 = -2*tmp16*tmp45;
double tmp369 = -2*tmp43*tmp7;
double tmp370 = -2*tmp10*tmp120;
double tmp371 = -2*tmp219*tmp13;
double tmp372 = tmp368 + tmp369 + tmp370 + tmp371;
double tmp373 = 2*sO3*tmp372;
double tmp374 = tmp362 + tmp363 + tmp364 + tmp365 + tmp366 + tmp367 + tmp373;
double tmp375 = -4*sO1*tmp43*tmp16;
double tmp376 = -4*sO1*tmp45*tmp7;
double tmp377 = 8*sO2*tmp7*tmp219;
double tmp378 = -4*sO1*tmp219*tmp10;
double tmp379 = 8*sO2*tmp43*tmp13;
double tmp380 = -4*sO1*tmp120*tmp13;
double tmp381 = -2*tmp16*tmp219;
double tmp382 = -2*tmp7*tmp120;
double tmp383 = 2*tmp45*tmp13;
double tmp384 = tmp381 + tmp220 + tmp382 + tmp383;
double tmp385 = -2*sO3*tmp384;
double tmp386 = tmp375 + tmp376 + tmp377 + tmp378 + tmp379 + tmp380 + tmp385;
double tmp387 = qOS1*tmp219;
double tmp388 = tmp152 + tmp104 + tmp387 + tmp350;
double tmp389 = tmp229*tmp33;
double tmp390 = tmp231*tmp36;
double tmp391 = 8*tmp7*tmp219;
double tmp392 = 8*tmp43*tmp13;
double tmp393 = tmp391 + tmp392;
double tmp394 = tmp43*tmp16;
double tmp395 = tmp45*tmp7;
double tmp396 = tmp16*tmp10;
double tmp397 = tmp7*tmp13;
double tmp398 = tmp396 + tmp397;
double tmp399 = -2*tmp71;
double tmp400 = 1 + tmp399 + tmp280;
double tmp401 = 4*tmp71;
double tmp402 = -2 + tmp236 + tmp401;
double tmp403 = tmp36*tmp61;
double tmp404 = tmp403 + tmp251;
double tmp405 = -(tmp16*tmp13);
double tmp406 = tmp291 + tmp405;
double tmp407 = 2*qOS2*qOS3*tmp406;
double tmp408 = -(tmp7*tmp10);
double tmp409 = tmp408 + tmp292;
double tmp410 = 2*qOS1*tmp25*tmp409;
double tmp411 = -2*tmp20*tmp398;
double tmp412 = -2*tmp0*tmp398;
double tmp413 = qOS1*qOS3*tmp400;
double tmp414 = qOS2*tmp25*tmp400;
double tmp415 = tmp396 + tmp397 + tmp407 + tmp410 + tmp411 + tmp412 + tmp413 + tmp414;
double tmp416 = tmp20*tmp402;
double tmp417 = tmp0*tmp402;
double tmp418 = tmp35 + tmp17;
double tmp419 = tmp16*tmp418;
double tmp420 = tmp30 + tmp31;
double tmp421 = tmp420*tmp13;
double tmp422 = tmp419 + tmp421;
double tmp423 = -4*qOS1*tmp422;
double tmp424 = -(tmp16*tmp10);
double tmp425 = tmp424 + tmp397;
double tmp426 = tmp25*tmp425;
double tmp427 = tmp10*tmp13;
double tmp428 = tmp295 + tmp427;
double tmp429 = qOS3*tmp428;
double tmp430 = tmp426 + tmp429;
double tmp431 = 4*qOS2*tmp430;
double tmp432 = 1 + tmp279 + tmp399 + tmp416 + tmp417 + tmp423 + tmp431;
double tmp433 = -4*tmp43*tmp7;
double tmp434 = 8*tmp10*tmp49;
double tmp435 = tmp306 + tmp434;
double tmp436 = tmp7*tmp47;
double tmp437 = tmp43*tmp13;
double tmp438 = tmp45*tmp10;
double tmp439 = tmp16*tmp49;
double tmp440 = tmp436 + tmp438 + tmp439 + tmp437;
double tmp441 = tmp43*tmp10;
double tmp442 = tmp7*tmp49;
double tmp443 = -(tmp45*tmp13);
double tmp444 = tmp16*tmp47;
double tmp445 = -(tmp43*tmp10);
double tmp446 = tmp45*tmp13;
double tmp447 = -4*tmp10*tmp49;
double tmp448 = -4*tmp47*tmp13;
double tmp449 = tmp447 + tmp448;
double tmp450 = tmp112*tmp33;
double tmp451 = tmp107*tmp41;
double tmp452 = 8*tmp43*tmp10;
double tmp453 = tmp452 + tmp347;
double tmp454 = -4*tmp7*tmp120;
double tmp455 = tmp16*tmp120;
double tmp456 = -(tmp47*tmp10);
double tmp457 = tmp120*tmp13;
double tmp458 = tmp118*tmp7;
double tmp459 = tmp47*tmp10;
double tmp460 = -4*tmp43*tmp10;
double tmp461 = -4*tmp118*tmp13;
double tmp462 = tmp460 + tmp461;
double tmp463 = tmp43*tmp7;
double tmp464 = tmp10*tmp120;
double tmp465 = tmp16*tmp118;
double tmp466 = tmp47*tmp13;
double tmp467 = tmp394 + tmp458 + tmp459 + tmp457;
double tmp468 = tmp191*tmp33;
double tmp469 = tmp188*tmp41;
double tmp470 = -4*tmp7*tmp219;
double tmp471 = 8*tmp45*tmp10;
double tmp472 = tmp391 + tmp471;
double tmp473 = tmp16*tmp219;
double tmp474 = tmp7*tmp120;
double tmp475 = -(tmp10*tmp120);
double tmp476 = tmp219*tmp13;
double tmp477 = -4*tmp45*tmp10;
double tmp478 = -4*tmp43*tmp13;
double tmp479 = tmp477 + tmp478;
double tmp480 = tmp16*tmp45;
double tmp481 = tmp480 + tmp463 + tmp464 + tmp476;
double tmp482 = -(tmp43*tmp16);
double tmp483 = tmp219*tmp10;
double tmp484 = tmp235*tmp33;
double tmp485 = tmp231*tmp41;
J(1+_OFF,1+_OFF) = -0.002*tmp83;
J(1+_OFF,2+_OFF) = -0.004*tmp63;
J(1+_OFF,3+_OFF) = -0.004*tmp57;
J(1+_OFF,4+_OFF) = 2*tmp249*tmp57 + 2*tmp63*tmp278 + tmp266*tmp83 + 2*(-((tmp123 + tmp222 - qOS3*tmp47 - qOS2*tmp49)*tmp33) + tmp112*tmp36 - tmp107*tmp54 + tmp102*tmp41)*tmp151 + (2*tmp4*tmp16*tmp45 + 2*tmp4*tmp43*tmp7 + 4*tmp16*(-(tmp25*tmp96) + qOS1*tmp97) + 4*tmp7*(qOS1*tmp96 + tmp25*tmp97) + tmp70*(2*tmp10*tmp49 + 2*tmp47*tmp13) + 4*tmp43*tmp77 + 4*tmp45*tmp81)*tmp182 + 2*(tmp304 + tmp305 - tmp112*tmp61 - tmp303*tmp41)*tmp217;
J(1+_OFF,5+_OFF) = 2*tmp319*tmp57 + 2*tmp63*tmp342 + tmp331*tmp83 + 2*(-((tmp223 - qOS3*tmp118 + tmp110 - qOS1*tmp120)*tmp33) + tmp191*tmp36 - tmp188*tmp54 + tmp184*tmp41)*tmp151 + (4*tmp16*(qOS1*tmp154 - tmp25*tmp156) + 4*(tmp25*tmp154 + qOS1*tmp156)*tmp7 + 2*tmp4*tmp16*tmp47 + 2*tmp4*tmp7*tmp120 + tmp70*(tmp220 + 2*tmp118*tmp13) + 4*tmp120*tmp77 + 4*tmp47*tmp81)*tmp182 + 2*(tmp345 + tmp346 - tmp191*tmp61 - tmp344*tmp41)*tmp217;
J(1+_OFF,6+_OFF) = 2*tmp361*tmp57 + 2*tmp63*tmp386 + tmp374*tmp83 + 2*(-((tmp103 - qOS2*tmp45 - qOS1*tmp219 + tmp183)*tmp33) + tmp235*tmp36 - tmp231*tmp54 + tmp229*tmp41)*tmp151 + (4*tmp16*(-(tmp25*tmp225) + qOS1*tmp226) + 4*(qOS1*tmp225 + tmp25*tmp226)*tmp7 + 2*tmp4*tmp7*tmp219 + 2*tmp4*tmp16*tmp120 + tmp70*(2*tmp45*tmp10 + tmp227) + 4*tmp219*tmp77 + 4*tmp120*tmp81)*tmp182 + 2*(tmp389 + tmp390 - tmp235*tmp61 - tmp388*tmp41)*tmp217;
J(2+_OFF,1+_OFF) = -0.004*tmp254;
J(2+_OFF,2+_OFF) = -0.002*tmp301;
J(2+_OFF,3+_OFF) = -0.004*tmp252;
J(2+_OFF,4+_OFF) = 2*tmp249*tmp252 + 2*tmp254*tmp266 + tmp278*tmp301 + 2*(tmp450 - tmp303*tmp36 - tmp102*tmp61 + tmp451)*tmp151 + 2*(tmp304 + tmp305 + tmp112*tmp61 + tmp303*tmp41)*tmp182 + (tmp433 + tmp448 + tmp20*tmp308 + tmp2*tmp308 + 4*qOS1*(tmp16*(-(tmp25*tmp43) + tmp186) + (tmp108 + tmp110)*tmp10 + tmp45*tmp285 + tmp49*tmp287) - 4*qOS3*(tmp25*(tmp444 + tmp441 + tmp442 + tmp446) + qOS2*(tmp394 + tmp395 + tmp456 - tmp49*tmp13)))*tmp217;
J(2+_OFF,5+_OFF) = 2*tmp319*tmp252 + 2*tmp254*tmp331 + tmp342*tmp301 + 2*(tmp468 - tmp344*tmp36 - tmp184*tmp61 + tmp469)*tmp151 + 2*(tmp345 + tmp346 + tmp191*tmp61 + tmp344*tmp41)*tmp182 + (tmp454 + tmp461 + tmp20*tmp349 + tmp2*tmp349 + 4*qOS1*(tmp10*(tmp189 + tmp190) + tmp16*(qOS2*tmp118 + tmp350) + tmp47*tmp285 + tmp43*tmp287) - 4*qOS3*(qOS2*(tmp436 - tmp118*tmp10 + tmp455 - tmp43*tmp13) + tmp25*(tmp465 + tmp463 + tmp464 + tmp466)))*tmp217;
J(2+_OFF,6+_OFF) = 2*tmp361*tmp252 + 2*tmp254*tmp374 + tmp386*tmp301 + 2*(tmp484 - tmp388*tmp36 - tmp229*tmp61 + tmp485)*tmp151 + 2*(tmp389 + tmp390 + tmp235*tmp61 + tmp388*tmp41)*tmp182 + (tmp470 + tmp478 + tmp20*tmp393 + tmp2*tmp393 + 4*qOS1*(tmp16*(tmp108 - tmp25*tmp219) + (tmp100 + tmp233)*tmp10 + tmp120*tmp285 + tmp45*tmp287) - 4*qOS3*(qOS2*(tmp473 + tmp445 + tmp474 + tmp443) + tmp25*(tmp394 + tmp395 + tmp483 + tmp457)))*tmp217;
J(3+_OFF,1+_OFF) = -0.004*tmp415;
J(3+_OFF,2+_OFF) = -0.004*tmp404;
J(3+_OFF,3+_OFF) = -0.002*tmp432;
J(3+_OFF,4+_OFF) = 2*tmp404*tmp278 + 2*tmp266*tmp415 + tmp249*tmp432 + (tmp433 + tmp20*tmp435 + tmp0*tmp435 + tmp447 - 4*qOS1*(tmp45*tmp418 + tmp47*tmp420 + tmp16*(tmp100 + tmp93) + (tmp103 + tmp106)*tmp13) + 4*qOS2*(tmp25*(tmp436 - tmp45*tmp10 - tmp16*tmp49 + tmp437) + qOS3*(tmp394 + tmp395 + tmp459 + tmp49*tmp13)))*tmp151 + 2*(tmp436 + tmp438 + tmp439 + tmp437 - 2*tmp20*tmp440 - 2*tmp0*tmp440 + 2*qOS2*qOS3*(-(tmp16*tmp47) + tmp441 + tmp442 + tmp443) + 2*qOS1*tmp25*(tmp444 + tmp445 - tmp7*tmp49 + tmp446) + qOS1*qOS3*tmp449 + qOS2*tmp25*tmp449)*tmp182 + 2*(tmp450 + tmp303*tmp36 + tmp102*tmp61 + tmp451)*tmp217;
J(3+_OFF,5+_OFF) = 2*tmp404*tmp342 + 2*tmp331*tmp415 + tmp319*tmp432 + (tmp460 + tmp20*tmp453 + tmp0*tmp453 + tmp454 - 4*qOS1*(tmp47*tmp418 + tmp118*tmp420 + tmp16*(tmp152 + tmp183) + (tmp100 + tmp187)*tmp13) + 4*qOS2*(qOS3*(tmp436 + tmp118*tmp10 + tmp455 + tmp437) + tmp25*(tmp482 + tmp458 + tmp456 + tmp457)))*tmp151 + 2*(tmp394 + tmp458 + tmp459 + tmp457 + qOS1*qOS3*tmp462 + qOS2*tmp25*tmp462 + 2*qOS2*qOS3*(-(tmp16*tmp118) + tmp463 + tmp464 - tmp47*tmp13) + 2*qOS1*tmp25*(tmp465 - tmp43*tmp7 + tmp475 + tmp466) - 2*tmp20*tmp467 - 2*tmp0*tmp467)*tmp182 + 2*(tmp468 + tmp344*tmp36 + tmp184*tmp61 + tmp469)*tmp217;
J(3+_OFF,6+_OFF) = 2*tmp404*tmp386 + 2*tmp374*tmp415 + tmp361*tmp432 + (tmp470 + tmp477 + tmp20*tmp472 + tmp0*tmp472 - 4*qOS1*(tmp16*(tmp109 + tmp228) + tmp43*tmp420 + tmp418*tmp120 + (tmp222 + tmp230)*tmp13) + 4*qOS2*(qOS3*(tmp473 + tmp441 + tmp474 + tmp446) + tmp25*(-(tmp16*tmp45) + tmp463 + tmp475 + tmp476)))*tmp151 + 2*(tmp480 + tmp463 + tmp464 + tmp476 + qOS1*qOS3*tmp479 + qOS2*tmp25*tmp479 - 2*tmp20*tmp481 - 2*tmp0*tmp481 + 2*qOS2*qOS3*(tmp482 + tmp395 + tmp483 - tmp120*tmp13) + 2*qOS1*tmp25*(tmp394 - tmp45*tmp7 - tmp219*tmp10 + tmp457))*tmp182 + 2*(tmp484 + tmp388*tmp36 + tmp229*tmp61 + tmp485)*tmp217;
