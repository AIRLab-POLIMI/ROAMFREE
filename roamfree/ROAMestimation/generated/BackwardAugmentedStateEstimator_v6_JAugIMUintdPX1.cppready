double tmp0 = std::pow(qOS2,2);
double tmp1 = -2*tmp0;
double tmp2 = std::pow(qOS3,2);
double tmp3 = -2*tmp2;
double tmp4 = 1 + tmp1 + tmp3;
double tmp5 = x1(5+_OFF);
double tmp6 = x1(6+_OFF);
double tmp7 = x1(7+_OFF);
double tmp8 = x1(4+_OFF);
double tmp9 = qOS3*tmp6;
double tmp10 = -(qOS2*tmp7);
double tmp11 = tmp9 + tmp10;
double tmp12 = std::pow(qOS1,2);
double tmp13 = -tmp12;
double tmp14 = -tmp0;
double tmp15 = -tmp2;
double tmp16 = 1 + tmp13 + tmp14 + tmp15;
double tmp17 = std::sqrt(tmp16);
double tmp18 = qOS2*tmp6;
double tmp19 = qOS3*tmp7;
double tmp20 = tmp18 + tmp19;
double tmp21 = qOS2*tmp8;
double tmp22 = -(qOS3*tmp5);
double tmp23 = tmp17*tmp6;
double tmp24 = qOS1*tmp7;
double tmp25 = tmp21 + tmp22 + tmp23 + tmp24;
double tmp26 = qOS1*tmp8;
double tmp27 = tmp17*tmp5;
double tmp28 = tmp26 + tmp27 + tmp9 + tmp10;
double tmp29 = qOS3*tmp8;
double tmp30 = qOS2*tmp5;
double tmp31 = -(qOS1*tmp6);
double tmp32 = tmp17*tmp7;
double tmp33 = tmp29 + tmp30 + tmp31 + tmp32;
double tmp34 = std::pow(tmp8,2);
double tmp35 = std::pow(tmp5,2);
double tmp36 = std::pow(tmp6,2);
double tmp37 = std::pow(tmp7,2);
double tmp38 = tmp17*tmp8;
double tmp39 = -(qOS1*tmp5);
double tmp40 = -(qOS2*tmp6);
double tmp41 = -(qOS3*tmp7);
double tmp42 = tmp38 + tmp39 + tmp40 + tmp41;
double tmp43 = -(tmp25*tmp42);
double tmp44 = tmp28*tmp33;
double tmp45 = tmp43 + tmp44;
double tmp46 = tmp25*tmp28;
double tmp47 = -(tmp17*tmp8);
double tmp48 = qOS1*tmp5;
double tmp49 = tmp47 + tmp48 + tmp18 + tmp19;
double tmp50 = -(tmp49*tmp33);
double tmp51 = tmp46 + tmp50;
double tmp52 = tmp4*tmp34;
double tmp53 = tmp4*tmp35;
double tmp54 = 2*tmp0;
double tmp55 = 2*tmp2;
double tmp56 = -1 + tmp54 + tmp55;
double tmp57 = tmp36 + tmp37;
double tmp58 = tmp56*tmp57;
double tmp59 = tmp17*tmp11;
double tmp60 = qOS1*tmp20;
double tmp61 = tmp59 + tmp60;
double tmp62 = 4*tmp5*tmp61;
double tmp63 = qOS1*tmp11;
double tmp64 = -(tmp17*tmp20);
double tmp65 = tmp63 + tmp64;
double tmp66 = 4*tmp8*tmp65;
double tmp67 = tmp52 + tmp53 + tmp58 + tmp62 + tmp66;
double tmp68 = x0(5+_OFF);
double tmp69 = x0(4+_OFF);
double tmp70 = x0(6+_OFF);
double tmp71 = x0(7+_OFF);
double tmp72 = x2(5+_OFF);
double tmp73 = x2(4+_OFF);
double tmp74 = x2(6+_OFF);
double tmp75 = x2(7+_OFF);
double tmp76 = -(qOS3*tmp6);
double tmp77 = qOS2*tmp7;
double tmp78 = tmp76 + tmp77;
double tmp79 = std::pow(tmp70,2);
double tmp80 = std::pow(tmp74,2);
double tmp81 = tmp38 + tmp39 + tmp18 + tmp19;
double tmp82 = -(tmp17*tmp6);
double tmp83 = -(qOS1*tmp7);
double tmp84 = tmp21 + tmp22 + tmp82 + tmp83;
double tmp85 = -(qOS3*tmp8);
double tmp86 = -(qOS2*tmp5);
double tmp87 = tmp85 + tmp86 + tmp31 + tmp32;
double tmp88 = std::pow(tmp68,2);
double tmp89 = std::pow(tmp71,2);
double tmp90 = std::pow(tmp72,2);
double tmp91 = std::pow(tmp75,2);
double tmp92 = 4*tmp5*tmp6;
double tmp93 = -2*tmp34;
double tmp94 = 2*tmp37;
double tmp95 = -(qOS1*tmp8);
double tmp96 = std::pow(Dt01,2);
double tmp97 = 4.9*tmp96;
double tmp98 = std::pow(Dt12,2);
double tmp99 = 4.9*tmp98;
double tmp100 = x0(3+_OFF);
double tmp101 = 2.*sO2*tmp69*tmp68;
double tmp102 = -2.*sO3*tmp88;
double tmp103 = -2.*sO1*tmp69*tmp70;
double tmp104 = -2.*sO3*tmp79;
double tmp105 = 2.*sO1*tmp68*tmp71;
double tmp106 = 2.*sO2*tmp70*tmp71;
double tmp107 = x1(3+_OFF);
double tmp108 = -2.*tmp107;
double tmp109 = -4.*sO2*tmp8*tmp5;
double tmp110 = 4.*sO3*tmp35;
double tmp111 = 4.*sO1*tmp8*tmp6;
double tmp112 = 4.*sO3*tmp36;
double tmp113 = -4.*sO1*tmp5*tmp7;
double tmp114 = -4.*sO2*tmp6*tmp7;
double tmp115 = x2(3+_OFF);
double tmp116 = 2.*sO2*tmp73*tmp72;
double tmp117 = -2.*sO3*tmp90;
double tmp118 = -2.*sO1*tmp73*tmp74;
double tmp119 = -2.*sO3*tmp80;
double tmp120 = 2.*sO1*tmp72*tmp75;
double tmp121 = 2.*sO2*tmp74*tmp75;
double tmp122 = tmp97 + tmp99 + tmp100 + tmp101 + tmp102 + tmp103 + tmp104 + tmp105 + tmp106 + tmp108 + tmp109 + tmp110 + tmp111 + tmp112 + tmp113 + tmp114 + tmp115 + tmp116 + tmp117 + tmp118 + tmp119 + tmp120 + tmp121;
double tmp123 = tmp29 + tmp86;
double tmp124 = qOS3*tmp5;
double tmp125 = tmp21 + tmp124;
double tmp126 = x0(1+_OFF);
double tmp127 = 2*sO2*tmp68*tmp70;
double tmp128 = -2*sO1*tmp79;
double tmp129 = -2*sO2*tmp69*tmp71;
double tmp130 = -2*sO1*tmp89;
double tmp131 = x1(1+_OFF);
double tmp132 = -2*tmp131;
double tmp133 = -4*sO2*tmp5*tmp6;
double tmp134 = 4*sO1*tmp36;
double tmp135 = 4*sO2*tmp8*tmp7;
double tmp136 = 4*sO1*tmp37;
double tmp137 = x2(1+_OFF);
double tmp138 = 2*sO2*tmp72*tmp74;
double tmp139 = -2*sO1*tmp80;
double tmp140 = -2*sO2*tmp73*tmp75;
double tmp141 = -2*sO1*tmp91;
double tmp142 = tmp69*tmp70;
double tmp143 = tmp68*tmp71;
double tmp144 = -2*tmp8*tmp6;
double tmp145 = -2*tmp5*tmp7;
double tmp146 = tmp73*tmp74;
double tmp147 = tmp72*tmp75;
double tmp148 = tmp142 + tmp143 + tmp144 + tmp145 + tmp146 + tmp147;
double tmp149 = 2*sO3*tmp148;
double tmp150 = tmp126 + tmp127 + tmp128 + tmp129 + tmp130 + tmp132 + tmp133 + tmp134 + tmp135 + tmp136 + tmp137 + tmp138 + tmp139 + tmp140 + tmp141 + tmp149;
double tmp151 = tmp38 + tmp48 + tmp40 + tmp19;
double tmp152 = tmp95 + tmp27 + tmp76 + tmp10;
double tmp153 = -(tmp17*tmp7);
double tmp154 = tmp29 + tmp86 + tmp31 + tmp153;
double tmp155 = x0(2+_OFF);
double tmp156 = -2*sO2*tmp88;
double tmp157 = 2*sO1*tmp68*tmp70;
double tmp158 = 2*sO1*tmp69*tmp71;
double tmp159 = -2*sO2*tmp89;
double tmp160 = x1(2+_OFF);
double tmp161 = -2*tmp160;
double tmp162 = 4*sO2*tmp35;
double tmp163 = -4*sO1*tmp5*tmp6;
double tmp164 = -4*sO1*tmp8*tmp7;
double tmp165 = 4*sO2*tmp37;
double tmp166 = x2(2+_OFF);
double tmp167 = -2*sO2*tmp90;
double tmp168 = 2*sO1*tmp72*tmp74;
double tmp169 = 2*sO1*tmp73*tmp75;
double tmp170 = -2*sO2*tmp91;
double tmp171 = tmp69*tmp68;
double tmp172 = -(tmp70*tmp71);
double tmp173 = -2*tmp8*tmp5;
double tmp174 = 2*tmp6*tmp7;
double tmp175 = tmp73*tmp72;
double tmp176 = -(tmp74*tmp75);
double tmp177 = tmp171 + tmp172 + tmp173 + tmp174 + tmp175 + tmp176;
double tmp178 = -2*sO3*tmp177;
double tmp179 = tmp155 + tmp156 + tmp157 + tmp158 + tmp159 + tmp161 + tmp162 + tmp163 + tmp164 + tmp165 + tmp166 + tmp167 + tmp168 + tmp169 + tmp170 + tmp178;
double tmp180 = -(tmp17*tmp5);
double tmp181 = -(qOS2*tmp8);
double tmp182 = qOS1*tmp123;
double tmp183 = tmp181 + tmp22;
double tmp184 = tmp181 + tmp22 + tmp23 + tmp83;
double tmp185 = tmp26 + tmp180 + tmp76 + tmp10;
double tmp186 = tmp38 + tmp48 + tmp18 + tmp41;
double tmp187 = -2*tmp35;
double tmp188 = 4*tmp35;
double tmp189 = 4*tmp37;
double tmp190 = -2 + tmp188 + tmp189;
double tmp191 = -4.*sO2*tmp34;
double tmp192 = 8.*sO3*tmp8*tmp5;
double tmp193 = 4.*sO2*tmp35;
double tmp194 = 4.*sO2*tmp36;
double tmp195 = 8.*sO3*tmp6*tmp7;
double tmp196 = -4.*sO2*tmp37;
double tmp197 = 0. + tmp191 + tmp192 + tmp193 + tmp194 + tmp195 + tmp196;
double tmp198 = -(tmp28*tmp49);
double tmp199 = tmp25*tmp33;
double tmp200 = tmp198 + tmp199;
double tmp201 = tmp49*tmp33;
double tmp202 = tmp46 + tmp201;
double tmp203 = -8*sO2*tmp8*tmp6;
double tmp204 = -8*sO2*tmp5*tmp7;
double tmp205 = -4*tmp8*tmp7;
double tmp206 = tmp92 + tmp205;
double tmp207 = 2*sO3*tmp206;
double tmp208 = tmp203 + tmp204 + tmp207;
double tmp209 = 8*sO2*tmp8*tmp5;
double tmp210 = -8*sO2*tmp6*tmp7;
double tmp211 = 2*tmp35;
double tmp212 = -2*tmp36;
double tmp213 = tmp93 + tmp211 + tmp212 + tmp94;
double tmp214 = -2*sO3*tmp213;
double tmp215 = tmp209 + tmp210 + tmp214;
double tmp216 = -2*tmp37;
double tmp217 = tmp12*tmp190;
double tmp218 = tmp2*tmp190;
double tmp219 = tmp180 + tmp77;
double tmp220 = tmp8*tmp219;
double tmp221 = tmp30 + tmp32;
double tmp222 = tmp6*tmp221;
double tmp223 = tmp220 + tmp222;
double tmp224 = 4*qOS1*tmp223;
double tmp225 = tmp5*tmp6;
double tmp226 = tmp8*tmp7;
double tmp227 = tmp225 + tmp226;
double tmp228 = tmp17*tmp227;
double tmp229 = tmp8*tmp5;
double tmp230 = -(tmp6*tmp7);
double tmp231 = tmp229 + tmp230;
double tmp232 = qOS2*tmp231;
double tmp233 = tmp228 + tmp232;
double tmp234 = -4*qOS3*tmp233;
double tmp235 = 1 + tmp187 + tmp216 + tmp217 + tmp218 + tmp224 + tmp234;
double tmp236 = tmp26 + tmp27 + tmp76 + tmp77;
double tmp237 = tmp25*tmp81;
double tmp238 = tmp28*tmp87;
double tmp239 = 8*tmp8*tmp5;
double tmp240 = -8*tmp6*tmp7;
double tmp241 = tmp239 + tmp240;
double tmp242 = 4.*sO1*tmp34;
double tmp243 = -4.*sO1*tmp35;
double tmp244 = 8.*sO3*tmp8*tmp6;
double tmp245 = -4.*sO1*tmp36;
double tmp246 = -8.*sO3*tmp5*tmp7;
double tmp247 = 4.*sO1*tmp37;
double tmp248 = 0. + tmp242 + tmp243 + tmp244 + tmp245 + tmp246 + tmp247;
double tmp249 = 8*sO1*tmp8*tmp6;
double tmp250 = 8*sO1*tmp5*tmp7;
double tmp251 = 2*tmp36;
double tmp252 = tmp93 + tmp187 + tmp251 + tmp94;
double tmp253 = 2*sO3*tmp252;
double tmp254 = tmp249 + tmp250 + tmp253;
double tmp255 = -8*sO1*tmp8*tmp5;
double tmp256 = 8*sO1*tmp6*tmp7;
double tmp257 = 4*tmp8*tmp7;
double tmp258 = tmp92 + tmp257;
double tmp259 = -2*sO3*tmp258;
double tmp260 = tmp255 + tmp256 + tmp259;
double tmp261 = tmp21 + tmp124 + tmp23 + tmp83;
double tmp262 = tmp28*tmp151;
double tmp263 = tmp25*tmp154;
double tmp264 = -2*tmp5*tmp6;
double tmp265 = -8.*sO1*tmp8*tmp5;
double tmp266 = -8.*sO2*tmp8*tmp6;
double tmp267 = 8.*sO2*tmp5*tmp7;
double tmp268 = -8.*sO1*tmp6*tmp7;
double tmp269 = 0. + tmp265 + tmp266 + tmp267 + tmp268;
double tmp270 = 4*sO2*tmp34;
double tmp271 = -8*sO1*tmp5*tmp6;
double tmp272 = -4*sO2*tmp36;
double tmp273 = 8*sO1*tmp8*tmp7;
double tmp274 = -4*sO2*tmp37;
double tmp275 = tmp270 + tmp162 + tmp271 + tmp272 + tmp273 + tmp274;
double tmp276 = -4*sO1*tmp34;
double tmp277 = 4*sO1*tmp35;
double tmp278 = 8*sO2*tmp5*tmp6;
double tmp279 = -4*sO1*tmp36;
double tmp280 = 8*sO2*tmp8*tmp7;
double tmp281 = tmp276 + tmp277 + tmp278 + tmp279 + tmp280 + tmp136;
double tmp282 = qOS1*tmp6;
double tmp283 = tmp29 + tmp86 + tmp282 + tmp32;
double tmp284 = tmp184*tmp25;
double tmp285 = tmp185*tmp28;
double tmp286 = 8*tmp5*tmp6;
double tmp287 = 8*tmp8*tmp7;
double tmp288 = tmp286 + tmp287;
double tmp289 = -tmp35;
double tmp290 = -tmp37;
double tmp291 = tmp34 + tmp289 + tmp36 + tmp290;
double tmp292 = tmp21 + tmp82;
double tmp293 = tmp8*tmp6;
double tmp294 = tmp5*tmp7;
double tmp295 = tmp293 + tmp294;
double tmp296 = 1 + tmp212 + tmp216;
double tmp297 = 4*tmp36;
double tmp298 = -2 + tmp188 + tmp297;
double tmp299 = tmp28*tmp49;
double tmp300 = tmp299 + tmp199;
double tmp301 = tmp12*tmp298;
double tmp302 = tmp0*tmp298;
double tmp303 = tmp27 + tmp9;
double tmp304 = tmp8*tmp303;
double tmp305 = tmp22 + tmp23;
double tmp306 = tmp305*tmp7;
double tmp307 = tmp304 + tmp306;
double tmp308 = -4*qOS1*tmp307;
double tmp309 = -(tmp8*tmp6);
double tmp310 = tmp309 + tmp294;
double tmp311 = tmp17*tmp310;
double tmp312 = tmp6*tmp7;
double tmp313 = tmp229 + tmp312;
double tmp314 = qOS3*tmp313;
double tmp315 = tmp311 + tmp314;
double tmp316 = 4*qOS2*tmp315;
double tmp317 = 1 + tmp187 + tmp212 + tmp301 + tmp302 + tmp308 + tmp316;
double tmp318 = -2*tmp12*tmp295;
double tmp319 = -2*tmp0*tmp295;
double tmp320 = -(tmp5*tmp6);
double tmp321 = tmp320 + tmp226;
double tmp322 = 2*tmp17*tmp321;
double tmp323 = qOS3*tmp296;
double tmp324 = tmp322 + tmp323;
double tmp325 = qOS1*tmp324;
double tmp326 = -(tmp8*tmp7);
double tmp327 = tmp225 + tmp326;
double tmp328 = 2*qOS3*tmp327;
double tmp329 = tmp17*tmp296;
double tmp330 = tmp328 + tmp329;
double tmp331 = qOS2*tmp330;
double tmp332 = tmp293 + tmp294 + tmp318 + tmp319 + tmp325 + tmp331;
double tmp333 = -4*tmp8*tmp5;
double tmp334 = 8*tmp6*tmp7;
double tmp335 = tmp239 + tmp334;
double tmp336 = 2*tmp8*tmp7;
double tmp337 = tmp264 + tmp336;
double tmp338 = 2*tmp8*tmp6;
double tmp339 = 2*tmp5*tmp7;
double tmp340 = tmp338 + tmp339;
double tmp341 = tmp84*tmp25;
double tmp342 = tmp87*tmp33;
double tmp343 = 8*tmp8*tmp6;
double tmp344 = -8*tmp5*tmp7;
double tmp345 = tmp343 + tmp344;
double tmp346 = tmp38 + tmp19;
double tmp347 = -tmp36;
double tmp348 = -4*tmp8*tmp6;
double tmp349 = -4*tmp5*tmp7;
double tmp350 = tmp348 + tmp349;
double tmp351 = tmp34 + tmp35 + tmp347 + tmp290;
double tmp352 = tmp25*tmp152;
double tmp353 = tmp151*tmp33;
double tmp354 = 2*tmp8*tmp5;
double tmp355 = -tmp34;
double tmp356 = tmp25*tmp186;
double tmp357 = tmp185*tmp33;
J(1+_OFF,1+_OFF) = -2*tmp67;
J(1+_OFF,2+_OFF) = -4*tmp51;
J(1+_OFF,3+_OFF) = -4.*tmp45;
J(1+_OFF,4+_OFF) = 2*tmp197*tmp45 + 2*tmp51*tmp215 + tmp208*tmp67 + 2*(-(tmp25*(tmp95 + tmp180 + tmp9 + tmp10)) + tmp84*tmp28 - tmp42*tmp87 + tmp81*tmp33)*tmp122 + (4*tmp8*tmp61 + 4*tmp8*(-(tmp17*tmp78) + tmp60) - 4*tmp5*tmp65 + 4*tmp5*(qOS1*tmp78 + tmp17*tmp20))*tmp150 + 2*(tmp237 - tmp84*tmp49 + tmp238 - tmp236*tmp33)*tmp179;
J(1+_OFF,5+_OFF) = 2*tmp248*tmp45 + 2*tmp51*tmp260 + tmp254*tmp67 + 2*(-((tmp181 + tmp22 + tmp82 + tmp24)*tmp25) + tmp152*tmp28 - tmp42*tmp151 + tmp154*tmp33)*tmp122 + (4*tmp5*(tmp17*tmp123 + qOS1*tmp125) + 4*tmp8*(tmp182 - tmp17*tmp125) - 2*tmp4*tmp8*tmp6 - 2*tmp4*tmp5*tmp7 + tmp56*tmp340 - 4*tmp7*tmp61 - 4*tmp6*tmp65)*tmp150 + 2*(tmp262 - tmp152*tmp49 + tmp263 - tmp261*tmp33)*tmp179;
J(1+_OFF,6+_OFF) = 2*tmp269*tmp45 + 2*tmp281*tmp51 + tmp275*tmp67 + 2*(-(tmp185*tmp42) + tmp28*tmp186 - tmp25*(tmp85 + tmp30 + tmp31 + tmp153) + tmp184*tmp33)*tmp122 + (4*tmp8*(-(tmp17*tmp123) + qOS1*tmp183) + 4*tmp5*(tmp182 + tmp17*tmp183) + 2*tmp4*tmp5*tmp6 - 2*tmp4*tmp8*tmp7 + tmp56*tmp337 + 4*tmp6*tmp61 - 4*tmp7*tmp65)*tmp150 + 2*(tmp284 + tmp285 - tmp186*tmp49 - tmp33*tmp283)*tmp179;
J(2+_OFF,1+_OFF) = -4*tmp202;
J(2+_OFF,2+_OFF) = -2*tmp235;
J(2+_OFF,3+_OFF) = -4.*tmp200;
J(2+_OFF,4+_OFF) = 2*tmp197*tmp200 + 2*tmp202*tmp208 + tmp215*tmp235 + 2*(tmp341 - tmp28*tmp236 - tmp81*tmp49 + tmp342)*tmp122 + 2*(tmp237 + tmp84*tmp49 + tmp238 + tmp236*tmp33)*tmp150 + (tmp333 + 4*tmp6*tmp7 + tmp12*tmp241 + tmp2*tmp241 - 4*qOS2*qOS3*tmp291 + 4*qOS1*(tmp8*(tmp47 + tmp40) + tmp6*tmp292 - tmp5*tmp219 + tmp7*tmp221))*tmp179;
J(2+_OFF,5+_OFF) = 2*tmp248*tmp200 + 2*tmp202*tmp254 + tmp260*tmp235 + 2*(tmp352 - tmp261*tmp28 - tmp49*tmp154 + tmp353)*tmp122 + 2*(tmp262 + tmp152*tmp49 + tmp263 + tmp261*tmp33)*tmp150 + (4*qOS1*(tmp6*(tmp27 + tmp10) - tmp6*tmp219 + 2*tmp8*tmp221) - 4*qOS3*(qOS2*(tmp264 - 2*tmp8*tmp7) + tmp17*(tmp354 - 2*tmp6*tmp7)))*tmp179;
J(2+_OFF,6+_OFF) = 2*tmp269*tmp200 + 2*tmp275*tmp202 + tmp281*tmp235 + 2*(tmp356 - tmp184*tmp49 + tmp357 - tmp28*tmp283)*tmp122 + 2*(tmp284 + tmp285 + tmp186*tmp49 + tmp33*tmp283)*tmp150 + (-4*tmp5*tmp6 + tmp205 + tmp12*tmp288 + tmp2*tmp288 - 4*qOS3*tmp17*tmp291 + 4*qOS1*(tmp6*(tmp38 + tmp18) + tmp8*tmp292 - tmp7*tmp219 - tmp5*tmp221))*tmp179;
J(3+_OFF,1+_OFF) = -4*tmp332;
J(3+_OFF,2+_OFF) = -4*tmp300;
J(3+_OFF,3+_OFF) = -2.*tmp317;
J(3+_OFF,4+_OFF) = 2*tmp300*tmp215 + tmp197*tmp317 + 2*tmp208*tmp332 + (tmp333 - 4*tmp6*tmp7 + tmp12*tmp335 + tmp0*tmp335 + 4*qOS2*qOS3*(tmp34 + tmp289 + tmp347 + tmp37) - 4*qOS1*(-(tmp5*tmp303) - tmp6*tmp305 + tmp8*tmp346 + tmp7*(tmp85 + tmp32)))*tmp122 + 2*(tmp264 + tmp336 - 2*tmp12*tmp337 - 2*tmp0*tmp337 + 2*qOS1*tmp17*(tmp144 + tmp145) + 2*qOS2*qOS3*tmp340)*tmp150 + 2*(tmp341 + tmp28*tmp236 + tmp81*tmp49 + tmp342)*tmp179;
J(3+_OFF,5+_OFF) = 2*tmp300*tmp260 + tmp248*tmp317 + 2*tmp254*tmp332 + (tmp348 + 4*tmp5*tmp7 + tmp12*tmp345 + tmp0*tmp345 + 4*qOS2*tmp17*(tmp355 + tmp35 + tmp36 + tmp290) - 4*qOS1*(-(tmp6*tmp303) + tmp5*tmp305 + tmp7*tmp346 + tmp8*(tmp29 + tmp153)))*tmp122 + 2*(tmp34 + tmp35 + tmp347 + tmp290 + qOS1*qOS3*tmp350 + qOS2*tmp17*tmp350 - 2*tmp12*tmp351 - 2*tmp0*tmp351)*tmp150 + 2*(tmp352 + tmp261*tmp28 + tmp49*tmp154 + tmp353)*tmp179;
J(3+_OFF,6+_OFF) = 2*tmp281*tmp300 + tmp269*tmp317 + 2*tmp275*tmp332 + (-4*qOS1*(2*tmp8*tmp305 + (tmp180 + tmp76)*tmp7 - tmp303*tmp7) + 4*qOS2*(qOS3*(tmp338 + tmp145) + tmp17*(tmp354 + tmp174)))*tmp122 + 2*(qOS1*(qOS3*tmp206 + 2*tmp17*tmp351) + qOS2*(tmp17*tmp206 + 2*qOS3*(tmp355 + tmp289 + tmp36 + tmp37)))*tmp150 + 2*(tmp356 + tmp184*tmp49 + tmp357 + tmp28*tmp283)*tmp179;
