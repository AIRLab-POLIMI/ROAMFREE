double tmp0 = std::pow(qOS2,2);
double tmp1 = -2*tmp0;
double tmp2 = std::pow(qOS3,2);
double tmp3 = -2*tmp2;
double tmp4 = 1 + tmp1 + tmp3;
double tmp5 = x1(5+_OFF);
double tmp6 = x1(6+_OFF);
double tmp7 = x1(7+_OFF);
double tmp8 = x1(4+_OFF);
double tmp9 = qOS3*tmp6;
double tmp10 = -(qOS2*tmp7);
double tmp11 = tmp9 + tmp10;
double tmp12 = std::pow(qOS1,2);
double tmp13 = -tmp12;
double tmp14 = -tmp0;
double tmp15 = -tmp2;
double tmp16 = 1 + tmp13 + tmp14 + tmp15;
double tmp17 = std::sqrt(tmp16);
double tmp18 = qOS2*tmp6;
double tmp19 = qOS3*tmp7;
double tmp20 = tmp18 + tmp19;
double tmp21 = qOS2*tmp8;
double tmp22 = -(qOS3*tmp5);
double tmp23 = tmp17*tmp6;
double tmp24 = qOS1*tmp7;
double tmp25 = tmp21 + tmp22 + tmp23 + tmp24;
double tmp26 = qOS1*tmp8;
double tmp27 = tmp17*tmp5;
double tmp28 = tmp26 + tmp27 + tmp9 + tmp10;
double tmp29 = qOS3*tmp8;
double tmp30 = qOS2*tmp5;
double tmp31 = -(qOS1*tmp6);
double tmp32 = tmp17*tmp7;
double tmp33 = tmp29 + tmp30 + tmp31 + tmp32;
double tmp34 = std::pow(tmp8,2);
double tmp35 = tmp4*tmp34;
double tmp36 = std::pow(tmp5,2);
double tmp37 = tmp4*tmp36;
double tmp38 = 2*tmp0;
double tmp39 = 2*tmp2;
double tmp40 = -1 + tmp38 + tmp39;
double tmp41 = std::pow(tmp6,2);
double tmp42 = std::pow(tmp7,2);
double tmp43 = tmp41 + tmp42;
double tmp44 = tmp40*tmp43;
double tmp45 = tmp17*tmp11;
double tmp46 = qOS1*tmp20;
double tmp47 = tmp45 + tmp46;
double tmp48 = 4*tmp5*tmp47;
double tmp49 = qOS1*tmp11;
double tmp50 = -(tmp17*tmp20);
double tmp51 = tmp49 + tmp50;
double tmp52 = 4*tmp8*tmp51;
double tmp53 = tmp35 + tmp37 + tmp44 + tmp48 + tmp52;
double tmp54 = x2(4+_OFF);
double tmp55 = x2(6+_OFF);
double tmp56 = 1.*tmp55;
double tmp57 = 0. + tmp56;
double tmp58 = x2(7+_OFF);
double tmp59 = 0.01*tmp58;
double tmp60 = 0. + tmp59;
double tmp61 = x2(5+_OFF);
double tmp62 = -0.01*tmp55;
double tmp63 = 0. + tmp62;
double tmp64 = 1.*tmp58;
double tmp65 = 0. + tmp64;
double tmp66 = 1.*tmp61;
double tmp67 = 0. + tmp66;
double tmp68 = -0.01*tmp61;
double tmp69 = 0. + tmp68;
double tmp70 = 1.*tmp54;
double tmp71 = 0. + tmp70;
double tmp72 = 0.01*tmp54;
double tmp73 = 0. + tmp72;
double tmp74 = tmp17*tmp8;
double tmp75 = -(qOS1*tmp5);
double tmp76 = -(qOS2*tmp6);
double tmp77 = -(qOS3*tmp7);
double tmp78 = tmp74 + tmp75 + tmp76 + tmp77;
double tmp79 = -(tmp25*tmp78);
double tmp80 = tmp28*tmp33;
double tmp81 = tmp79 + tmp80;
double tmp82 = tmp25*tmp28;
double tmp83 = -(tmp17*tmp8);
double tmp84 = qOS1*tmp5;
double tmp85 = tmp83 + tmp84 + tmp18 + tmp19;
double tmp86 = -(tmp85*tmp33);
double tmp87 = tmp82 + tmp86;
double tmp88 = -(tmp73*tmp71);
double tmp89 = -(tmp69*tmp67);
double tmp90 = -0.01*tmp58;
double tmp91 = 0. + tmp90;
double tmp92 = -(tmp67*tmp63);
double tmp93 = 0.01*tmp61;
double tmp94 = 0. + tmp93;
double tmp95 = -(tmp73*tmp65);
double tmp96 = -(tmp71*tmp91);
double tmp97 = -(tmp63*tmp57);
double tmp98 = 2*sO1*tmp73*tmp67;
double tmp99 = 0.01*tmp55;
double tmp100 = 0. + tmp99;
double tmp101 = 2*sO1*tmp91*tmp65;
double tmp102 = -(tmp71*tmp100);
double tmp103 = -(tmp67*tmp91);
double tmp104 = 4*tmp36;
double tmp105 = 4*tmp42;
double tmp106 = -2 + tmp104 + tmp105;
double tmp107 = tmp85*tmp33;
double tmp108 = tmp82 + tmp107;
double tmp109 = -2*sO2*tmp71*tmp63;
double tmp110 = 2*sO2*tmp73*tmp57;
double tmp111 = 2*sO2*tmp67*tmp60;
double tmp112 = -4*sO1*tmp57*tmp60;
double tmp113 = -2*sO2*tmp69*tmp65;
double tmp114 = -4*sO1*tmp63*tmp65;
double tmp115 = -(tmp69*tmp57);
double tmp116 = -(tmp71*tmp60);
double tmp117 = tmp92 + tmp115 + tmp116 + tmp95;
double tmp118 = -2*sO3*tmp117;
double tmp119 = tmp109 + tmp110 + tmp111 + tmp112 + tmp113 + tmp114 + tmp118;
double tmp120 = -(tmp28*tmp85);
double tmp121 = tmp25*tmp33;
double tmp122 = tmp120 + tmp121;
double tmp123 = -4*sO3*tmp73*tmp67;
double tmp124 = 2*sO1*tmp67*tmp63;
double tmp125 = -2*sO1*tmp69*tmp57;
double tmp126 = -2*sO1*tmp71*tmp60;
double tmp127 = -4*sO3*tmp57*tmp60;
double tmp128 = 2*sO1*tmp73*tmp65;
double tmp129 = -(tmp60*tmp65);
double tmp130 = tmp88 + tmp89 + tmp97 + tmp129;
double tmp131 = -2*sO2*tmp130;
double tmp132 = tmp123 + tmp124 + tmp125 + tmp126 + tmp127 + tmp128 + tmp131;
double tmp133 = -2*tmp36;
double tmp134 = -2*tmp42;
double tmp135 = tmp12*tmp106;
double tmp136 = tmp2*tmp106;
double tmp137 = -(tmp17*tmp5);
double tmp138 = qOS2*tmp7;
double tmp139 = tmp137 + tmp138;
double tmp140 = tmp8*tmp139;
double tmp141 = tmp30 + tmp32;
double tmp142 = tmp6*tmp141;
double tmp143 = tmp140 + tmp142;
double tmp144 = 4*qOS1*tmp143;
double tmp145 = tmp5*tmp6;
double tmp146 = tmp8*tmp7;
double tmp147 = tmp145 + tmp146;
double tmp148 = tmp17*tmp147;
double tmp149 = tmp8*tmp5;
double tmp150 = -(tmp6*tmp7);
double tmp151 = tmp149 + tmp150;
double tmp152 = qOS2*tmp151;
double tmp153 = tmp148 + tmp152;
double tmp154 = -4*qOS3*tmp153;
double tmp155 = 1 + tmp133 + tmp134 + tmp135 + tmp136 + tmp144 + tmp154;
double tmp156 = -4*sO2*tmp73*tmp67;
double tmp157 = 2*sO1*tmp71*tmp63;
double tmp158 = 2*sO1*tmp73*tmp57;
double tmp159 = 2*sO1*tmp67*tmp60;
double tmp160 = 2*sO1*tmp69*tmp65;
double tmp161 = -4*sO2*tmp63*tmp65;
double tmp162 = tmp63*tmp57;
double tmp163 = tmp60*tmp65;
double tmp164 = tmp88 + tmp89 + tmp162 + tmp163;
double tmp165 = 2*sO3*tmp164;
double tmp166 = tmp156 + tmp157 + tmp158 + tmp159 + tmp160 + tmp161 + tmp165;
double tmp167 = -2*sO1*tmp73*tmp71;
double tmp168 = 2*sO1*tmp94*tmp67;
double tmp169 = -4*sO3*tmp73*tmp57;
double tmp170 = -2*sO1*tmp63*tmp57;
double tmp171 = -4*sO3*tmp67*tmp91;
double tmp172 = -(tmp94*tmp57);
double tmp173 = tmp92 + tmp172 + tmp96 + tmp95;
double tmp174 = -2*sO2*tmp173;
double tmp175 = tmp167 + tmp168 + tmp169 + tmp170 + tmp171 + tmp101 + tmp174;
double tmp176 = 2*sO1*tmp71*tmp94;
double tmp177 = -4*sO2*tmp67*tmp91;
double tmp178 = 2*sO1*tmp57*tmp91;
double tmp179 = -4*sO2*tmp94*tmp65;
double tmp180 = 2*sO1*tmp63*tmp65;
double tmp181 = tmp94*tmp57;
double tmp182 = tmp73*tmp65;
double tmp183 = tmp92 + tmp181 + tmp96 + tmp182;
double tmp184 = 2*sO3*tmp183;
double tmp185 = tmp176 + tmp98 + tmp177 + tmp178 + tmp179 + tmp180 + tmp184;
double tmp186 = -2*sO2*tmp71*tmp94;
double tmp187 = 2*sO2*tmp73*tmp67;
double tmp188 = -4*sO1*tmp73*tmp57;
double tmp189 = 2*sO2*tmp57*tmp91;
double tmp190 = -4*sO1*tmp94*tmp65;
double tmp191 = -2*sO2*tmp63*tmp65;
double tmp192 = -(tmp94*tmp67);
double tmp193 = -(tmp91*tmp65);
double tmp194 = tmp88 + tmp192 + tmp97 + tmp193;
double tmp195 = -2*sO3*tmp194;
double tmp196 = tmp186 + tmp187 + tmp188 + tmp189 + tmp190 + tmp191 + tmp195;
double tmp197 = -2*sO1*tmp71*tmp69;
double tmp198 = -4*sO3*tmp67*tmp100;
double tmp199 = -4*sO3*tmp69*tmp57;
double tmp200 = -2*sO1*tmp57*tmp91;
double tmp201 = 2*sO1*tmp100*tmp65;
double tmp202 = -(tmp73*tmp57);
double tmp203 = -(tmp69*tmp65);
double tmp204 = tmp102 + tmp202 + tmp103 + tmp203;
double tmp205 = -2*sO2*tmp204;
double tmp206 = tmp197 + tmp98 + tmp198 + tmp199 + tmp200 + tmp201 + tmp205;
double tmp207 = 2*sO1*tmp73*tmp71;
double tmp208 = 2*sO1*tmp69*tmp67;
double tmp209 = -4*sO2*tmp67*tmp100;
double tmp210 = 2*sO1*tmp100*tmp57;
double tmp211 = -4*sO2*tmp73*tmp65;
double tmp212 = tmp73*tmp57;
double tmp213 = tmp69*tmp65;
double tmp214 = tmp102 + tmp212 + tmp103 + tmp213;
double tmp215 = 2*sO3*tmp214;
double tmp216 = tmp207 + tmp208 + tmp209 + tmp210 + tmp211 + tmp101 + tmp215;
double tmp217 = -2*sO2*tmp73*tmp71;
double tmp218 = 2*sO2*tmp69*tmp67;
double tmp219 = -4*sO1*tmp69*tmp57;
double tmp220 = 2*sO2*tmp100*tmp57;
double tmp221 = -4*sO1*tmp73*tmp65;
double tmp222 = -2*sO2*tmp91*tmp65;
double tmp223 = -(tmp71*tmp69);
double tmp224 = -(tmp73*tmp67);
double tmp225 = -(tmp57*tmp91);
double tmp226 = -(tmp100*tmp65);
double tmp227 = tmp223 + tmp224 + tmp225 + tmp226;
double tmp228 = -2*sO3*tmp227;
double tmp229 = tmp217 + tmp218 + tmp219 + tmp220 + tmp221 + tmp222 + tmp228;
double tmp230 = tmp8*tmp6;
double tmp231 = tmp5*tmp7;
double tmp232 = tmp230 + tmp231;
double tmp233 = -2*tmp41;
double tmp234 = 1 + tmp233 + tmp134;
double tmp235 = 4*tmp41;
double tmp236 = -2 + tmp104 + tmp235;
double tmp237 = -(tmp8*tmp7);
double tmp238 = tmp145 + tmp237;
double tmp239 = 2*qOS2*qOS3*tmp238;
double tmp240 = -(tmp5*tmp6);
double tmp241 = tmp240 + tmp146;
double tmp242 = 2*qOS1*tmp17*tmp241;
double tmp243 = -2*tmp12*tmp232;
double tmp244 = -2*tmp0*tmp232;
double tmp245 = qOS1*qOS3*tmp234;
double tmp246 = qOS2*tmp17*tmp234;
double tmp247 = tmp230 + tmp231 + tmp239 + tmp242 + tmp243 + tmp244 + tmp245 + tmp246;
double tmp248 = tmp12*tmp236;
double tmp249 = tmp0*tmp236;
double tmp250 = tmp27 + tmp9;
double tmp251 = tmp8*tmp250;
double tmp252 = tmp22 + tmp23;
double tmp253 = tmp252*tmp7;
double tmp254 = tmp251 + tmp253;
double tmp255 = -4*qOS1*tmp254;
double tmp256 = -(tmp8*tmp6);
double tmp257 = tmp256 + tmp231;
double tmp258 = tmp17*tmp257;
double tmp259 = tmp6*tmp7;
double tmp260 = tmp149 + tmp259;
double tmp261 = qOS3*tmp260;
double tmp262 = tmp258 + tmp261;
double tmp263 = 4*qOS2*tmp262;
double tmp264 = 1 + tmp133 + tmp233 + tmp248 + tmp249 + tmp255 + tmp263;
double tmp265 = tmp28*tmp85;
double tmp266 = tmp265 + tmp121;
J(1+_OFF,1+_OFF) = 0.001*tmp53;
J(1+_OFF,2+_OFF) = 0.002*tmp87;
J(1+_OFF,3+_OFF) = 0.002*tmp81;
J(1+_OFF,4+_OFF) = tmp53*tmp119 + 2*tmp81*tmp132 + 2*tmp87*tmp166;
J(1+_OFF,5+_OFF) = 2*tmp81*tmp175 + 2*tmp87*tmp185 + tmp53*tmp196;
J(1+_OFF,6+_OFF) = 2*tmp81*tmp206 + 2*tmp87*tmp216 + tmp53*tmp229;
J(2+_OFF,1+_OFF) = 0.002*tmp108;
J(2+_OFF,2+_OFF) = 0.001*tmp155;
J(2+_OFF,3+_OFF) = 0.002*tmp122;
J(2+_OFF,4+_OFF) = 2*tmp108*tmp119 + 2*tmp122*tmp132 + tmp155*tmp166;
J(2+_OFF,5+_OFF) = 2*tmp122*tmp175 + tmp155*tmp185 + 2*tmp108*tmp196;
J(2+_OFF,6+_OFF) = 2*tmp122*tmp206 + tmp155*tmp216 + 2*tmp108*tmp229;
J(3+_OFF,1+_OFF) = 0.002*tmp247;
J(3+_OFF,2+_OFF) = 0.002*tmp266;
J(3+_OFF,3+_OFF) = 0.001*tmp264;
J(3+_OFF,4+_OFF) = 2*tmp247*tmp119 + tmp264*tmp132 + 2*tmp266*tmp166;
J(3+_OFF,5+_OFF) = tmp264*tmp175 + 2*tmp266*tmp185 + 2*tmp247*tmp196;
J(3+_OFF,6+_OFF) = tmp264*tmp206 + 2*tmp266*tmp216 + 2*tmp247*tmp229;
