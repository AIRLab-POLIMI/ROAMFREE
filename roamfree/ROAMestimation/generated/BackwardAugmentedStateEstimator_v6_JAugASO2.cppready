double tmp0 = Dt01 + Dt12;
double tmp1 = std::pow(tmp0,-2);
double tmp2 = x0(7+_OFF);
double tmp3 = x1(4+_OFF);
double tmp4 = 1/Dt01;
double tmp5 = x0(6+_OFF);
double tmp6 = x1(5+_OFF);
double tmp7 = x0(5+_OFF);
double tmp8 = x1(6+_OFF);
double tmp9 = x0(4+_OFF);
double tmp10 = x1(7+_OFF);
double tmp11 = x2(4+_OFF);
double tmp12 = 1/Dt12;
double tmp13 = x2(5+_OFF);
double tmp14 = std::pow(Dt12,-2);
double tmp15 = std::pow(tmp13,2);
double tmp16 = x2(6+_OFF);
double tmp17 = std::pow(tmp16,2);
double tmp18 = x2(7+_OFF);
double tmp19 = std::pow(qOS2,2);
double tmp20 = std::pow(qOS3,2);
double tmp21 = std::pow(Dt12,2);
double tmp22 = std::pow(tmp8,2);
double tmp23 = std::pow(tmp10,2);
double tmp24 = std::pow(tmp6,2);
double tmp25 = std::pow(tmp18,2);
double tmp26 = 1/tmp0;
double tmp27 = std::pow(qOS1,2);
double tmp28 = -tmp27;
double tmp29 = -tmp19;
double tmp30 = -tmp20;
double tmp31 = 1 + tmp28 + tmp29 + tmp30;
double tmp32 = std::sqrt(tmp31);
double tmp33 = std::pow(Dt01,2);
double tmp34 = Dt01*Dt12;
double tmp35 = tmp33 + tmp34;
double tmp36 = qOS1*qOS2;
double tmp37 = -4*tmp1*tmp2*tmp3;
double tmp38 = -4*tmp4*Dt12*tmp1*tmp2*tmp3;
double tmp39 = -4*tmp1*tmp5*tmp6;
double tmp40 = -4*tmp4*Dt12*tmp1*tmp5*tmp6;
double tmp41 = 4*tmp1*tmp7*tmp8;
double tmp42 = 4*tmp4*Dt12*tmp1*tmp7*tmp8;
double tmp43 = 4*tmp1*tmp9*tmp10;
double tmp44 = 4*tmp4*Dt12*tmp1*tmp9*tmp10;
double tmp45 = 4*tmp1*tmp10*tmp11;
double tmp46 = 4*Dt01*tmp12*tmp1*tmp10*tmp11;
double tmp47 = std::pow(tmp11,2);
double tmp48 = 4*tmp14*tmp6*tmp8*tmp47;
double tmp49 = -4*tmp1*tmp8*tmp13;
double tmp50 = -4*Dt01*tmp12*tmp1*tmp8*tmp13;
double tmp51 = 8*tmp1*tmp5*tmp3*tmp11*tmp13;
double tmp52 = 8*tmp4*Dt12*tmp1*tmp5*tmp3*tmp11*tmp13;
double tmp53 = -8*tmp1*tmp2*tmp6*tmp11*tmp13;
double tmp54 = -8*tmp4*Dt12*tmp1*tmp2*tmp6*tmp11*tmp13;
double tmp55 = -8*tmp1*tmp9*tmp8*tmp11*tmp13;
double tmp56 = -8*tmp4*Dt12*tmp1*tmp9*tmp8*tmp11*tmp13;
double tmp57 = -4*tmp14*tmp3*tmp8*tmp11*tmp13;
double tmp58 = 8*tmp1*tmp7*tmp10*tmp11*tmp13;
double tmp59 = 8*tmp4*Dt12*tmp1*tmp7*tmp10*tmp11*tmp13;
double tmp60 = 4*tmp14*tmp6*tmp10*tmp11*tmp13;
double tmp61 = 8*tmp1*tmp2*tmp3*tmp15;
double tmp62 = 8*tmp4*Dt12*tmp1*tmp2*tmp3*tmp15;
double tmp63 = 8*tmp1*tmp5*tmp6*tmp15;
double tmp64 = 8*tmp4*Dt12*tmp1*tmp5*tmp6*tmp15;
double tmp65 = -8*tmp1*tmp7*tmp8*tmp15;
double tmp66 = -8*tmp4*Dt12*tmp1*tmp7*tmp8*tmp15;
double tmp67 = -8*tmp1*tmp9*tmp10*tmp15;
double tmp68 = -8*tmp4*Dt12*tmp1*tmp9*tmp10*tmp15;
double tmp69 = -4*tmp14*tmp3*tmp10*tmp15;
double tmp70 = 4*tmp1*tmp6*tmp16;
double tmp71 = 4*Dt01*tmp12*tmp1*tmp6*tmp16;
double tmp72 = -8*tmp1*tmp7*tmp3*tmp11*tmp16;
double tmp73 = -8*tmp4*Dt12*tmp1*tmp7*tmp3*tmp11*tmp16;
double tmp74 = 8*tmp1*tmp9*tmp6*tmp11*tmp16;
double tmp75 = 8*tmp4*Dt12*tmp1*tmp9*tmp6*tmp11*tmp16;
double tmp76 = -4*tmp14*tmp3*tmp6*tmp11*tmp16;
double tmp77 = -8*tmp1*tmp2*tmp8*tmp11*tmp16;
double tmp78 = -8*tmp4*Dt12*tmp1*tmp2*tmp8*tmp11*tmp16;
double tmp79 = 8*tmp1*tmp5*tmp10*tmp11*tmp16;
double tmp80 = 8*tmp4*Dt12*tmp1*tmp5*tmp10*tmp11*tmp16;
double tmp81 = -4*tmp14*tmp8*tmp10*tmp11*tmp16;
double tmp82 = std::pow(tmp3,2);
double tmp83 = 4*tmp14*tmp82*tmp13*tmp16;
double tmp84 = -4*tmp14*tmp23*tmp13*tmp16;
double tmp85 = 8*tmp1*tmp2*tmp3*tmp17;
double tmp86 = 8*tmp4*Dt12*tmp1*tmp2*tmp3*tmp17;
double tmp87 = 8*tmp1*tmp5*tmp6*tmp17;
double tmp88 = 8*tmp4*Dt12*tmp1*tmp5*tmp6*tmp17;
double tmp89 = -8*tmp1*tmp7*tmp8*tmp17;
double tmp90 = -8*tmp4*Dt12*tmp1*tmp7*tmp8*tmp17;
double tmp91 = -8*tmp1*tmp9*tmp10*tmp17;
double tmp92 = -8*tmp4*Dt12*tmp1*tmp9*tmp10*tmp17;
double tmp93 = 4*tmp14*tmp3*tmp10*tmp17;
double tmp94 = -4*tmp1*tmp3*tmp18;
double tmp95 = -4*Dt01*tmp12*tmp1*tmp3*tmp18;
double tmp96 = -4*tmp14*tmp24*tmp11*tmp18;
double tmp97 = 4*tmp14*tmp22*tmp11*tmp18;
double tmp98 = -8*tmp1*tmp7*tmp3*tmp13*tmp18;
double tmp99 = -8*tmp4*Dt12*tmp1*tmp7*tmp3*tmp13*tmp18;
double tmp100 = 8*tmp1*tmp9*tmp6*tmp13*tmp18;
double tmp101 = 8*tmp4*Dt12*tmp1*tmp9*tmp6*tmp13*tmp18;
double tmp102 = 4*tmp14*tmp3*tmp6*tmp13*tmp18;
double tmp103 = -8*tmp1*tmp2*tmp8*tmp13*tmp18;
double tmp104 = -8*tmp4*Dt12*tmp1*tmp2*tmp8*tmp13*tmp18;
double tmp105 = 8*tmp1*tmp5*tmp10*tmp13*tmp18;
double tmp106 = 8*tmp4*Dt12*tmp1*tmp5*tmp10*tmp13*tmp18;
double tmp107 = 4*tmp14*tmp8*tmp10*tmp13*tmp18;
double tmp108 = -8*tmp1*tmp5*tmp3*tmp16*tmp18;
double tmp109 = -8*tmp4*Dt12*tmp1*tmp5*tmp3*tmp16*tmp18;
double tmp110 = 8*tmp1*tmp2*tmp6*tmp16*tmp18;
double tmp111 = 8*tmp4*Dt12*tmp1*tmp2*tmp6*tmp16*tmp18;
double tmp112 = 8*tmp1*tmp9*tmp8*tmp16*tmp18;
double tmp113 = 8*tmp4*Dt12*tmp1*tmp9*tmp8*tmp16*tmp18;
double tmp114 = -4*tmp14*tmp3*tmp8*tmp16*tmp18;
double tmp115 = -8*tmp1*tmp7*tmp10*tmp16*tmp18;
double tmp116 = -8*tmp4*Dt12*tmp1*tmp7*tmp10*tmp16*tmp18;
double tmp117 = 4*tmp14*tmp6*tmp10*tmp16*tmp18;
double tmp118 = -4*tmp14*tmp6*tmp8*tmp25;
double tmp119 = tmp37 + tmp38 + tmp39 + tmp40 + tmp41 + tmp42 + tmp43 + tmp44 + tmp45 + tmp46 + tmp48 + tmp49 + tmp50 + tmp51 + tmp52 + tmp53 + tmp54 + tmp55 + tmp56 + tmp57 + tmp58 + tmp59 + tmp60 + tmp61 + tmp62 + tmp63 + tmp64 + tmp65 + tmp66 + tmp67 + tmp68 + tmp69 + tmp70 + tmp71 + tmp72 + tmp73 + tmp74 + tmp75 + tmp76 + tmp77 + tmp78 + tmp79 + tmp80 + tmp81 + tmp83 + tmp84 + tmp85 + tmp86 + tmp87 + tmp88 + tmp89 + tmp90 + tmp91 + tmp92 + tmp93 + tmp94 + tmp95 + tmp96 + tmp97 + tmp98 + tmp99 + tmp100 + tmp101 + tmp102 + tmp103 + tmp104 + tmp105 + tmp106 + tmp107 + tmp108 + tmp109 + tmp110 + tmp111 + tmp112 + tmp113 + tmp114 + tmp115 + tmp116 + tmp117 + tmp118;
double tmp120 = -2*tmp21*tmp7*tmp3;
double tmp121 = 2*tmp21*tmp9*tmp6;
double tmp122 = -2*tmp21*tmp2*tmp8;
double tmp123 = 2*tmp21*tmp5*tmp10;
double tmp124 = -2*Dt01*tmp0*tmp8*tmp10;
double tmp125 = 2*Dt01*Dt12*tmp6*tmp11;
double tmp126 = -2*Dt01*Dt12*tmp3*tmp13;
double tmp127 = 2*Dt01*tmp0*tmp22*tmp11*tmp13;
double tmp128 = -2*Dt01*tmp0*tmp23*tmp11*tmp13;
double tmp129 = 4*Dt01*tmp0*tmp8*tmp10*tmp15;
double tmp130 = -2*Dt01*Dt12*tmp10*tmp16;
double tmp131 = 4*tmp21*tmp2*tmp3*tmp11*tmp16;
double tmp132 = 4*tmp21*tmp5*tmp6*tmp11*tmp16;
double tmp133 = -4*tmp21*tmp7*tmp8*tmp11*tmp16;
double tmp134 = -2*Dt01*tmp0*tmp6*tmp8*tmp11*tmp16;
double tmp135 = -4*tmp21*tmp9*tmp10*tmp11*tmp16;
double tmp136 = 2*Dt01*tmp0*tmp3*tmp10*tmp11*tmp16;
double tmp137 = -4*tmp21*tmp5*tmp3*tmp13*tmp16;
double tmp138 = 4*tmp21*tmp2*tmp6*tmp13*tmp16;
double tmp139 = 4*tmp21*tmp9*tmp8*tmp13*tmp16;
double tmp140 = -2*Dt01*tmp0*tmp3*tmp8*tmp13*tmp16;
double tmp141 = -4*tmp21*tmp7*tmp10*tmp13*tmp16;
double tmp142 = -2*Dt01*tmp0*tmp6*tmp10*tmp13*tmp16;
double tmp143 = 4*tmp21*tmp7*tmp3*tmp17;
double tmp144 = -4*tmp21*tmp9*tmp6*tmp17;
double tmp145 = 2*Dt01*tmp0*tmp3*tmp6*tmp17;
double tmp146 = 4*tmp21*tmp2*tmp8*tmp17;
double tmp147 = -4*tmp21*tmp5*tmp10*tmp17;
double tmp148 = 2*Dt01*tmp0*tmp8*tmp10*tmp17;
double tmp149 = 2*Dt01*Dt12*tmp8*tmp18;
double tmp150 = -4*tmp21*tmp5*tmp3*tmp11*tmp18;
double tmp151 = 4*tmp21*tmp2*tmp6*tmp11*tmp18;
double tmp152 = 4*tmp21*tmp9*tmp8*tmp11*tmp18;
double tmp153 = 2*Dt01*tmp0*tmp3*tmp8*tmp11*tmp18;
double tmp154 = -4*tmp21*tmp7*tmp10*tmp11*tmp18;
double tmp155 = 2*Dt01*tmp0*tmp6*tmp10*tmp11*tmp18;
double tmp156 = -4*tmp21*tmp2*tmp3*tmp13*tmp18;
double tmp157 = -4*tmp21*tmp5*tmp6*tmp13*tmp18;
double tmp158 = 4*tmp21*tmp7*tmp8*tmp13*tmp18;
double tmp159 = -2*Dt01*tmp0*tmp6*tmp8*tmp13*tmp18;
double tmp160 = 4*tmp21*tmp9*tmp10*tmp13*tmp18;
double tmp161 = 2*Dt01*tmp0*tmp3*tmp10*tmp13*tmp18;
double tmp162 = -2*tmp35*tmp16*tmp18;
double tmp163 = 4*Dt01*tmp0*tmp24*tmp16*tmp18;
double tmp164 = 2*Dt01*tmp0*tmp22*tmp16*tmp18;
double tmp165 = 2*Dt01*tmp0*tmp23*tmp16*tmp18;
double tmp166 = 4*tmp21*tmp7*tmp3*tmp25;
double tmp167 = -4*tmp21*tmp9*tmp6*tmp25;
double tmp168 = -2*Dt01*tmp0*tmp3*tmp6*tmp25;
double tmp169 = 4*tmp21*tmp2*tmp8*tmp25;
double tmp170 = -4*tmp21*tmp5*tmp10*tmp25;
double tmp171 = 2*Dt01*tmp0*tmp8*tmp10*tmp25;
double tmp172 = tmp120 + tmp121 + tmp122 + tmp123 + tmp124 + tmp125 + tmp126 + tmp127 + tmp128 + tmp129 + tmp130 + tmp131 + tmp132 + tmp133 + tmp134 + tmp135 + tmp136 + tmp137 + tmp138 + tmp139 + tmp140 + tmp141 + tmp142 + tmp143 + tmp144 + tmp145 + tmp146 + tmp147 + tmp148 + tmp149 + tmp150 + tmp151 + tmp152 + tmp153 + tmp154 + tmp155 + tmp156 + tmp157 + tmp158 + tmp159 + tmp160 + tmp161 + tmp162 + tmp163 + tmp164 + tmp165 + tmp166 + tmp167 + tmp168 + tmp169 + tmp170 + tmp171;
double tmp173 = 2*Dt01*tmp0*tmp24;
double tmp174 = 2*Dt01*tmp0*tmp23;
double tmp175 = -4*Dt01*tmp0*tmp3*tmp6*tmp11*tmp13;
double tmp176 = -4*Dt01*tmp0*tmp8*tmp10*tmp11*tmp13;
double tmp177 = 2*tmp35*tmp15;
double tmp178 = -4*Dt01*tmp0*tmp24*tmp15;
double tmp179 = -4*Dt01*tmp0*tmp23*tmp15;
double tmp180 = -4*Dt01*tmp0*tmp6*tmp8*tmp13*tmp16;
double tmp181 = 4*Dt01*tmp0*tmp3*tmp10*tmp13*tmp16;
double tmp182 = 4*Dt01*tmp0*tmp6*tmp8*tmp11*tmp18;
double tmp183 = -4*Dt01*tmp0*tmp3*tmp10*tmp11*tmp18;
double tmp184 = -4*Dt01*tmp0*tmp3*tmp6*tmp16*tmp18;
double tmp185 = -4*Dt01*tmp0*tmp8*tmp10*tmp16*tmp18;
double tmp186 = 2*tmp35*tmp25;
double tmp187 = -4*Dt01*tmp0*tmp24*tmp25;
double tmp188 = -4*Dt01*tmp0*tmp23*tmp25;
double tmp189 = tmp173 + tmp174 + tmp175 + tmp176 + tmp177 + tmp178 + tmp179 + tmp180 + tmp181 + tmp182 + tmp183 + tmp184 + tmp185 + tmp186 + tmp187 + tmp188;
double tmp190 = qOS1*qOS3;
double tmp191 = 2*tmp27;
double tmp192 = qOS2*qOS3;
J(1+_OFF,1+_OFF) = (1 - 2*tmp19 - 2*tmp20)*tmp119 - 4*tmp4*tmp14*tmp26*(tmp190 - qOS2*tmp32)*tmp172 - 4*tmp4*tmp14*tmp26*(tmp36 + qOS3*tmp32)*tmp189;
J(2+_OFF,1+_OFF) = 2*(tmp36 - qOS3*tmp32)*tmp119 - 4*tmp4*tmp14*tmp26*(tmp192 + qOS1*tmp32)*tmp172 + 2*tmp4*tmp14*tmp26*(-1 + tmp191 + 2*tmp20)*tmp189;
J(3+_OFF,1+_OFF) = 4*tmp4*tmp14*tmp26*(tmp190 + qOS2*tmp32)*(-2*tmp21*tmp2*tmp3 - 2*tmp21*tmp5*tmp6 + 2*tmp21*tmp7*tmp8 + 2*tmp21*tmp9*tmp10 + 2*Dt01*Dt12*tmp10*tmp11 + 2*tmp33*tmp6*tmp8*tmp47 + 2*Dt01*Dt12*tmp6*tmp8*tmp47 - 2*Dt01*Dt12*tmp8*tmp13 + 4*tmp21*tmp5*tmp3*tmp11*tmp13 - 4*tmp21*tmp2*tmp6*tmp11*tmp13 - 4*tmp21*tmp9*tmp8*tmp11*tmp13 - 2*tmp33*tmp3*tmp8*tmp11*tmp13 - 2*Dt01*Dt12*tmp3*tmp8*tmp11*tmp13 + 4*tmp21*tmp7*tmp10*tmp11*tmp13 + 2*tmp33*tmp6*tmp10*tmp11*tmp13 + 2*Dt01*Dt12*tmp6*tmp10*tmp11*tmp13 + 4*tmp21*tmp2*tmp3*tmp15 + 4*tmp21*tmp5*tmp6*tmp15 - 4*tmp21*tmp7*tmp8*tmp15 - 4*tmp21*tmp9*tmp10*tmp15 - 2*tmp33*tmp3*tmp10*tmp15 - 2*Dt01*Dt12*tmp3*tmp10*tmp15 + 2*Dt01*Dt12*tmp6*tmp16 - 4*tmp21*tmp7*tmp3*tmp11*tmp16 + 4*tmp21*tmp9*tmp6*tmp11*tmp16 - 2*tmp33*tmp3*tmp6*tmp11*tmp16 - 2*Dt01*Dt12*tmp3*tmp6*tmp11*tmp16 - 4*tmp21*tmp2*tmp8*tmp11*tmp16 + 4*tmp21*tmp5*tmp10*tmp11*tmp16 - 2*tmp33*tmp8*tmp10*tmp11*tmp16 - 2*Dt01*Dt12*tmp8*tmp10*tmp11*tmp16 + 2*tmp33*tmp82*tmp13*tmp16 + 2*Dt01*Dt12*tmp82*tmp13*tmp16 - 2*tmp33*tmp23*tmp13*tmp16 - 2*Dt01*Dt12*tmp23*tmp13*tmp16 + 4*tmp21*tmp2*tmp3*tmp17 + 4*tmp21*tmp5*tmp6*tmp17 - 4*tmp21*tmp7*tmp8*tmp17 - 4*tmp21*tmp9*tmp10*tmp17 + 2*tmp33*tmp3*tmp10*tmp17 + 2*Dt01*Dt12*tmp3*tmp10*tmp17 - 2*Dt01*Dt12*tmp3*tmp18 - 2*tmp33*tmp24*tmp11*tmp18 - 2*Dt01*Dt12*tmp24*tmp11*tmp18 + 2*tmp33*tmp22*tmp11*tmp18 + 2*Dt01*Dt12*tmp22*tmp11*tmp18 - 4*tmp21*tmp7*tmp3*tmp13*tmp18 + 4*tmp21*tmp9*tmp6*tmp13*tmp18 + 2*tmp33*tmp3*tmp6*tmp13*tmp18 + 2*Dt01*Dt12*tmp3*tmp6*tmp13*tmp18 - 4*tmp21*tmp2*tmp8*tmp13*tmp18 + 4*tmp21*tmp5*tmp10*tmp13*tmp18 + 2*tmp33*tmp8*tmp10*tmp13*tmp18 + 2*Dt01*Dt12*tmp8*tmp10*tmp13*tmp18 - 4*tmp21*tmp5*tmp3*tmp16*tmp18 + 4*tmp21*tmp2*tmp6*tmp16*tmp18 + 4*tmp21*tmp9*tmp8*tmp16*tmp18 - 2*tmp33*tmp3*tmp8*tmp16*tmp18 - 2*Dt01*Dt12*tmp3*tmp8*tmp16*tmp18 - 4*tmp21*tmp7*tmp10*tmp16*tmp18 + 2*tmp33*tmp6*tmp10*tmp16*tmp18 + 2*Dt01*Dt12*tmp6*tmp10*tmp16*tmp18 - 2*tmp33*tmp6*tmp8*tmp25 - 2*Dt01*Dt12*tmp6*tmp8*tmp25) + 2*tmp4*tmp14*tmp26*(-1 + tmp191 + 2*tmp19)*tmp172 - 4*tmp4*tmp14*tmp26*(tmp192 - qOS1*tmp32)*tmp189;
