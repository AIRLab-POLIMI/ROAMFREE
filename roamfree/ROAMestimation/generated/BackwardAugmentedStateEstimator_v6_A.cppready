double tmp0 = std::pow(Dt12,2);
double tmp1 = x1(3+_OFF);
double tmp2 = x1(4+_OFF);
double tmp3 = x1(5+_OFF);
double tmp4 = Dt01 + Dt12;
double tmp5 = x0(4+_OFF);
double tmp6 = x0(7+_OFF);
double tmp7 = x1(6+_OFF);
double tmp8 = x0(5+_OFF);
double tmp9 = x0(6+_OFF);
double tmp10 = x1(7+_OFF);
double tmp11 = x2(4+_OFF);
double tmp12 = x2(5+_OFF);
double tmp13 = std::pow(tmp7,2);
double tmp14 = x1(2+_OFF);
double tmp15 = -tmp14;
double tmp16 = std::pow(tmp12,2);
double tmp17 = std::pow(tmp3,2);
double tmp18 = x0(3+_OFF);
double tmp19 = -tmp1;
double tmp20 = x2(3+_OFF);
double tmp21 = x2(6+_OFF);
double tmp22 = std::pow(tmp10,2);
double tmp23 = x1(1+_OFF);
double tmp24 = std::pow(tmp21,2);
double tmp25 = std::pow(Dt01,2);
double tmp26 = tmp25*sO3;
double tmp27 = tmp18 + tmp19;
double tmp28 = tmp0*tmp27;
double tmp29 = sO3 + tmp19 + tmp20;
double tmp30 = Dt01*Dt12*tmp29;
double tmp31 = tmp26 + tmp28 + tmp30;
double tmp32 = x2(7+_OFF);
double tmp33 = x0(1+_OFF);
double tmp34 = -tmp23;
double tmp35 = x2(1+_OFF);
double tmp36 = x0(2+_OFF);
double tmp37 = tmp36 + tmp15;
double tmp38 = x2(2+_OFF);
double tmp39 = std::pow(tmp32,2);
double tmp40 = 1/Dt01;
double tmp41 = std::pow(Dt12,-2);
double tmp42 = 1/tmp4;
double tmp43 = std::pow(qOS1,2);
double tmp44 = -tmp43;
double tmp45 = std::pow(qOS2,2);
double tmp46 = -tmp45;
double tmp47 = std::pow(qOS3,2);
double tmp48 = -tmp47;
double tmp49 = 1 + tmp44 + tmp46 + tmp48;
double tmp50 = std::sqrt(tmp49);
double tmp51 = tmp25*sO2;
double tmp52 = tmp0*tmp37;
double tmp53 = sO2 + tmp15 + tmp38;
double tmp54 = Dt01*Dt12*tmp53;
double tmp55 = tmp51 + tmp52 + tmp54;
double tmp56 = tmp25*sO1;
double tmp57 = tmp33 + tmp34;
double tmp58 = tmp0*tmp57;
double tmp59 = sO1 + tmp34 + tmp35;
double tmp60 = Dt01*Dt12*tmp59;
double tmp61 = tmp56 + tmp58 + tmp60;
double tmp62 = std::pow(tmp4,-2);
double tmp63 = 1/Dt12;
double tmp64 = std::pow(tmp11,2);
double tmp65 = std::pow(tmp2,2);
double tmp66 = Dt12*tmp37;
double tmp67 = tmp15 + tmp38;
double tmp68 = Dt01*tmp67;
double tmp69 = tmp66 + tmp68;
double tmp70 = Dt12*tmp57;
double tmp71 = tmp34 + tmp35;
double tmp72 = Dt01*tmp71;
double tmp73 = tmp70 + tmp72;
double tmp74 = -(tmp0*tmp18);
double tmp75 = Dt01*Dt12*tmp1;
double tmp76 = tmp0*tmp1;
double tmp77 = -2*tmp0*sO2*tmp8*tmp2;
double tmp78 = 2*tmp0*sO1*tmp9*tmp2;
double tmp79 = 2*tmp0*sO2*tmp5*tmp3;
double tmp80 = -2*tmp0*sO1*tmp6*tmp3;
double tmp81 = 2*Dt01*tmp4*sO3*tmp17;
double tmp82 = -2*tmp0*sO1*tmp5*tmp7;
double tmp83 = -2*tmp0*sO2*tmp6*tmp7;
double tmp84 = 2*Dt01*tmp4*sO3*tmp13;
double tmp85 = 2*tmp0*sO1*tmp8*tmp10;
double tmp86 = 2*tmp0*sO2*tmp9*tmp10;
double tmp87 = -2*Dt01*tmp4*sO1*tmp3*tmp10;
double tmp88 = -2*Dt01*tmp4*sO2*tmp7*tmp10;
double tmp89 = -(Dt01*Dt12*tmp20);
double tmp90 = 2*Dt01*Dt12*sO2*tmp3*tmp11;
double tmp91 = -2*Dt01*Dt12*sO1*tmp7*tmp11;
double tmp92 = -2*Dt01*Dt12*sO2*tmp2*tmp12;
double tmp93 = -2*Dt01*Dt12*sO1*tmp10*tmp12;
double tmp94 = 4*tmp0*sO1*tmp6*tmp2*tmp11*tmp12;
double tmp95 = 4*tmp0*sO1*tmp9*tmp3*tmp11*tmp12;
double tmp96 = -4*Dt01*tmp4*sO3*tmp2*tmp3*tmp11*tmp12;
double tmp97 = -4*tmp0*sO1*tmp8*tmp7*tmp11*tmp12;
double tmp98 = 2*Dt01*tmp4*sO1*tmp3*tmp7*tmp11*tmp12;
double tmp99 = 2*Dt01*tmp4*sO2*tmp13*tmp11*tmp12;
double tmp100 = -4*tmp0*sO1*tmp5*tmp10*tmp11*tmp12;
double tmp101 = 2*Dt01*tmp4*sO1*tmp2*tmp10*tmp11*tmp12;
double tmp102 = 4*Dt01*tmp4*sO3*tmp7*tmp10*tmp11*tmp12;
double tmp103 = -2*Dt01*tmp4*sO2*tmp22*tmp11*tmp12;
double tmp104 = 2*Dt12*tmp69*tmp11*tmp12;
double tmp105 = -4*tmp0*sO1*tmp9*tmp2*tmp16;
double tmp106 = 4*tmp0*sO1*tmp6*tmp3*tmp16;
double tmp107 = -4*Dt01*tmp4*sO3*tmp17*tmp16;
double tmp108 = 4*tmp0*sO1*tmp5*tmp7*tmp16;
double tmp109 = -2*Dt01*tmp4*sO1*tmp2*tmp7*tmp16;
double tmp110 = -4*Dt01*tmp4*sO3*tmp13*tmp16;
double tmp111 = -4*tmp0*sO1*tmp8*tmp10*tmp16;
double tmp112 = 2*Dt01*tmp4*sO1*tmp3*tmp10*tmp16;
double tmp113 = 4*Dt01*tmp4*sO2*tmp7*tmp10*tmp16;
double tmp114 = 2*tmp31*tmp16;
double tmp115 = 2*Dt01*Dt12*sO1*tmp2*tmp21;
double tmp116 = -2*Dt01*Dt12*sO2*tmp10*tmp21;
double tmp117 = 4*tmp0*sO2*tmp6*tmp2*tmp11*tmp21;
double tmp118 = 4*tmp0*sO2*tmp9*tmp3*tmp11*tmp21;
double tmp119 = -2*Dt01*tmp4*sO1*tmp17*tmp11*tmp21;
double tmp120 = -4*tmp0*sO2*tmp8*tmp7*tmp11*tmp21;
double tmp121 = -4*Dt01*tmp4*sO3*tmp2*tmp7*tmp11*tmp21;
double tmp122 = -2*Dt01*tmp4*sO2*tmp3*tmp7*tmp11*tmp21;
double tmp123 = -4*tmp0*sO2*tmp5*tmp10*tmp11*tmp21;
double tmp124 = 2*Dt01*tmp4*sO2*tmp2*tmp10*tmp11*tmp21;
double tmp125 = -4*Dt01*tmp4*sO3*tmp3*tmp10*tmp11*tmp21;
double tmp126 = 2*Dt01*tmp4*sO1*tmp22*tmp11*tmp21;
double tmp127 = -tmp33;
double tmp128 = tmp127 + tmp23;
double tmp129 = Dt12*tmp128;
double tmp130 = -tmp35;
double tmp131 = tmp23 + tmp130;
double tmp132 = Dt01*tmp131;
double tmp133 = tmp129 + tmp132;
double tmp134 = 2*Dt12*tmp133*tmp11*tmp21;
double tmp135 = 4*tmp0*sO1*tmp8*tmp2*tmp12*tmp21;
double tmp136 = -4*tmp0*sO2*tmp9*tmp2*tmp12*tmp21;
double tmp137 = -4*tmp0*sO1*tmp5*tmp3*tmp12*tmp21;
double tmp138 = 4*tmp0*sO2*tmp6*tmp3*tmp12*tmp21;
double tmp139 = 2*Dt01*tmp4*sO1*tmp2*tmp3*tmp12*tmp21;
double tmp140 = 4*tmp0*sO2*tmp5*tmp7*tmp12*tmp21;
double tmp141 = 4*tmp0*sO1*tmp6*tmp7*tmp12*tmp21;
double tmp142 = -2*Dt01*tmp4*sO2*tmp2*tmp7*tmp12*tmp21;
double tmp143 = -4*tmp0*sO2*tmp8*tmp10*tmp12*tmp21;
double tmp144 = -4*tmp0*sO1*tmp9*tmp10*tmp12*tmp21;
double tmp145 = -2*Dt01*tmp4*sO2*tmp3*tmp10*tmp12*tmp21;
double tmp146 = -2*Dt01*tmp4*sO1*tmp7*tmp10*tmp12*tmp21;
double tmp147 = 4*tmp0*sO2*tmp8*tmp2*tmp24;
double tmp148 = -4*tmp0*sO2*tmp5*tmp3*tmp24;
double tmp149 = 2*Dt01*tmp4*sO2*tmp2*tmp3*tmp24;
double tmp150 = -4*Dt01*tmp4*sO3*tmp17*tmp24;
double tmp151 = 4*tmp0*sO2*tmp6*tmp7*tmp24;
double tmp152 = -4*Dt01*tmp4*sO3*tmp13*tmp24;
double tmp153 = -4*tmp0*sO2*tmp9*tmp10*tmp24;
double tmp154 = 4*Dt01*tmp4*sO1*tmp3*tmp10*tmp24;
double tmp155 = 2*Dt01*tmp4*sO2*tmp7*tmp10*tmp24;
double tmp156 = 2*tmp31*tmp24;
double tmp157 = 2*Dt01*Dt12*sO1*tmp3*tmp32;
double tmp158 = 2*Dt01*Dt12*sO2*tmp7*tmp32;
double tmp159 = -4*tmp0*sO1*tmp8*tmp2*tmp11*tmp32;
double tmp160 = -4*tmp0*sO2*tmp9*tmp2*tmp11*tmp32;
double tmp161 = 4*tmp0*sO1*tmp5*tmp3*tmp11*tmp32;
double tmp162 = 4*tmp0*sO2*tmp6*tmp3*tmp11*tmp32;
double tmp163 = 2*Dt01*tmp4*sO1*tmp2*tmp3*tmp11*tmp32;
double tmp164 = 4*tmp0*sO2*tmp5*tmp7*tmp11*tmp32;
double tmp165 = -4*tmp0*sO1*tmp6*tmp7*tmp11*tmp32;
double tmp166 = 2*Dt01*tmp4*sO2*tmp2*tmp7*tmp11*tmp32;
double tmp167 = -4*tmp0*sO2*tmp8*tmp10*tmp11*tmp32;
double tmp168 = 4*tmp0*sO1*tmp9*tmp10*tmp11*tmp32;
double tmp169 = 2*Dt01*tmp4*sO2*tmp3*tmp10*tmp11*tmp32;
double tmp170 = -2*Dt01*tmp4*sO1*tmp7*tmp10*tmp11*tmp32;
double tmp171 = -4*tmp0*sO2*tmp6*tmp2*tmp12*tmp32;
double tmp172 = -4*tmp0*sO2*tmp9*tmp3*tmp12*tmp32;
double tmp173 = 2*Dt01*tmp4*sO1*tmp17*tmp12*tmp32;
double tmp174 = 4*tmp0*sO2*tmp8*tmp7*tmp12*tmp32;
double tmp175 = -4*Dt01*tmp4*sO3*tmp2*tmp7*tmp12*tmp32;
double tmp176 = -2*Dt01*tmp4*sO2*tmp3*tmp7*tmp12*tmp32;
double tmp177 = 4*Dt01*tmp4*sO1*tmp13*tmp12*tmp32;
double tmp178 = 4*tmp0*sO2*tmp5*tmp10*tmp12*tmp32;
double tmp179 = 2*Dt01*tmp4*sO2*tmp2*tmp10*tmp12*tmp32;
double tmp180 = -4*Dt01*tmp4*sO3*tmp3*tmp10*tmp12*tmp32;
double tmp181 = 2*Dt01*tmp4*sO1*tmp22*tmp12*tmp32;
double tmp182 = -2*tmp61*tmp12*tmp32;
double tmp183 = 4*tmp0*sO1*tmp6*tmp2*tmp21*tmp32;
double tmp184 = 4*tmp0*sO1*tmp9*tmp3*tmp21*tmp32;
double tmp185 = 4*Dt01*tmp4*sO3*tmp2*tmp3*tmp21*tmp32;
double tmp186 = 4*Dt01*tmp4*sO2*tmp17*tmp21*tmp32;
double tmp187 = -4*tmp0*sO1*tmp8*tmp7*tmp21*tmp32;
double tmp188 = -2*Dt01*tmp4*sO1*tmp3*tmp7*tmp21*tmp32;
double tmp189 = 2*Dt01*tmp4*sO2*tmp13*tmp21*tmp32;
double tmp190 = -4*tmp0*sO1*tmp5*tmp10*tmp21*tmp32;
double tmp191 = -2*Dt01*tmp4*sO1*tmp2*tmp10*tmp21*tmp32;
double tmp192 = -4*Dt01*tmp4*sO3*tmp7*tmp10*tmp21*tmp32;
double tmp193 = 2*Dt01*tmp4*sO2*tmp22*tmp21*tmp32;
double tmp194 = -2*tmp55*tmp21*tmp32;
double tmp195 = 4*tmp0*sO2*tmp8*tmp2*tmp39;
double tmp196 = -4*tmp0*sO1*tmp9*tmp2*tmp39;
double tmp197 = -4*tmp0*sO2*tmp5*tmp3*tmp39;
double tmp198 = 4*tmp0*sO1*tmp6*tmp3*tmp39;
double tmp199 = -2*Dt01*tmp4*sO2*tmp2*tmp3*tmp39;
double tmp200 = 4*tmp0*sO1*tmp5*tmp7*tmp39;
double tmp201 = 4*tmp0*sO2*tmp6*tmp7*tmp39;
double tmp202 = 2*Dt01*tmp4*sO1*tmp2*tmp7*tmp39;
double tmp203 = -4*tmp0*sO1*tmp8*tmp10*tmp39;
double tmp204 = -4*tmp0*sO2*tmp9*tmp10*tmp39;
double tmp205 = 2*Dt01*tmp4*sO1*tmp3*tmp10*tmp39;
double tmp206 = 2*Dt01*tmp4*sO2*tmp7*tmp10*tmp39;
double tmp207 = tmp74 + tmp75 + tmp76 + tmp77 + tmp78 + tmp79 + tmp80 + tmp81 + tmp82 + tmp83 + tmp84 + tmp85 + tmp86 + tmp87 + tmp88 + tmp89 + tmp90 + tmp91 + tmp92 + tmp93 + tmp94 + tmp95 + tmp96 + tmp97 + tmp98 + tmp99 + tmp100 + tmp101 + tmp102 + tmp103 + tmp104 + tmp105 + tmp106 + tmp107 + tmp108 + tmp109 + tmp110 + tmp111 + tmp112 + tmp113 + tmp114 + tmp115 + tmp116 + tmp117 + tmp118 + tmp119 + tmp120 + tmp121 + tmp122 + tmp123 + tmp124 + tmp125 + tmp126 + tmp134 + tmp135 + tmp136 + tmp137 + tmp138 + tmp139 + tmp140 + tmp141 + tmp142 + tmp143 + tmp144 + tmp145 + tmp146 + tmp147 + tmp148 + tmp149 + tmp150 + tmp151 + tmp152 + tmp153 + tmp154 + tmp155 + tmp156 + tmp157 + tmp158 + tmp159 + tmp160 + tmp161 + tmp162 + tmp163 + tmp164 + tmp165 + tmp166 + tmp167 + tmp168 + tmp169 + tmp170 + tmp171 + tmp172 + tmp173 + tmp174 + tmp175 + tmp176 + tmp177 + tmp178 + tmp179 + tmp180 + tmp181 + tmp182 + tmp183 + tmp184 + tmp185 + tmp186 + tmp187 + tmp188 + tmp189 + tmp190 + tmp191 + tmp192 + tmp193 + tmp194 + tmp195 + tmp196 + tmp197 + tmp198 + tmp199 + tmp200 + tmp201 + tmp202 + tmp203 + tmp204 + tmp205 + tmp206;
double tmp208 = -(tmp0*tmp36);
double tmp209 = Dt01*Dt12*tmp14;
double tmp210 = tmp0*tmp14;
double tmp211 = 2*tmp0*sO3*tmp8*tmp2;
double tmp212 = -2*tmp0*sO1*tmp6*tmp2;
double tmp213 = -2*tmp0*sO3*tmp5*tmp3;
double tmp214 = -2*tmp0*sO1*tmp9*tmp3;
double tmp215 = 2*Dt01*tmp4*sO2*tmp17;
double tmp216 = 2*tmp0*sO1*tmp8*tmp7;
double tmp217 = 2*tmp0*sO3*tmp6*tmp7;
double tmp218 = -2*Dt01*tmp4*sO1*tmp3*tmp7;
double tmp219 = 2*tmp0*sO1*tmp5*tmp10;
double tmp220 = -2*tmp0*sO3*tmp9*tmp10;
double tmp221 = -2*Dt01*tmp4*sO3*tmp7*tmp10;
double tmp222 = 2*Dt01*tmp4*sO2*tmp22;
double tmp223 = -(Dt01*Dt12*tmp38);
double tmp224 = -2*Dt01*Dt12*sO3*tmp3*tmp11;
double tmp225 = 2*Dt01*Dt12*sO1*tmp10*tmp11;
double tmp226 = 2*Dt01*Dt12*sO3*tmp2*tmp12;
double tmp227 = -2*Dt01*Dt12*sO1*tmp7*tmp12;
double tmp228 = 4*tmp0*sO1*tmp9*tmp2*tmp11*tmp12;
double tmp229 = -4*tmp0*sO1*tmp6*tmp3*tmp11*tmp12;
double tmp230 = -4*Dt01*tmp4*sO2*tmp2*tmp3*tmp11*tmp12;
double tmp231 = -4*tmp0*sO1*tmp5*tmp7*tmp11*tmp12;
double tmp232 = 2*Dt01*tmp4*sO1*tmp2*tmp7*tmp11*tmp12;
double tmp233 = 2*Dt01*tmp4*sO3*tmp13*tmp11*tmp12;
double tmp234 = 4*tmp0*sO1*tmp8*tmp10*tmp11*tmp12;
double tmp235 = -2*Dt01*tmp4*sO1*tmp3*tmp10*tmp11*tmp12;
double tmp236 = -4*Dt01*tmp4*sO2*tmp7*tmp10*tmp11*tmp12;
double tmp237 = -2*Dt01*tmp4*sO3*tmp22*tmp11*tmp12;
double tmp238 = -tmp18;
double tmp239 = tmp238 + tmp1;
double tmp240 = Dt12*tmp239;
double tmp241 = -tmp20;
double tmp242 = tmp1 + tmp241;
double tmp243 = Dt01*tmp242;
double tmp244 = tmp240 + tmp243;
double tmp245 = 2*Dt12*tmp244*tmp11*tmp12;
double tmp246 = 4*tmp0*sO1*tmp6*tmp2*tmp16;
double tmp247 = 4*tmp0*sO1*tmp9*tmp3*tmp16;
double tmp248 = -4*Dt01*tmp4*sO2*tmp17*tmp16;
double tmp249 = -4*tmp0*sO1*tmp8*tmp7*tmp16;
double tmp250 = 2*Dt01*tmp4*sO1*tmp3*tmp7*tmp16;
double tmp251 = -4*tmp0*sO1*tmp5*tmp10*tmp16;
double tmp252 = 2*Dt01*tmp4*sO1*tmp2*tmp10*tmp16;
double tmp253 = 4*Dt01*tmp4*sO3*tmp7*tmp10*tmp16;
double tmp254 = -4*Dt01*tmp4*sO2*tmp22*tmp16;
double tmp255 = 2*tmp55*tmp16;
double tmp256 = 2*Dt01*Dt12*sO1*tmp3*tmp21;
double tmp257 = 2*Dt01*Dt12*sO3*tmp10*tmp21;
double tmp258 = -4*tmp0*sO1*tmp8*tmp2*tmp11*tmp21;
double tmp259 = -4*tmp0*sO3*tmp6*tmp2*tmp11*tmp21;
double tmp260 = 4*tmp0*sO1*tmp5*tmp3*tmp11*tmp21;
double tmp261 = -4*tmp0*sO3*tmp9*tmp3*tmp11*tmp21;
double tmp262 = 2*Dt01*tmp4*sO1*tmp2*tmp3*tmp11*tmp21;
double tmp263 = 4*tmp0*sO3*tmp8*tmp7*tmp11*tmp21;
double tmp264 = -4*tmp0*sO1*tmp6*tmp7*tmp11*tmp21;
double tmp265 = -2*Dt01*tmp4*sO3*tmp3*tmp7*tmp11*tmp21;
double tmp266 = 4*tmp0*sO3*tmp5*tmp10*tmp11*tmp21;
double tmp267 = 4*tmp0*sO1*tmp9*tmp10*tmp11*tmp21;
double tmp268 = 2*Dt01*tmp4*sO3*tmp2*tmp10*tmp11*tmp21;
double tmp269 = 2*Dt01*tmp4*sO1*tmp7*tmp10*tmp11*tmp21;
double tmp270 = 4*tmp0*sO3*tmp9*tmp2*tmp12*tmp21;
double tmp271 = -4*tmp0*sO3*tmp6*tmp3*tmp12*tmp21;
double tmp272 = 2*Dt01*tmp4*sO1*tmp17*tmp12*tmp21;
double tmp273 = -4*tmp0*sO3*tmp5*tmp7*tmp12*tmp21;
double tmp274 = -2*Dt01*tmp4*sO3*tmp2*tmp7*tmp12*tmp21;
double tmp275 = -4*Dt01*tmp4*sO2*tmp3*tmp7*tmp12*tmp21;
double tmp276 = 2*Dt01*tmp4*sO1*tmp13*tmp12*tmp21;
double tmp277 = 4*tmp0*sO3*tmp8*tmp10*tmp12*tmp21;
double tmp278 = 4*Dt01*tmp4*sO2*tmp2*tmp10*tmp12*tmp21;
double tmp279 = -2*Dt01*tmp4*sO3*tmp3*tmp10*tmp12*tmp21;
double tmp280 = 4*Dt01*tmp4*sO1*tmp22*tmp12*tmp21;
double tmp281 = -2*tmp61*tmp12*tmp21;
double tmp282 = -4*tmp0*sO3*tmp8*tmp2*tmp24;
double tmp283 = 4*tmp0*sO1*tmp6*tmp2*tmp24;
double tmp284 = 4*tmp0*sO3*tmp5*tmp3*tmp24;
double tmp285 = 4*tmp0*sO1*tmp9*tmp3*tmp24;
double tmp286 = 2*Dt01*tmp4*sO3*tmp2*tmp3*tmp24;
double tmp287 = -4*tmp0*sO1*tmp8*tmp7*tmp24;
double tmp288 = -4*tmp0*sO3*tmp6*tmp7*tmp24;
double tmp289 = 2*Dt01*tmp4*sO1*tmp3*tmp7*tmp24;
double tmp290 = -4*tmp0*sO1*tmp5*tmp10*tmp24;
double tmp291 = 4*tmp0*sO3*tmp9*tmp10*tmp24;
double tmp292 = -2*Dt01*tmp4*sO1*tmp2*tmp10*tmp24;
double tmp293 = 2*Dt01*tmp4*sO3*tmp7*tmp10*tmp24;
double tmp294 = -2*Dt01*Dt12*sO1*tmp2*tmp32;
double tmp295 = -2*Dt01*Dt12*sO3*tmp7*tmp32;
double tmp296 = 4*tmp0*sO3*tmp9*tmp2*tmp11*tmp32;
double tmp297 = -4*tmp0*sO3*tmp6*tmp3*tmp11*tmp32;
double tmp298 = 2*Dt01*tmp4*sO1*tmp17*tmp11*tmp32;
double tmp299 = -4*tmp0*sO3*tmp5*tmp7*tmp11*tmp32;
double tmp300 = 2*Dt01*tmp4*sO3*tmp2*tmp7*tmp11*tmp32;
double tmp301 = 4*Dt01*tmp4*sO2*tmp3*tmp7*tmp11*tmp32;
double tmp302 = -2*Dt01*tmp4*sO1*tmp13*tmp11*tmp32;
double tmp303 = 4*tmp0*sO3*tmp8*tmp10*tmp11*tmp32;
double tmp304 = -4*Dt01*tmp4*sO2*tmp2*tmp10*tmp11*tmp32;
double tmp305 = 2*Dt01*tmp4*sO3*tmp3*tmp10*tmp11*tmp32;
double tmp306 = 2*Dt12*tmp73*tmp11*tmp32;
double tmp307 = -4*tmp0*sO1*tmp8*tmp2*tmp12*tmp32;
double tmp308 = 4*tmp0*sO3*tmp6*tmp2*tmp12*tmp32;
double tmp309 = 4*tmp0*sO1*tmp5*tmp3*tmp12*tmp32;
double tmp310 = 4*tmp0*sO3*tmp9*tmp3*tmp12*tmp32;
double tmp311 = -2*Dt01*tmp4*sO1*tmp2*tmp3*tmp12*tmp32;
double tmp312 = -4*tmp0*sO3*tmp8*tmp7*tmp12*tmp32;
double tmp313 = -4*tmp0*sO1*tmp6*tmp7*tmp12*tmp32;
double tmp314 = -2*Dt01*tmp4*sO3*tmp3*tmp7*tmp12*tmp32;
double tmp315 = -4*tmp0*sO3*tmp5*tmp10*tmp12*tmp32;
double tmp316 = 4*tmp0*sO1*tmp9*tmp10*tmp12*tmp32;
double tmp317 = 2*Dt01*tmp4*sO3*tmp2*tmp10*tmp12*tmp32;
double tmp318 = -2*Dt01*tmp4*sO1*tmp7*tmp10*tmp12*tmp32;
double tmp319 = -4*tmp0*sO1*tmp9*tmp2*tmp21*tmp32;
double tmp320 = 4*tmp0*sO1*tmp6*tmp3*tmp21*tmp32;
double tmp321 = -4*Dt01*tmp4*sO2*tmp2*tmp3*tmp21*tmp32;
double tmp322 = 4*Dt01*tmp4*sO3*tmp17*tmp21*tmp32;
double tmp323 = 4*tmp0*sO1*tmp5*tmp7*tmp21*tmp32;
double tmp324 = 2*Dt01*tmp4*sO1*tmp2*tmp7*tmp21*tmp32;
double tmp325 = 2*Dt01*tmp4*sO3*tmp13*tmp21*tmp32;
double tmp326 = -4*tmp0*sO1*tmp8*tmp10*tmp21*tmp32;
double tmp327 = -2*Dt01*tmp4*sO1*tmp3*tmp10*tmp21*tmp32;
double tmp328 = -4*Dt01*tmp4*sO2*tmp7*tmp10*tmp21*tmp32;
double tmp329 = 2*Dt01*tmp4*sO3*tmp22*tmp21*tmp32;
double tmp330 = -2*tmp31*tmp21*tmp32;
double tmp331 = -4*tmp0*sO3*tmp8*tmp2*tmp39;
double tmp332 = 4*tmp0*sO3*tmp5*tmp3*tmp39;
double tmp333 = -2*Dt01*tmp4*sO3*tmp2*tmp3*tmp39;
double tmp334 = -4*Dt01*tmp4*sO2*tmp17*tmp39;
double tmp335 = -4*tmp0*sO3*tmp6*tmp7*tmp39;
double tmp336 = 4*Dt01*tmp4*sO1*tmp3*tmp7*tmp39;
double tmp337 = 4*tmp0*sO3*tmp9*tmp10*tmp39;
double tmp338 = 2*Dt01*tmp4*sO3*tmp7*tmp10*tmp39;
double tmp339 = -4*Dt01*tmp4*sO2*tmp22*tmp39;
double tmp340 = 2*tmp55*tmp39;
double tmp341 = tmp208 + tmp209 + tmp210 + tmp211 + tmp212 + tmp213 + tmp214 + tmp215 + tmp216 + tmp217 + tmp218 + tmp219 + tmp220 + tmp221 + tmp222 + tmp223 + tmp224 + tmp225 + tmp226 + tmp227 + tmp228 + tmp229 + tmp230 + tmp231 + tmp232 + tmp233 + tmp234 + tmp235 + tmp236 + tmp237 + tmp245 + tmp246 + tmp247 + tmp248 + tmp249 + tmp250 + tmp251 + tmp252 + tmp253 + tmp254 + tmp255 + tmp256 + tmp257 + tmp258 + tmp259 + tmp260 + tmp261 + tmp262 + tmp263 + tmp264 + tmp265 + tmp266 + tmp267 + tmp268 + tmp269 + tmp270 + tmp271 + tmp272 + tmp273 + tmp274 + tmp275 + tmp276 + tmp277 + tmp278 + tmp279 + tmp280 + tmp281 + tmp282 + tmp283 + tmp284 + tmp285 + tmp286 + tmp287 + tmp288 + tmp289 + tmp290 + tmp291 + tmp292 + tmp293 + tmp294 + tmp295 + tmp296 + tmp297 + tmp298 + tmp299 + tmp300 + tmp301 + tmp302 + tmp303 + tmp304 + tmp305 + tmp306 + tmp307 + tmp308 + tmp309 + tmp310 + tmp311 + tmp312 + tmp313 + tmp314 + tmp315 + tmp316 + tmp317 + tmp318 + tmp319 + tmp320 + tmp321 + tmp322 + tmp323 + tmp324 + tmp325 + tmp326 + tmp327 + tmp328 + tmp329 + tmp330 + tmp331 + tmp332 + tmp333 + tmp334 + tmp335 + tmp336 + tmp337 + tmp338 + tmp339 + tmp340;
double tmp342 = qOS1*qOS2;
double tmp343 = 4*tmp62*sO3*tmp9*tmp2;
double tmp344 = 4*tmp40*Dt12*tmp62*sO3*tmp9*tmp2;
double tmp345 = -4*tmp62*sO2*tmp6*tmp2;
double tmp346 = -4*tmp40*Dt12*tmp62*sO2*tmp6*tmp2;
double tmp347 = -4*tmp62*sO2*tmp9*tmp3;
double tmp348 = -4*tmp40*Dt12*tmp62*sO2*tmp9*tmp3;
double tmp349 = -4*tmp62*sO3*tmp6*tmp3;
double tmp350 = -4*tmp40*Dt12*tmp62*sO3*tmp6*tmp3;
double tmp351 = -4*tmp62*sO3*tmp5*tmp7;
double tmp352 = -4*tmp40*Dt12*tmp62*sO3*tmp5*tmp7;
double tmp353 = 4*tmp62*sO2*tmp8*tmp7;
double tmp354 = 4*tmp40*Dt12*tmp62*sO2*tmp8*tmp7;
double tmp355 = 4*tmp62*sO2*tmp5*tmp10;
double tmp356 = 4*tmp40*Dt12*tmp62*sO2*tmp5*tmp10;
double tmp357 = 4*tmp62*sO3*tmp8*tmp10;
double tmp358 = 4*tmp40*Dt12*tmp62*sO3*tmp8*tmp10;
double tmp359 = -4*tmp62*sO3*tmp7*tmp11;
double tmp360 = -4*Dt01*tmp63*tmp62*sO3*tmp7*tmp11;
double tmp361 = 4*tmp62*sO2*tmp10*tmp11;
double tmp362 = 4*Dt01*tmp63*tmp62*sO2*tmp10*tmp11;
double tmp363 = 4*tmp41*sO2*tmp3*tmp7*tmp64;
double tmp364 = -4*tmp41*sO1*tmp13*tmp64;
double tmp365 = 4*tmp41*sO3*tmp3*tmp10*tmp64;
double tmp366 = -4*tmp41*sO1*tmp22*tmp64;
double tmp367 = -4*tmp62*sO2*tmp7*tmp12;
double tmp368 = -4*Dt01*tmp63*tmp62*sO2*tmp7*tmp12;
double tmp369 = -4*tmp62*sO3*tmp10*tmp12;
double tmp370 = -4*Dt01*tmp63*tmp62*sO3*tmp10*tmp12;
double tmp371 = 8*tmp62*sO2*tmp9*tmp2*tmp11*tmp12;
double tmp372 = 8*tmp40*Dt12*tmp62*sO2*tmp9*tmp2*tmp11*tmp12;
double tmp373 = 8*tmp62*sO3*tmp6*tmp2*tmp11*tmp12;
double tmp374 = 8*tmp40*Dt12*tmp62*sO3*tmp6*tmp2*tmp11*tmp12;
double tmp375 = 8*tmp62*sO3*tmp9*tmp3*tmp11*tmp12;
double tmp376 = 8*tmp40*Dt12*tmp62*sO3*tmp9*tmp3*tmp11*tmp12;
double tmp377 = -8*tmp62*sO2*tmp6*tmp3*tmp11*tmp12;
double tmp378 = -8*tmp40*Dt12*tmp62*sO2*tmp6*tmp3*tmp11*tmp12;
double tmp379 = -8*tmp62*sO2*tmp5*tmp7*tmp11*tmp12;
double tmp380 = -8*tmp40*Dt12*tmp62*sO2*tmp5*tmp7*tmp11*tmp12;
double tmp381 = -8*tmp62*sO3*tmp8*tmp7*tmp11*tmp12;
double tmp382 = -8*tmp40*Dt12*tmp62*sO3*tmp8*tmp7*tmp11*tmp12;
double tmp383 = -4*tmp41*sO2*tmp2*tmp7*tmp11*tmp12;
double tmp384 = -4*tmp41*sO3*tmp3*tmp7*tmp11*tmp12;
double tmp385 = -8*tmp62*sO3*tmp5*tmp10*tmp11*tmp12;
double tmp386 = -8*tmp40*Dt12*tmp62*sO3*tmp5*tmp10*tmp11*tmp12;
double tmp387 = 8*tmp62*sO2*tmp8*tmp10*tmp11*tmp12;
double tmp388 = 8*tmp40*Dt12*tmp62*sO2*tmp8*tmp10*tmp11*tmp12;
double tmp389 = -4*tmp41*sO3*tmp2*tmp10*tmp11*tmp12;
double tmp390 = 4*tmp41*sO2*tmp3*tmp10*tmp11*tmp12;
double tmp391 = -8*tmp62*sO3*tmp9*tmp2*tmp16;
double tmp392 = -8*tmp40*Dt12*tmp62*sO3*tmp9*tmp2*tmp16;
double tmp393 = 8*tmp62*sO2*tmp6*tmp2*tmp16;
double tmp394 = 8*tmp40*Dt12*tmp62*sO2*tmp6*tmp2*tmp16;
double tmp395 = 8*tmp62*sO2*tmp9*tmp3*tmp16;
double tmp396 = 8*tmp40*Dt12*tmp62*sO2*tmp9*tmp3*tmp16;
double tmp397 = 8*tmp62*sO3*tmp6*tmp3*tmp16;
double tmp398 = 8*tmp40*Dt12*tmp62*sO3*tmp6*tmp3*tmp16;
double tmp399 = 8*tmp62*sO3*tmp5*tmp7*tmp16;
double tmp400 = 8*tmp40*Dt12*tmp62*sO3*tmp5*tmp7*tmp16;
double tmp401 = -8*tmp62*sO2*tmp8*tmp7*tmp16;
double tmp402 = -8*tmp40*Dt12*tmp62*sO2*tmp8*tmp7*tmp16;
double tmp403 = 4*tmp41*sO3*tmp2*tmp7*tmp16;
double tmp404 = -4*tmp41*sO1*tmp13*tmp16;
double tmp405 = -8*tmp62*sO2*tmp5*tmp10*tmp16;
double tmp406 = -8*tmp40*Dt12*tmp62*sO2*tmp5*tmp10*tmp16;
double tmp407 = -8*tmp62*sO3*tmp8*tmp10*tmp16;
double tmp408 = -8*tmp40*Dt12*tmp62*sO3*tmp8*tmp10*tmp16;
double tmp409 = -4*tmp41*sO2*tmp2*tmp10*tmp16;
double tmp410 = -4*tmp41*sO1*tmp22*tmp16;
double tmp411 = 4*tmp62*sO3*tmp2*tmp21;
double tmp412 = 4*Dt01*tmp63*tmp62*sO3*tmp2*tmp21;
double tmp413 = 4*tmp62*sO2*tmp3*tmp21;
double tmp414 = 4*Dt01*tmp63*tmp62*sO2*tmp3*tmp21;
double tmp415 = -8*tmp62*sO2*tmp8*tmp2*tmp11*tmp21;
double tmp416 = -8*tmp40*Dt12*tmp62*sO2*tmp8*tmp2*tmp11*tmp21;
double tmp417 = 8*tmp62*sO2*tmp5*tmp3*tmp11*tmp21;
double tmp418 = 8*tmp40*Dt12*tmp62*sO2*tmp5*tmp3*tmp11*tmp21;
double tmp419 = -4*tmp41*sO2*tmp2*tmp3*tmp11*tmp21;
double tmp420 = 4*tmp41*sO3*tmp17*tmp11*tmp21;
double tmp421 = -8*tmp62*sO2*tmp6*tmp7*tmp11*tmp21;
double tmp422 = -8*tmp40*Dt12*tmp62*sO2*tmp6*tmp7*tmp11*tmp21;
double tmp423 = 8*tmp41*sO1*tmp2*tmp7*tmp11*tmp21;
double tmp424 = 8*tmp62*sO2*tmp9*tmp10*tmp11*tmp21;
double tmp425 = 8*tmp40*Dt12*tmp62*sO2*tmp9*tmp10*tmp11*tmp21;
double tmp426 = -8*tmp41*sO1*tmp3*tmp10*tmp11*tmp21;
double tmp427 = -4*tmp41*sO2*tmp7*tmp10*tmp11*tmp21;
double tmp428 = -4*tmp41*sO3*tmp22*tmp11*tmp21;
double tmp429 = 8*tmp62*sO3*tmp8*tmp2*tmp12*tmp21;
double tmp430 = 8*tmp40*Dt12*tmp62*sO3*tmp8*tmp2*tmp12*tmp21;
double tmp431 = 4*tmp41*sO2*tmp65*tmp12*tmp21;
double tmp432 = -8*tmp62*sO3*tmp5*tmp3*tmp12*tmp21;
double tmp433 = -8*tmp40*Dt12*tmp62*sO3*tmp5*tmp3*tmp12*tmp21;
double tmp434 = -4*tmp41*sO3*tmp2*tmp3*tmp12*tmp21;
double tmp435 = 8*tmp62*sO3*tmp6*tmp7*tmp12*tmp21;
double tmp436 = 8*tmp40*Dt12*tmp62*sO3*tmp6*tmp7*tmp12*tmp21;
double tmp437 = 8*tmp41*sO1*tmp3*tmp7*tmp12*tmp21;
double tmp438 = -8*tmp62*sO3*tmp9*tmp10*tmp12*tmp21;
double tmp439 = -8*tmp40*Dt12*tmp62*sO3*tmp9*tmp10*tmp12*tmp21;
double tmp440 = 8*tmp41*sO1*tmp2*tmp10*tmp12*tmp21;
double tmp441 = 4*tmp41*sO3*tmp7*tmp10*tmp12*tmp21;
double tmp442 = -4*tmp41*sO2*tmp22*tmp12*tmp21;
double tmp443 = 8*tmp62*sO2*tmp6*tmp2*tmp24;
double tmp444 = 8*tmp40*Dt12*tmp62*sO2*tmp6*tmp2*tmp24;
double tmp445 = -4*tmp41*sO1*tmp65*tmp24;
double tmp446 = 8*tmp62*sO2*tmp9*tmp3*tmp24;
double tmp447 = 8*tmp40*Dt12*tmp62*sO2*tmp9*tmp3*tmp24;
double tmp448 = -4*tmp41*sO1*tmp17*tmp24;
double tmp449 = -8*tmp62*sO2*tmp8*tmp7*tmp24;
double tmp450 = -8*tmp40*Dt12*tmp62*sO2*tmp8*tmp7*tmp24;
double tmp451 = -8*tmp62*sO2*tmp5*tmp10*tmp24;
double tmp452 = -8*tmp40*Dt12*tmp62*sO2*tmp5*tmp10*tmp24;
double tmp453 = 4*tmp41*sO2*tmp2*tmp10*tmp24;
double tmp454 = -4*tmp41*sO3*tmp3*tmp10*tmp24;
double tmp455 = -4*tmp62*sO2*tmp2*tmp32;
double tmp456 = -4*Dt01*tmp63*tmp62*sO2*tmp2*tmp32;
double tmp457 = 4*tmp62*sO3*tmp3*tmp32;
double tmp458 = 4*Dt01*tmp63*tmp62*sO3*tmp3*tmp32;
double tmp459 = -8*tmp62*sO3*tmp8*tmp2*tmp11*tmp32;
double tmp460 = -8*tmp40*Dt12*tmp62*sO3*tmp8*tmp2*tmp11*tmp32;
double tmp461 = 8*tmp62*sO3*tmp5*tmp3*tmp11*tmp32;
double tmp462 = 8*tmp40*Dt12*tmp62*sO3*tmp5*tmp3*tmp11*tmp32;
double tmp463 = -4*tmp41*sO3*tmp2*tmp3*tmp11*tmp32;
double tmp464 = -4*tmp41*sO2*tmp17*tmp11*tmp32;
double tmp465 = -8*tmp62*sO3*tmp6*tmp7*tmp11*tmp32;
double tmp466 = -8*tmp40*Dt12*tmp62*sO3*tmp6*tmp7*tmp11*tmp32;
double tmp467 = 8*tmp41*sO1*tmp3*tmp7*tmp11*tmp32;
double tmp468 = 4*tmp41*sO2*tmp13*tmp11*tmp32;
double tmp469 = 8*tmp62*sO3*tmp9*tmp10*tmp11*tmp32;
double tmp470 = 8*tmp40*Dt12*tmp62*sO3*tmp9*tmp10*tmp11*tmp32;
double tmp471 = 8*tmp41*sO1*tmp2*tmp10*tmp11*tmp32;
double tmp472 = 4*tmp41*sO3*tmp7*tmp10*tmp11*tmp32;
double tmp473 = -8*tmp62*sO2*tmp8*tmp2*tmp12*tmp32;
double tmp474 = -8*tmp40*Dt12*tmp62*sO2*tmp8*tmp2*tmp12*tmp32;
double tmp475 = 4*tmp41*sO3*tmp65*tmp12*tmp32;
double tmp476 = 8*tmp62*sO2*tmp5*tmp3*tmp12*tmp32;
double tmp477 = 8*tmp40*Dt12*tmp62*sO2*tmp5*tmp3*tmp12*tmp32;
double tmp478 = 4*tmp41*sO2*tmp2*tmp3*tmp12*tmp32;
double tmp479 = -8*tmp62*sO2*tmp6*tmp7*tmp12*tmp32;
double tmp480 = -8*tmp40*Dt12*tmp62*sO2*tmp6*tmp7*tmp12*tmp32;
double tmp481 = -8*tmp41*sO1*tmp2*tmp7*tmp12*tmp32;
double tmp482 = -4*tmp41*sO3*tmp13*tmp12*tmp32;
double tmp483 = 8*tmp62*sO2*tmp9*tmp10*tmp12*tmp32;
double tmp484 = 8*tmp40*Dt12*tmp62*sO2*tmp9*tmp10*tmp12*tmp32;
double tmp485 = 8*tmp41*sO1*tmp3*tmp10*tmp12*tmp32;
double tmp486 = 4*tmp41*sO2*tmp7*tmp10*tmp12*tmp32;
double tmp487 = -8*tmp62*sO2*tmp9*tmp2*tmp21*tmp32;
double tmp488 = -8*tmp40*Dt12*tmp62*sO2*tmp9*tmp2*tmp21*tmp32;
double tmp489 = 8*tmp62*sO3*tmp6*tmp2*tmp21*tmp32;
double tmp490 = 8*tmp40*Dt12*tmp62*sO3*tmp6*tmp2*tmp21*tmp32;
double tmp491 = 8*tmp62*sO3*tmp9*tmp3*tmp21*tmp32;
double tmp492 = 8*tmp40*Dt12*tmp62*sO3*tmp9*tmp3*tmp21*tmp32;
double tmp493 = 8*tmp62*sO2*tmp6*tmp3*tmp21*tmp32;
double tmp494 = 8*tmp40*Dt12*tmp62*sO2*tmp6*tmp3*tmp21*tmp32;
double tmp495 = 8*tmp62*sO2*tmp5*tmp7*tmp21*tmp32;
double tmp496 = 8*tmp40*Dt12*tmp62*sO2*tmp5*tmp7*tmp21*tmp32;
double tmp497 = -8*tmp62*sO3*tmp8*tmp7*tmp21*tmp32;
double tmp498 = -8*tmp40*Dt12*tmp62*sO3*tmp8*tmp7*tmp21*tmp32;
double tmp499 = -4*tmp41*sO2*tmp2*tmp7*tmp21*tmp32;
double tmp500 = 4*tmp41*sO3*tmp3*tmp7*tmp21*tmp32;
double tmp501 = -8*tmp62*sO3*tmp5*tmp10*tmp21*tmp32;
double tmp502 = -8*tmp40*Dt12*tmp62*sO3*tmp5*tmp10*tmp21*tmp32;
double tmp503 = -8*tmp62*sO2*tmp8*tmp10*tmp21*tmp32;
double tmp504 = -8*tmp40*Dt12*tmp62*sO2*tmp8*tmp10*tmp21*tmp32;
double tmp505 = 4*tmp41*sO3*tmp2*tmp10*tmp21*tmp32;
double tmp506 = 4*tmp41*sO2*tmp3*tmp10*tmp21*tmp32;
double tmp507 = -8*tmp62*sO3*tmp9*tmp2*tmp39;
double tmp508 = -8*tmp40*Dt12*tmp62*sO3*tmp9*tmp2*tmp39;
double tmp509 = -4*tmp41*sO1*tmp65*tmp39;
double tmp510 = 8*tmp62*sO3*tmp6*tmp3*tmp39;
double tmp511 = 8*tmp40*Dt12*tmp62*sO3*tmp6*tmp3*tmp39;
double tmp512 = -4*tmp41*sO1*tmp17*tmp39;
double tmp513 = 8*tmp62*sO3*tmp5*tmp7*tmp39;
double tmp514 = 8*tmp40*Dt12*tmp62*sO3*tmp5*tmp7*tmp39;
double tmp515 = -4*tmp41*sO3*tmp2*tmp7*tmp39;
double tmp516 = -4*tmp41*sO2*tmp3*tmp7*tmp39;
double tmp517 = -8*tmp62*sO3*tmp8*tmp10*tmp39;
double tmp518 = -8*tmp40*Dt12*tmp62*sO3*tmp8*tmp10*tmp39;
double tmp519 = tmp12*tmp21;
double tmp520 = tmp11*tmp32;
double tmp521 = tmp519 + tmp520;
double tmp522 = 2*tmp69*tmp521;
double tmp523 = Dt12*tmp27;
double tmp524 = tmp19 + tmp20;
double tmp525 = Dt01*tmp524;
double tmp526 = tmp523 + tmp525;
double tmp527 = tmp11*tmp21;
double tmp528 = -(tmp12*tmp32);
double tmp529 = tmp527 + tmp528;
double tmp530 = -2*tmp526*tmp529;
double tmp531 = 2*tmp24;
double tmp532 = 2*tmp39;
double tmp533 = -1 + tmp531 + tmp532;
double tmp534 = -(tmp73*tmp533);
double tmp535 = tmp522 + tmp530 + tmp534;
double tmp536 = 2*tmp40*tmp63*tmp42*tmp535;
double tmp537 = tmp343 + tmp344 + tmp345 + tmp346 + tmp347 + tmp348 + tmp349 + tmp350 + tmp351 + tmp352 + tmp353 + tmp354 + tmp355 + tmp356 + tmp357 + tmp358 + tmp359 + tmp360 + tmp361 + tmp362 + tmp363 + tmp364 + tmp365 + tmp366 + tmp367 + tmp368 + tmp369 + tmp370 + tmp371 + tmp372 + tmp373 + tmp374 + tmp375 + tmp376 + tmp377 + tmp378 + tmp379 + tmp380 + tmp381 + tmp382 + tmp383 + tmp384 + tmp385 + tmp386 + tmp387 + tmp388 + tmp389 + tmp390 + tmp391 + tmp392 + tmp393 + tmp394 + tmp395 + tmp396 + tmp397 + tmp398 + tmp399 + tmp400 + tmp401 + tmp402 + tmp403 + tmp404 + tmp405 + tmp406 + tmp407 + tmp408 + tmp409 + tmp410 + tmp411 + tmp412 + tmp413 + tmp414 + tmp415 + tmp416 + tmp417 + tmp418 + tmp419 + tmp420 + tmp421 + tmp422 + tmp423 + tmp424 + tmp425 + tmp426 + tmp427 + tmp428 + tmp429 + tmp430 + tmp431 + tmp432 + tmp433 + tmp434 + tmp435 + tmp436 + tmp437 + tmp438 + tmp439 + tmp440 + tmp441 + tmp442 + tmp443 + tmp444 + tmp445 + tmp446 + tmp447 + tmp448 + tmp449 + tmp450 + tmp451 + tmp452 + tmp453 + tmp454 + tmp455 + tmp456 + tmp457 + tmp458 + tmp459 + tmp460 + tmp461 + tmp462 + tmp463 + tmp464 + tmp465 + tmp466 + tmp467 + tmp468 + tmp469 + tmp470 + tmp471 + tmp472 + tmp473 + tmp474 + tmp475 + tmp476 + tmp477 + tmp478 + tmp479 + tmp480 + tmp481 + tmp482 + tmp483 + tmp484 + tmp485 + tmp486 + tmp487 + tmp488 + tmp489 + tmp490 + tmp491 + tmp492 + tmp493 + tmp494 + tmp495 + tmp496 + tmp497 + tmp498 + tmp499 + tmp500 + tmp501 + tmp502 + tmp503 + tmp504 + tmp505 + tmp506 + tmp507 + tmp508 + tmp509 + tmp510 + tmp511 + tmp512 + tmp513 + tmp514 + tmp515 + tmp516 + tmp517 + tmp518 + tmp536;
double tmp538 = 2*tmp43;
double tmp539 = qOS1*qOS3;
double tmp540 = qOS2*qOS3;
part(1+_OFF) = -4*tmp40*tmp41*tmp42*(tmp539 - qOS2*tmp50)*tmp207 - 4*tmp40*tmp41*tmp42*(tmp342 + qOS3*tmp50)*tmp341 + (1 - 2*tmp45 - 2*tmp47)*tmp537;
part(2+_OFF) = -4*tmp40*tmp41*tmp42*(tmp540 + qOS1*tmp50)*tmp207 + 2*tmp40*tmp41*tmp42*(-1 + tmp538 + 2*tmp47)*tmp341 + 2*(tmp342 - qOS3*tmp50)*tmp537;
part(3+_OFF) = 2*tmp40*tmp41*tmp42*(-1 + tmp538 + 2*tmp45)*tmp207 + 4*tmp40*tmp41*tmp42*(tmp539 + qOS2*tmp50)*(tmp0*tmp33 - Dt01*Dt12*tmp23 - tmp0*tmp23 + 2*tmp0*sO3*tmp9*tmp2 - 2*tmp0*sO2*tmp6*tmp2 - 2*tmp0*sO2*tmp9*tmp3 - 2*tmp0*sO3*tmp6*tmp3 - 2*tmp0*sO3*tmp5*tmp7 + 2*tmp0*sO2*tmp8*tmp7 + 2*tmp0*sO2*tmp5*tmp10 + 2*tmp0*sO3*tmp8*tmp10 + Dt01*Dt12*tmp35 - 2*Dt01*Dt12*sO3*tmp7*tmp11 + 2*Dt01*Dt12*sO2*tmp10*tmp11 + 2*tmp25*sO2*tmp3*tmp7*tmp64 + 2*Dt01*Dt12*sO2*tmp3*tmp7*tmp64 - 2*tmp25*sO1*tmp13*tmp64 - 2*Dt01*Dt12*sO1*tmp13*tmp64 + 2*tmp25*sO3*tmp3*tmp10*tmp64 + 2*Dt01*Dt12*sO3*tmp3*tmp10*tmp64 - 2*tmp25*sO1*tmp22*tmp64 - 2*Dt01*Dt12*sO1*tmp22*tmp64 - 2*Dt01*Dt12*sO2*tmp7*tmp12 - 2*Dt01*Dt12*sO3*tmp10*tmp12 + 4*tmp0*sO2*tmp9*tmp2*tmp11*tmp12 + 4*tmp0*sO3*tmp6*tmp2*tmp11*tmp12 + 4*tmp0*sO3*tmp9*tmp3*tmp11*tmp12 - 4*tmp0*sO2*tmp6*tmp3*tmp11*tmp12 - 4*tmp0*sO2*tmp5*tmp7*tmp11*tmp12 - 4*tmp0*sO3*tmp8*tmp7*tmp11*tmp12 - 2*tmp25*sO2*tmp2*tmp7*tmp11*tmp12 - 2*Dt01*Dt12*sO2*tmp2*tmp7*tmp11*tmp12 - 2*tmp25*sO3*tmp3*tmp7*tmp11*tmp12 - 2*Dt01*Dt12*sO3*tmp3*tmp7*tmp11*tmp12 - 4*tmp0*sO3*tmp5*tmp10*tmp11*tmp12 + 4*tmp0*sO2*tmp8*tmp10*tmp11*tmp12 - 2*tmp25*sO3*tmp2*tmp10*tmp11*tmp12 - 2*Dt01*Dt12*sO3*tmp2*tmp10*tmp11*tmp12 + 2*tmp25*sO2*tmp3*tmp10*tmp11*tmp12 + 2*Dt01*Dt12*sO2*tmp3*tmp10*tmp11*tmp12 - 4*tmp0*sO3*tmp9*tmp2*tmp16 + 4*tmp0*sO2*tmp6*tmp2*tmp16 + 4*tmp0*sO2*tmp9*tmp3*tmp16 + 4*tmp0*sO3*tmp6*tmp3*tmp16 + 4*tmp0*sO3*tmp5*tmp7*tmp16 - 4*tmp0*sO2*tmp8*tmp7*tmp16 + 2*tmp25*sO3*tmp2*tmp7*tmp16 + 2*Dt01*Dt12*sO3*tmp2*tmp7*tmp16 - 2*tmp25*sO1*tmp13*tmp16 - 2*Dt01*Dt12*sO1*tmp13*tmp16 - 4*tmp0*sO2*tmp5*tmp10*tmp16 - 4*tmp0*sO3*tmp8*tmp10*tmp16 - 2*tmp25*sO2*tmp2*tmp10*tmp16 - 2*Dt01*Dt12*sO2*tmp2*tmp10*tmp16 - 2*tmp25*sO1*tmp22*tmp16 - 2*Dt01*Dt12*sO1*tmp22*tmp16 + 2*Dt01*Dt12*sO3*tmp2*tmp21 + 2*Dt01*Dt12*sO2*tmp3*tmp21 - 2*tmp0*tmp18*tmp11*tmp21 + 2*Dt01*Dt12*tmp1*tmp11*tmp21 + 2*tmp0*tmp1*tmp11*tmp21 - 4*tmp0*sO2*tmp8*tmp2*tmp11*tmp21 + 4*tmp0*sO2*tmp5*tmp3*tmp11*tmp21 - 2*tmp25*sO2*tmp2*tmp3*tmp11*tmp21 - 2*Dt01*Dt12*sO2*tmp2*tmp3*tmp11*tmp21 + 2*tmp25*sO3*tmp17*tmp11*tmp21 + 2*Dt01*Dt12*sO3*tmp17*tmp11*tmp21 - 4*tmp0*sO2*tmp6*tmp7*tmp11*tmp21 + 4*tmp25*sO1*tmp2*tmp7*tmp11*tmp21 + 4*Dt01*Dt12*sO1*tmp2*tmp7*tmp11*tmp21 + 4*tmp0*sO2*tmp9*tmp10*tmp11*tmp21 - 4*tmp25*sO1*tmp3*tmp10*tmp11*tmp21 - 4*Dt01*Dt12*sO1*tmp3*tmp10*tmp11*tmp21 - 2*tmp25*sO2*tmp7*tmp10*tmp11*tmp21 - 2*Dt01*Dt12*sO2*tmp7*tmp10*tmp11*tmp21 - 2*tmp25*sO3*tmp22*tmp11*tmp21 - 2*Dt01*Dt12*sO3*tmp22*tmp11*tmp21 - 2*Dt01*Dt12*tmp20*tmp11*tmp21 + 2*tmp0*tmp36*tmp12*tmp21 - 2*Dt01*Dt12*tmp14*tmp12*tmp21 - 2*tmp0*tmp14*tmp12*tmp21 + 4*tmp0*sO3*tmp8*tmp2*tmp12*tmp21 + 2*tmp25*sO2*tmp65*tmp12*tmp21 + 2*Dt01*Dt12*sO2*tmp65*tmp12*tmp21 - 4*tmp0*sO3*tmp5*tmp3*tmp12*tmp21 - 2*tmp25*sO3*tmp2*tmp3*tmp12*tmp21 - 2*Dt01*Dt12*sO3*tmp2*tmp3*tmp12*tmp21 + 4*tmp0*sO3*tmp6*tmp7*tmp12*tmp21 + 4*tmp25*sO1*tmp3*tmp7*tmp12*tmp21 + 4*Dt01*Dt12*sO1*tmp3*tmp7*tmp12*tmp21 - 4*tmp0*sO3*tmp9*tmp10*tmp12*tmp21 + 4*tmp25*sO1*tmp2*tmp10*tmp12*tmp21 + 4*Dt01*Dt12*sO1*tmp2*tmp10*tmp12*tmp21 + 2*tmp25*sO3*tmp7*tmp10*tmp12*tmp21 + 2*Dt01*Dt12*sO3*tmp7*tmp10*tmp12*tmp21 - 2*tmp25*sO2*tmp22*tmp12*tmp21 - 2*Dt01*Dt12*sO2*tmp22*tmp12*tmp21 + 2*Dt01*Dt12*tmp38*tmp12*tmp21 - 2*tmp0*tmp33*tmp24 + 2*Dt01*Dt12*tmp23*tmp24 + 2*tmp0*tmp23*tmp24 + 4*tmp0*sO2*tmp6*tmp2*tmp24 - 2*tmp25*sO1*tmp65*tmp24 - 2*Dt01*Dt12*sO1*tmp65*tmp24 + 4*tmp0*sO2*tmp9*tmp3*tmp24 - 2*tmp25*sO1*tmp17*tmp24 - 2*Dt01*Dt12*sO1*tmp17*tmp24 - 4*tmp0*sO2*tmp8*tmp7*tmp24 - 4*tmp0*sO2*tmp5*tmp10*tmp24 + 2*tmp25*sO2*tmp2*tmp10*tmp24 + 2*Dt01*Dt12*sO2*tmp2*tmp10*tmp24 - 2*tmp25*sO3*tmp3*tmp10*tmp24 - 2*Dt01*Dt12*sO3*tmp3*tmp10*tmp24 - 2*Dt01*Dt12*tmp35*tmp24 - 2*Dt01*Dt12*sO2*tmp2*tmp32 + 2*Dt01*Dt12*sO3*tmp3*tmp32 + 2*tmp0*tmp36*tmp11*tmp32 - 2*Dt01*Dt12*tmp14*tmp11*tmp32 - 2*tmp0*tmp14*tmp11*tmp32 - 4*tmp0*sO3*tmp8*tmp2*tmp11*tmp32 + 4*tmp0*sO3*tmp5*tmp3*tmp11*tmp32 - 2*tmp25*sO3*tmp2*tmp3*tmp11*tmp32 - 2*Dt01*Dt12*sO3*tmp2*tmp3*tmp11*tmp32 - 2*tmp25*sO2*tmp17*tmp11*tmp32 - 2*Dt01*Dt12*sO2*tmp17*tmp11*tmp32 - 4*tmp0*sO3*tmp6*tmp7*tmp11*tmp32 + 4*tmp25*sO1*tmp3*tmp7*tmp11*tmp32 + 4*Dt01*Dt12*sO1*tmp3*tmp7*tmp11*tmp32 + 2*tmp25*sO2*tmp13*tmp11*tmp32 + 2*Dt01*Dt12*sO2*tmp13*tmp11*tmp32 + 4*tmp0*sO3*tmp9*tmp10*tmp11*tmp32 + 4*tmp25*sO1*tmp2*tmp10*tmp11*tmp32 + 4*Dt01*Dt12*sO1*tmp2*tmp10*tmp11*tmp32 + 2*tmp25*sO3*tmp7*tmp10*tmp11*tmp32 + 2*Dt01*Dt12*sO3*tmp7*tmp10*tmp11*tmp32 + 2*Dt01*Dt12*tmp38*tmp11*tmp32 + 2*tmp0*tmp18*tmp12*tmp32 - 2*Dt01*Dt12*tmp1*tmp12*tmp32 - 2*tmp0*tmp1*tmp12*tmp32 - 4*tmp0*sO2*tmp8*tmp2*tmp12*tmp32 + 2*tmp25*sO3*tmp65*tmp12*tmp32 + 2*Dt01*Dt12*sO3*tmp65*tmp12*tmp32 + 4*tmp0*sO2*tmp5*tmp3*tmp12*tmp32 + 2*tmp25*sO2*tmp2*tmp3*tmp12*tmp32 + 2*Dt01*Dt12*sO2*tmp2*tmp3*tmp12*tmp32 - 4*tmp0*sO2*tmp6*tmp7*tmp12*tmp32 - 4*tmp25*sO1*tmp2*tmp7*tmp12*tmp32 - 4*Dt01*Dt12*sO1*tmp2*tmp7*tmp12*tmp32 - 2*tmp25*sO3*tmp13*tmp12*tmp32 - 2*Dt01*Dt12*sO3*tmp13*tmp12*tmp32 + 4*tmp0*sO2*tmp9*tmp10*tmp12*tmp32 + 4*tmp25*sO1*tmp3*tmp10*tmp12*tmp32 + 4*Dt01*Dt12*sO1*tmp3*tmp10*tmp12*tmp32 + 2*tmp25*sO2*tmp7*tmp10*tmp12*tmp32 + 2*Dt01*Dt12*sO2*tmp7*tmp10*tmp12*tmp32 + 2*Dt01*Dt12*tmp20*tmp12*tmp32 - 4*tmp0*sO2*tmp9*tmp2*tmp21*tmp32 + 4*tmp0*sO3*tmp6*tmp2*tmp21*tmp32 + 4*tmp0*sO3*tmp9*tmp3*tmp21*tmp32 + 4*tmp0*sO2*tmp6*tmp3*tmp21*tmp32 + 4*tmp0*sO2*tmp5*tmp7*tmp21*tmp32 - 4*tmp0*sO3*tmp8*tmp7*tmp21*tmp32 - 2*tmp25*sO2*tmp2*tmp7*tmp21*tmp32 - 2*Dt01*Dt12*sO2*tmp2*tmp7*tmp21*tmp32 + 2*tmp25*sO3*tmp3*tmp7*tmp21*tmp32 + 2*Dt01*Dt12*sO3*tmp3*tmp7*tmp21*tmp32 - 4*tmp0*sO3*tmp5*tmp10*tmp21*tmp32 - 4*tmp0*sO2*tmp8*tmp10*tmp21*tmp32 + 2*tmp25*sO3*tmp2*tmp10*tmp21*tmp32 + 2*Dt01*Dt12*sO3*tmp2*tmp10*tmp21*tmp32 + 2*tmp25*sO2*tmp3*tmp10*tmp21*tmp32 + 2*Dt01*Dt12*sO2*tmp3*tmp10*tmp21*tmp32 - 2*tmp0*tmp33*tmp39 + 2*Dt01*Dt12*tmp23*tmp39 + 2*tmp0*tmp23*tmp39 - 4*tmp0*sO3*tmp9*tmp2*tmp39 - 2*tmp25*sO1*tmp65*tmp39 - 2*Dt01*Dt12*sO1*tmp65*tmp39 + 4*tmp0*sO3*tmp6*tmp3*tmp39 - 2*tmp25*sO1*tmp17*tmp39 - 2*Dt01*Dt12*sO1*tmp17*tmp39 + 4*tmp0*sO3*tmp5*tmp7*tmp39 - 2*tmp25*sO3*tmp2*tmp7*tmp39 - 2*Dt01*Dt12*sO3*tmp2*tmp7*tmp39 - 2*tmp25*sO2*tmp3*tmp7*tmp39 - 2*Dt01*Dt12*sO2*tmp3*tmp7*tmp39 - 4*tmp0*sO3*tmp8*tmp10*tmp39 - 2*Dt01*Dt12*tmp35*tmp39) - 4*tmp40*tmp41*tmp42*(tmp540 - qOS1*tmp50)*tmp341;
