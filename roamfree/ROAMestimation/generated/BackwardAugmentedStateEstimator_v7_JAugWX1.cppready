double tmp0 = x1(6+_OFF);
double tmp1 = -0.01*tmp0;
double tmp2 = 0. + tmp1;
double tmp3 = x2(4+_OFF);
double tmp4 = qos(2+_OFF);
double tmp5 = qos(3+_OFF);
double tmp6 = qos(1+_OFF);
double tmp7 = qos(4+_OFF);
double tmp8 = x1(7+_OFF);
double tmp9 = 0.01*tmp8;
double tmp10 = 0. + tmp9;
double tmp11 = x1(5+_OFF);
double tmp12 = -0.01*tmp11;
double tmp13 = 0. + tmp12;
double tmp14 = x2(5+_OFF);
double tmp15 = x2(6+_OFF);
double tmp16 = std::pow(tmp5,2);
double tmp17 = std::pow(tmp7,2);
double tmp18 = x2(7+_OFF);
double tmp19 = 1/Dt12;
double tmp20 = x1(4+_OFF);
double tmp21 = 0.01*tmp20;
double tmp22 = 0. + tmp21;
double tmp23 = 0.01*tmp11;
double tmp24 = 0. + tmp23;
double tmp25 = 2*tmp16;
double tmp26 = 2*tmp17;
double tmp27 = -1 + tmp25 + tmp26;
double tmp28 = tmp27*tmp3;
double tmp29 = -(tmp7*tmp15);
double tmp30 = tmp5*tmp18;
double tmp31 = tmp29 + tmp30;
double tmp32 = 2*tmp4*tmp31;
double tmp33 = tmp5*tmp15;
double tmp34 = tmp7*tmp18;
double tmp35 = tmp33 + tmp34;
double tmp36 = 2*tmp6*tmp35;
double tmp37 = tmp28 + tmp32 + tmp36;
double tmp38 = -0.01*tmp8;
double tmp39 = 0. + tmp38;
double tmp40 = -2*tmp6*tmp7*tmp22*tmp3;
double tmp41 = tmp2*tmp14;
double tmp42 = -2*tmp17*tmp2*tmp14;
double tmp43 = 2*tmp6*tmp7*tmp2*tmp15;
double tmp44 = -(tmp22*tmp18);
double tmp45 = 2*tmp17*tmp22*tmp18;
double tmp46 = tmp10*tmp3;
double tmp47 = -(tmp13*tmp15);
double tmp48 = tmp22*tmp15;
double tmp49 = -(tmp13*tmp18);
double tmp50 = tmp22*tmp3;
double tmp51 = -(tmp2*tmp15);
double tmp52 = std::pow(tmp4,2);
double tmp53 = tmp24*tmp14;
double tmp54 = -(tmp39*tmp18);
double tmp55 = 0.01*tmp0;
double tmp56 = 0. + tmp55;
double tmp57 = tmp13*tmp3;
double tmp58 = tmp22*tmp14;
double tmp59 = -(tmp39*tmp15);
double tmp60 = -(tmp56*tmp18);
double tmp61 = -(tmp13*tmp14);
double tmp62 = -(tmp22*tmp15);
double tmp63 = tmp13*tmp18;
double tmp64 = tmp2*tmp3;
double tmp65 = -(tmp10*tmp14);
double tmp66 = tmp64 + tmp65 + tmp48 + tmp49;
double tmp67 = tmp10*tmp18;
double tmp68 = tmp50 + tmp61 + tmp51 + tmp67;
double tmp69 = -(tmp2*tmp14);
double tmp70 = tmp22*tmp18;
double tmp71 = tmp5*tmp68;
double tmp72 = tmp39*tmp3;
double tmp73 = -(tmp24*tmp15);
double tmp74 = tmp72 + tmp69 + tmp73 + tmp70;
double tmp75 = tmp24*tmp3;
double tmp76 = -(tmp22*tmp14);
double tmp77 = tmp39*tmp15;
double tmp78 = -(tmp2*tmp18);
double tmp79 = tmp75 + tmp76 + tmp77 + tmp78;
double tmp80 = tmp5*tmp74;
double tmp81 = tmp2*tmp15;
double tmp82 = -(tmp22*tmp3);
double tmp83 = -2*tmp5*tmp7*tmp22*tmp14;
double tmp84 = tmp13*tmp14;
double tmp85 = -2*tmp16*tmp13*tmp14;
double tmp86 = 2*tmp5*tmp7*tmp39*tmp15;
double tmp87 = tmp39*tmp18;
double tmp88 = tmp56*tmp3;
double tmp89 = -(tmp39*tmp14);
double tmp90 = tmp88 + tmp89 + tmp62 + tmp63;
double tmp91 = tmp56*tmp15;
double tmp92 = tmp50 + tmp61 + tmp91 + tmp54;
double tmp93 = tmp5*tmp90;
J(1+_OFF,4+_OFF) = 2*tmp19*(2*tmp6*tmp5*tmp2*tmp3 - 2*tmp4*tmp7*tmp2*tmp3 - 2*tmp4*tmp5*tmp10*tmp3 - 2*tmp6*tmp7*tmp10*tmp3 + tmp84 + tmp85 - 2*tmp17*tmp13*tmp14 - 2*tmp4*tmp5*tmp2*tmp14 - 2*tmp6*tmp7*tmp2*tmp14 - 2*tmp6*tmp5*tmp10*tmp14 + 2*tmp4*tmp7*tmp10*tmp14 + 2*tmp4*tmp5*tmp13*tmp15 + 2*tmp6*tmp7*tmp13*tmp15 + tmp81 - 2*tmp16*tmp2*tmp15 - 2*tmp17*tmp2*tmp15 - 2*tmp6*tmp5*tmp13*tmp18 + 2*tmp4*tmp7*tmp13*tmp18 - tmp10*tmp18 + 2*tmp16*tmp10*tmp18 + 2*tmp17*tmp10*tmp18 + tmp22*tmp37);
J(1+_OFF,5+_OFF) = 2*tmp19*(-2*tmp4*tmp5*tmp22*tmp3 + tmp40 + 2*tmp6*tmp5*tmp24*tmp3 - 2*tmp4*tmp7*tmp24*tmp3 - 2*tmp6*tmp5*tmp22*tmp14 + 2*tmp4*tmp7*tmp22*tmp14 - 2*tmp4*tmp5*tmp24*tmp14 - 2*tmp6*tmp7*tmp24*tmp14 + tmp41 - 2*tmp16*tmp2*tmp14 + tmp42 + tmp24*tmp15 - 2*tmp16*tmp24*tmp15 - 2*tmp17*tmp24*tmp15 + 2*tmp4*tmp5*tmp2*tmp15 + tmp43 + tmp44 + 2*tmp16*tmp22*tmp18 + tmp45 - 2*tmp6*tmp5*tmp2*tmp18 + 2*tmp4*tmp7*tmp2*tmp18 + tmp39*tmp37);
J(1+_OFF,6+_OFF) = 2*tmp19*(2*tmp6*tmp5*tmp22*tmp3 - 2*tmp4*tmp7*tmp22*tmp3 - 2*tmp4*tmp5*tmp13*tmp3 - 2*tmp6*tmp7*tmp13*tmp3 - 2*tmp4*tmp5*tmp22*tmp14 - 2*tmp6*tmp7*tmp22*tmp14 - 2*tmp6*tmp5*tmp13*tmp14 + 2*tmp4*tmp7*tmp13*tmp14 + tmp39*tmp14 - 2*tmp16*tmp39*tmp14 - 2*tmp17*tmp39*tmp14 + tmp48 - 2*tmp16*tmp22*tmp15 - 2*tmp17*tmp22*tmp15 + 2*tmp4*tmp5*tmp39*tmp15 + 2*tmp6*tmp7*tmp39*tmp15 + tmp49 + 2*tmp16*tmp13*tmp18 + 2*tmp17*tmp13*tmp18 - 2*tmp6*tmp5*tmp39*tmp18 + 2*tmp4*tmp7*tmp39*tmp18 + tmp56*tmp37);
J(2+_OFF,4+_OFF) = -2*tmp19*(tmp40 + 2*tmp5*tmp7*tmp2*tmp3 + tmp46 - 2*tmp17*tmp10*tmp3 + 2*tmp6*tmp7*tmp13*tmp14 + tmp41 + tmp42 - 2*tmp5*tmp7*tmp10*tmp14 + 2*tmp5*tmp7*tmp22*tmp15 + tmp47 + 2*tmp17*tmp13*tmp15 + tmp43 + tmp44 + tmp45 - 2*tmp5*tmp7*tmp13*tmp18 - 2*tmp6*tmp7*tmp10*tmp18 - 2*tmp52*(tmp46 + tmp41 + tmp47 + tmp44) + 2*tmp4*(tmp6*tmp66 + tmp71));
J(2+_OFF,5+_OFF) = -2*tmp19*(tmp50 - 2*tmp17*tmp22*tmp3 + 2*tmp5*tmp7*tmp24*tmp3 - 2*tmp6*tmp7*tmp39*tmp3 + tmp83 + tmp53 - 2*tmp17*tmp24*tmp14 + 2*tmp6*tmp7*tmp2*tmp14 + 2*tmp6*tmp7*tmp24*tmp15 + tmp51 + 2*tmp17*tmp2*tmp15 + tmp86 - 2*tmp6*tmp7*tmp22*tmp18 - 2*tmp5*tmp7*tmp2*tmp18 + tmp54 + 2*tmp17*tmp39*tmp18 - 2*tmp52*(tmp50 + tmp53 + tmp51 + tmp54) + 2*tmp4*(tmp80 + tmp6*tmp79));
J(2+_OFF,6+_OFF) = -2*tmp19*(2*tmp5*tmp7*tmp22*tmp3 + tmp57 - 2*tmp17*tmp13*tmp3 - 2*tmp6*tmp7*tmp56*tmp3 + tmp58 - 2*tmp17*tmp22*tmp14 - 2*tmp5*tmp7*tmp13*tmp14 + 2*tmp6*tmp7*tmp39*tmp14 + 2*tmp6*tmp7*tmp22*tmp15 + 2*tmp5*tmp7*tmp56*tmp15 + tmp59 + 2*tmp17*tmp39*tmp15 - 2*tmp6*tmp7*tmp13*tmp18 + tmp60 + 2*tmp17*tmp56*tmp18 - 2*tmp5*tmp7*tmp39*tmp18 - 2*tmp52*(tmp57 + tmp58 + tmp59 + tmp60) + 2*tmp4*(tmp93 + tmp6*tmp92));
J(3+_OFF,4+_OFF) = 2*tmp19*(-(tmp2*tmp3) + 2*tmp16*tmp2*tmp3 - 2*tmp5*tmp7*tmp10*tmp3 - 2*tmp5*tmp7*tmp2*tmp14 + tmp10*tmp14 - 2*tmp16*tmp10*tmp14 + tmp62 + 2*tmp16*tmp22*tmp15 + 2*tmp5*tmp7*tmp13*tmp15 + 2*tmp5*tmp7*tmp22*tmp18 + tmp63 - 2*tmp16*tmp13*tmp18 + 2*tmp52*tmp66 - 2*tmp4*tmp7*tmp68 - 2*tmp6*(tmp4*(-(tmp10*tmp3) + tmp69 + tmp13*tmp15 + tmp70) + tmp71));
J(3+_OFF,5+_OFF) = 2*tmp19*(-2*tmp5*tmp7*tmp22*tmp3 - tmp24*tmp3 + 2*tmp16*tmp24*tmp3 + tmp58 - 2*tmp16*tmp22*tmp14 - 2*tmp5*tmp7*tmp24*tmp14 + 2*tmp5*tmp7*tmp2*tmp15 + tmp59 + 2*tmp16*tmp39*tmp15 + tmp2*tmp18 - 2*tmp16*tmp2*tmp18 + 2*tmp5*tmp7*tmp39*tmp18 - 2*tmp4*tmp7*tmp74 + 2*tmp52*tmp79 - 2*tmp6*(tmp80 + tmp4*(tmp82 - tmp24*tmp14 + tmp81 + tmp87)));
J(3+_OFF,6+_OFF) = 2*tmp19*(tmp82 + 2*tmp16*tmp22*tmp3 - 2*tmp5*tmp7*tmp13*tmp3 + tmp83 + tmp84 + tmp85 - tmp56*tmp15 + 2*tmp16*tmp56*tmp15 + tmp86 + 2*tmp5*tmp7*tmp56*tmp18 + tmp87 - 2*tmp16*tmp39*tmp18 - 2*tmp4*tmp7*tmp90 + 2*tmp52*tmp92 - 2*tmp6*(tmp93 + tmp4*(-(tmp13*tmp3) + tmp76 + tmp77 + tmp56*tmp18)));
