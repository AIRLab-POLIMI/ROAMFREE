double tmp0 = x1(6+_OFF);
double tmp1 = x2(4+_OFF);
double tmp2 = 0.01*tmp1;
double tmp3 = 0. + tmp2;
double tmp4 = x1(7+_OFF);
double tmp5 = x2(5+_OFF);
double tmp6 = x1(4+_OFF);
double tmp7 = x2(6+_OFF);
double tmp8 = -0.01*tmp7;
double tmp9 = 0. + tmp8;
double tmp10 = x1(5+_OFF);
double tmp11 = x2(7+_OFF);
double tmp12 = -0.01*tmp5;
double tmp13 = 0. + tmp12;
double tmp14 = -0.01*tmp11;
double tmp15 = 0. + tmp14;
double tmp16 = std::pow(qOS1,2);
double tmp17 = -tmp16;
double tmp18 = std::pow(qOS2,2);
double tmp19 = -tmp18;
double tmp20 = std::pow(qOS3,2);
double tmp21 = -tmp20;
double tmp22 = 1 + tmp17 + tmp19 + tmp21;
double tmp23 = std::sqrt(tmp22);
double tmp24 = 0.01*tmp11;
double tmp25 = 0. + tmp24;
double tmp26 = qOS1*tmp6;
double tmp27 = tmp23*tmp10;
double tmp28 = qOS3*tmp0;
double tmp29 = -(qOS2*tmp4);
double tmp30 = tmp26 + tmp27 + tmp28 + tmp29;
double tmp31 = qOS2*tmp3;
double tmp32 = 0.01*tmp5;
double tmp33 = 0. + tmp32;
double tmp34 = qOS2*tmp6;
double tmp35 = -(qOS3*tmp10);
double tmp36 = tmp23*tmp0;
double tmp37 = qOS1*tmp4;
double tmp38 = tmp34 + tmp35 + tmp36 + tmp37;
double tmp39 = qOS3*tmp9;
double tmp40 = qOS3*tmp6;
double tmp41 = qOS2*tmp10;
double tmp42 = -(qOS1*tmp0);
double tmp43 = tmp23*tmp4;
double tmp44 = tmp40 + tmp41 + tmp42 + tmp43;
double tmp45 = -(qOS2*tmp9);
double tmp46 = tmp23*tmp6;
double tmp47 = -(qOS1*tmp10);
double tmp48 = -(qOS2*tmp0);
double tmp49 = -(qOS3*tmp4);
double tmp50 = tmp46 + tmp47 + tmp48 + tmp49;
double tmp51 = qOS3*tmp3;
double tmp52 = qOS3*tmp13;
double tmp53 = 0.01*tmp7;
double tmp54 = 0. + tmp53;
double tmp55 = qOS1*tmp15;
double tmp56 = -(qOS1*tmp3);
double tmp57 = -(tmp23*tmp13);
double tmp58 = tmp23*tmp3;
double tmp59 = qOS3*tmp15;
double tmp60 = tmp0*tmp3;
double tmp61 = tmp6*tmp9;
double tmp62 = tmp4*tmp3;
double tmp63 = tmp0*tmp13;
double tmp64 = -(tmp10*tmp9);
double tmp65 = -(tmp6*tmp25);
double tmp66 = tmp62 + tmp63 + tmp64 + tmp65;
double tmp67 = tmp6*tmp3;
double tmp68 = -(tmp0*tmp9);
double tmp69 = -(tmp4*tmp3);
double tmp70 = tmp10*tmp9;
double tmp71 = tmp10*tmp3;
double tmp72 = tmp4*tmp9;
double tmp73 = -(qOS2*tmp3);
double tmp74 = tmp23*tmp9;
double tmp75 = tmp6*tmp15;
double tmp76 = -(tmp6*tmp3);
double tmp77 = tmp0*tmp9;
double tmp78 = -(tmp10*tmp33);
double tmp79 = tmp4*tmp15;
double tmp80 = tmp76 + tmp78 + tmp77 + tmp79;
double tmp81 = tmp6*tmp13;
double tmp82 = -(tmp0*tmp3);
double tmp83 = tmp4*tmp13;
double tmp84 = -(qOS2*tmp13);
double tmp85 = tmp23*tmp15;
double tmp86 = -(tmp4*tmp15);
double tmp87 = -(tmp4*tmp13);
double tmp88 = tmp10*tmp15;
double tmp89 = tmp10*tmp13;
double tmp90 = tmp0*tmp15;
double tmp91 = -(tmp10*tmp3);
double tmp92 = -(tmp6*tmp13);
double tmp93 = tmp4*tmp54;
double tmp94 = tmp91 + tmp92 + tmp93 + tmp90;
double tmp95 = -(tmp0*tmp15);
double tmp96 = -(tmp0*tmp13);
double tmp97 = tmp6*tmp25;
double tmp98 = -(tmp4*tmp25);
double tmp99 = tmp76 + tmp89 + tmp77 + tmp98;
double tmp100 = tmp23*tmp13;
double tmp101 = tmp4*tmp25;
double tmp102 = tmp67 + tmp68 + tmp101;
double tmp103 = -(tmp23*tmp102);
double tmp104 = -(tmp6*tmp9);
double tmp105 = tmp10*tmp25;
double tmp106 = tmp82 + tmp83 + tmp104 + tmp105;
double tmp107 = tmp6*tmp33;
double tmp108 = -(tmp4*tmp9);
double tmp109 = tmp0*tmp33;
double tmp110 = -(tmp6*tmp15);
double tmp111 = tmp69 + tmp109 + tmp70 + tmp110;
double tmp112 = tmp10*tmp33;
double tmp113 = -(tmp0*tmp33);
double tmp114 = tmp62 + tmp113 + tmp75;
double tmp115 = -(tmp23*tmp114);
double tmp116 = -(tmp6*tmp33);
double tmp117 = tmp71 + tmp116 + tmp72 + tmp95;
double tmp118 = tmp0*tmp54;
double tmp119 = -(tmp6*tmp54);
double tmp120 = tmp60 + tmp87 + tmp119 + tmp88;
double tmp121 = -(tmp4*tmp54);
double tmp122 = tmp6*tmp54;
double tmp123 = tmp82 + tmp83 + tmp122;
double tmp124 = -(tmp23*tmp123);
double tmp125 = -(tmp0*tmp54);
double tmp126 = tmp76 + tmp89 + tmp125 + tmp79;
J(1+_OFF,4+_OFF) = tmp71 + tmp81 + tmp72 + tmp0*tmp25;
J(1+_OFF,5+_OFF) = tmp60 + tmp4*tmp33 + tmp61 + tmp88;
J(1+_OFF,6+_OFF) = tmp62 + tmp63 + tmp10*tmp54 + tmp75;
J(2+_OFF,4+_OFF) = -(tmp38*(tmp31 + tmp52 + tmp74 - qOS1*tmp25)) + tmp30*(qOS1*tmp3 + tmp57 + tmp39 + qOS2*tmp25) + tmp50*(tmp58 + qOS1*tmp13 + tmp45 + qOS3*tmp25) - tmp44*(tmp51 + tmp84 - qOS1*tmp9 - tmp23*tmp25);
J(2+_OFF,5+_OFF) = tmp30*(tmp31 + qOS3*tmp33 - tmp23*tmp9 + tmp55) - tmp38*(tmp56 + tmp23*tmp33 + tmp39 + qOS2*tmp15) - tmp44*(-(tmp23*tmp3) - qOS1*tmp33 + tmp45 + tmp59) + tmp50*(tmp51 - qOS2*tmp33 + qOS1*tmp9 + tmp85);
J(2+_OFF,6+_OFF) = tmp50*(tmp73 + tmp52 + tmp23*tmp54 + tmp55) - tmp44*(tmp56 + tmp57 + qOS3*tmp54 - qOS2*tmp15) - tmp38*(tmp58 - qOS1*tmp13 + qOS2*tmp54 + tmp59) + tmp30*(tmp51 + qOS2*tmp13 + qOS1*tmp54 - tmp23*tmp15);
J(3+_OFF,4+_OFF) = tmp69 + tmp96 + tmp70 - 2*qOS1*(tmp23*tmp106 + qOS2*tmp99) + 2*qOS3*(qOS2*(tmp60 + tmp87 + tmp61) + tmp10*(tmp100 - qOS2*tmp25) + tmp103) + 2*tmp16*tmp66 + 2*tmp20*tmp66 + tmp97;
J(3+_OFF,5+_OFF) = tmp67 + tmp112 + tmp68 - 2*qOS1*(qOS2*tmp111 + tmp23*tmp117) + 2*qOS3*(tmp10*(tmp73 + tmp74) + tmp115 + qOS2*(tmp107 + tmp108 + tmp90)) + 2*tmp16*tmp80 + 2*tmp20*tmp80 + tmp86;
J(3+_OFF,6+_OFF) = tmp71 + tmp81 + tmp121 + 2*qOS3*(tmp124 + tmp10*(tmp84 + tmp85) + qOS2*(tmp67 + tmp118 + tmp86)) - 2*qOS1*(qOS2*tmp120 + tmp23*tmp126) + 2*tmp16*tmp94 + 2*tmp20*tmp94 + tmp95;
J(4+_OFF,4+_OFF) = tmp60 + tmp87 + tmp61 - 2*qOS1*(tmp23*(tmp69 + tmp96 + tmp70 + tmp97) + qOS3*tmp99) - 2*qOS2*(tmp10*(tmp100 - qOS3*tmp9) + qOS3*(tmp62 + tmp63 + tmp65) + tmp103) + 2*tmp16*tmp106 + 2*tmp18*tmp106 - tmp10*tmp25;
J(4+_OFF,5+_OFF) = tmp91 + tmp107 + tmp108 - 2*qOS1*(qOS3*tmp111 + tmp23*(tmp67 + tmp112 + tmp68 + tmp86)) - 2*qOS2*(tmp10*(-(qOS3*tmp33) + tmp74) + tmp115 + qOS3*(tmp76 + tmp77 + tmp79)) + 2*tmp16*tmp117 + 2*tmp18*tmp117 + tmp90;
J(4+_OFF,6+_OFF) = tmp67 - tmp10*tmp13 + tmp118 - 2*qOS1*(qOS3*tmp120 + tmp23*(tmp71 + tmp81 + tmp121 + tmp95)) - 2*qOS2*(tmp124 + tmp10*(-(qOS3*tmp3) + tmp85) + qOS3*(tmp92 + tmp93 + tmp90)) + 2*tmp16*tmp126 + 2*tmp18*tmp126 + tmp86;
