double tmp0 = x0(6+_OFF);
double tmp1 = x0(7+_OFF);
double tmp2 = x0(4+_OFF);
double tmp3 = x0(5+_OFF);
double tmp4 = x1(4+_OFF);
double tmp5 = x1(5+_OFF);
double tmp6 = -0.01*tmp5;
double tmp7 = 0. + tmp6;
double tmp8 = 0.01*tmp4;
double tmp9 = 0. + tmp8;
double tmp10 = x1(6+_OFF);
double tmp11 = x1(7+_OFF);
double tmp12 = 0.01*tmp11;
double tmp13 = 0. + tmp12;
double tmp14 = -0.01*tmp10;
double tmp15 = 0. + tmp14;
double tmp16 = 1.*tmp4;
double tmp17 = 0. + tmp16;
double tmp18 = 1.*tmp5;
double tmp19 = 0. + tmp18;
double tmp20 = 1.*tmp10;
double tmp21 = 0. + tmp20;
double tmp22 = 1.*tmp11;
double tmp23 = 0. + tmp22;
double tmp24 = x2(4+_OFF);
double tmp25 = x2(5+_OFF);
double tmp26 = x2(6+_OFF);
double tmp27 = x2(7+_OFF);
double tmp28 = 1/Dt12;
double tmp29 = std::pow(tmp17,2);
double tmp30 = std::pow(tmp19,2);
double tmp31 = std::pow(tmp21,2);
double tmp32 = std::pow(tmp23,2);
double tmp33 = tmp29 + tmp30 + tmp31 + tmp32;
double tmp34 = Dt01 + Dt12;
double tmp35 = 1/tmp34;
double tmp36 = 1/Dt01;
double tmp37 = std::pow(tmp2,2);
double tmp38 = std::pow(tmp3,2);
double tmp39 = std::pow(tmp0,2);
double tmp40 = std::pow(tmp1,2);
double tmp41 = tmp37 + tmp38 + tmp39 + tmp40;
double tmp42 = 1/tmp41;
double tmp43 = 1/tmp33;
double tmp44 = 2*tmp17*tmp7;
double tmp45 = 2*tmp9*tmp19;
double tmp46 = 2*tmp21*tmp13;
double tmp47 = 2*tmp15*tmp23;
double tmp48 = tmp44 + tmp45 + tmp46 + tmp47;
double tmp49 = std::pow(tmp33,-2);
double tmp50 = qos(1+_OFF);
double tmp51 = qos(3+_OFF);
double tmp52 = qos(2+_OFF);
double tmp53 = qos(4+_OFF);
double tmp54 = std::pow(tmp24,2);
double tmp55 = std::pow(tmp25,2);
double tmp56 = -tmp55;
double tmp57 = std::pow(tmp26,2);
double tmp58 = std::pow(tmp27,2);
double tmp59 = tmp0*tmp9;
double tmp60 = tmp1*tmp7;
double tmp61 = -(tmp2*tmp15);
double tmp62 = -(tmp3*tmp13);
double tmp63 = tmp59 + tmp60 + tmp61 + tmp62;
double tmp64 = 2*tmp36*tmp42*tmp63;
double tmp65 = -(tmp23*tmp24);
double tmp66 = -(tmp21*tmp25);
double tmp67 = tmp19*tmp26;
double tmp68 = tmp17*tmp27;
double tmp69 = tmp65 + tmp66 + tmp67 + tmp68;
double tmp70 = -2*tmp28*tmp48*tmp49*tmp69;
double tmp71 = -(tmp15*tmp24);
double tmp72 = -(tmp13*tmp25);
double tmp73 = tmp9*tmp26;
double tmp74 = tmp7*tmp27;
double tmp75 = tmp71 + tmp72 + tmp73 + tmp74;
double tmp76 = 2*tmp28*tmp43*tmp75;
double tmp77 = tmp64 + tmp70 + tmp76;
double tmp78 = tmp26*tmp27;
double tmp79 = -(tmp1*tmp9);
double tmp80 = tmp0*tmp7;
double tmp81 = tmp3*tmp15;
double tmp82 = -(tmp2*tmp13);
double tmp83 = tmp79 + tmp80 + tmp81 + tmp82;
double tmp84 = 2*tmp36*tmp42*tmp83;
double tmp85 = -(tmp13*tmp24);
double tmp86 = tmp15*tmp25;
double tmp87 = tmp7*tmp26;
double tmp88 = -(tmp9*tmp27);
double tmp89 = tmp85 + tmp86 + tmp87 + tmp88;
double tmp90 = 2*tmp28*tmp43*tmp89;
double tmp91 = -(tmp21*tmp24);
double tmp92 = tmp23*tmp25;
double tmp93 = tmp17*tmp26;
double tmp94 = -(tmp19*tmp27);
double tmp95 = tmp91 + tmp92 + tmp93 + tmp94;
double tmp96 = -2*tmp28*tmp48*tmp49*tmp95;
double tmp97 = tmp84 + tmp90 + tmp96;
double tmp98 = -(tmp2*tmp9);
double tmp99 = tmp3*tmp7;
double tmp100 = -(tmp0*tmp15);
double tmp101 = tmp1*tmp13;
double tmp102 = tmp98 + tmp99 + tmp100 + tmp101;
double tmp103 = 2*tmp36*tmp42*tmp102;
double tmp104 = -(tmp19*tmp24);
double tmp105 = tmp17*tmp25;
double tmp106 = -(tmp23*tmp26);
double tmp107 = tmp21*tmp27;
double tmp108 = tmp104 + tmp105 + tmp106 + tmp107;
double tmp109 = -2*tmp28*tmp48*tmp49*tmp108;
double tmp110 = -(tmp9*tmp24);
double tmp111 = tmp7*tmp25;
double tmp112 = -(tmp15*tmp26);
double tmp113 = tmp13*tmp27;
double tmp114 = tmp110 + tmp111 + tmp112 + tmp113;
double tmp115 = 2*tmp28*tmp43*tmp114;
double tmp116 = tmp103 + tmp109 + tmp115;
double tmp117 = tmp25*tmp27;
double tmp118 = tmp25*tmp26;
double tmp119 = -tmp57;
double tmp120 = -tmp58;
double tmp121 = std::pow(tmp50,2);
double tmp122 = std::pow(tmp52,2);
double tmp123 = std::pow(tmp51,2);
double tmp124 = -tmp123;
double tmp125 = std::pow(tmp53,2);
double tmp126 = -tmp125;
double tmp127 = tmp121 + tmp122 + tmp124 + tmp126;
double tmp128 = -(tmp24*tmp26);
double tmp129 = tmp128 + tmp117;
double tmp130 = -0.01*tmp11;
double tmp131 = 0. + tmp130;
double tmp132 = 0.01*tmp5;
double tmp133 = 0. + tmp132;
double tmp134 = tmp54 + tmp55 + tmp119 + tmp120;
double tmp135 = 2*tmp17*tmp15;
double tmp136 = 2*tmp9*tmp21;
double tmp137 = 2*tmp19*tmp131;
double tmp138 = 2*tmp133*tmp23;
double tmp139 = tmp135 + tmp136 + tmp137 + tmp138;
double tmp140 = tmp24*tmp27;
double tmp141 = tmp118 + tmp140;
double tmp142 = -(tmp50*tmp51);
double tmp143 = tmp52*tmp53;
double tmp144 = tmp142 + tmp143;
double tmp145 = tmp54 + tmp56 + tmp119 + tmp58;
double tmp146 = -(tmp3*tmp9);
double tmp147 = -(tmp2*tmp133);
double tmp148 = tmp1*tmp15;
double tmp149 = tmp0*tmp131;
double tmp150 = tmp146 + tmp147 + tmp148 + tmp149;
double tmp151 = 2*tmp36*tmp42*tmp150;
double tmp152 = -2*tmp28*tmp139*tmp49*tmp69;
double tmp153 = -(tmp133*tmp24);
double tmp154 = -(tmp9*tmp25);
double tmp155 = tmp131*tmp26;
double tmp156 = tmp15*tmp27;
double tmp157 = tmp153 + tmp154 + tmp155 + tmp156;
double tmp158 = 2*tmp28*tmp43*tmp157;
double tmp159 = tmp151 + tmp152 + tmp158;
double tmp160 = tmp24*tmp26;
double tmp161 = tmp160 + tmp117;
double tmp162 = tmp1*tmp9;
double tmp163 = -(tmp0*tmp133);
double tmp164 = -(tmp2*tmp131);
double tmp165 = tmp162 + tmp163 + tmp81 + tmp164;
double tmp166 = 2*tmp36*tmp42*tmp165;
double tmp167 = -(tmp131*tmp24);
double tmp168 = -(tmp133*tmp26);
double tmp169 = tmp9*tmp27;
double tmp170 = tmp167 + tmp86 + tmp168 + tmp169;
double tmp171 = 2*tmp28*tmp43*tmp170;
double tmp172 = -2*tmp28*tmp139*tmp49*tmp108;
double tmp173 = tmp166 + tmp171 + tmp172;
double tmp174 = -(tmp24*tmp25);
double tmp175 = tmp174 + tmp78;
double tmp176 = tmp3*tmp133;
double tmp177 = tmp0*tmp15;
double tmp178 = -(tmp1*tmp131);
double tmp179 = tmp98 + tmp176 + tmp177 + tmp178;
double tmp180 = 2*tmp36*tmp42*tmp179;
double tmp181 = -2*tmp28*tmp139*tmp49*tmp95;
double tmp182 = tmp133*tmp25;
double tmp183 = tmp15*tmp26;
double tmp184 = -(tmp131*tmp27);
double tmp185 = tmp110 + tmp182 + tmp183 + tmp184;
double tmp186 = 2*tmp28*tmp43*tmp185;
double tmp187 = tmp180 + tmp181 + tmp186;
double tmp188 = tmp52*tmp51;
double tmp189 = tmp50*tmp53;
double tmp190 = tmp188 + tmp189;
double tmp191 = tmp24*tmp25;
double tmp192 = tmp191 + tmp78;
double tmp193 = -(tmp24*tmp27);
double tmp194 = tmp118 + tmp193;
double tmp195 = tmp54 + tmp56 + tmp57 + tmp120;
double tmp196 = 0.01*tmp10;
double tmp197 = 0. + tmp196;
double tmp198 = 2*tmp19*tmp197;
double tmp199 = 2*tmp7*tmp21;
double tmp200 = 2*tmp17*tmp131;
double tmp201 = 2*tmp9*tmp23;
double tmp202 = tmp198 + tmp199 + tmp200 + tmp201;
double tmp203 = tmp3*tmp9;
double tmp204 = -(tmp2*tmp7);
double tmp205 = -(tmp1*tmp197);
double tmp206 = tmp203 + tmp204 + tmp205 + tmp149;
double tmp207 = 2*tmp36*tmp42*tmp206;
double tmp208 = -2*tmp28*tmp202*tmp49*tmp95;
double tmp209 = -(tmp7*tmp24);
double tmp210 = tmp9*tmp25;
double tmp211 = -(tmp197*tmp27);
double tmp212 = tmp209 + tmp210 + tmp155 + tmp211;
double tmp213 = 2*tmp28*tmp43*tmp212;
double tmp214 = tmp207 + tmp208 + tmp213;
double tmp215 = -(tmp0*tmp9);
double tmp216 = -(tmp2*tmp197);
double tmp217 = tmp3*tmp131;
double tmp218 = tmp215 + tmp60 + tmp216 + tmp217;
double tmp219 = 2*tmp36*tmp42*tmp218;
double tmp220 = -(tmp197*tmp24);
double tmp221 = tmp131*tmp25;
double tmp222 = -(tmp9*tmp26);
double tmp223 = tmp220 + tmp221 + tmp222 + tmp74;
double tmp224 = 2*tmp28*tmp43*tmp223;
double tmp225 = -2*tmp28*tmp202*tmp49*tmp108;
double tmp226 = tmp219 + tmp224 + tmp225;
double tmp227 = -(tmp3*tmp7);
double tmp228 = tmp0*tmp197;
double tmp229 = tmp1*tmp131;
double tmp230 = tmp98 + tmp227 + tmp228 + tmp229;
double tmp231 = 2*tmp36*tmp42*tmp230;
double tmp232 = -2*tmp28*tmp202*tmp49*tmp69;
double tmp233 = -(tmp7*tmp25);
double tmp234 = tmp197*tmp26;
double tmp235 = tmp131*tmp27;
double tmp236 = tmp110 + tmp233 + tmp234 + tmp235;
double tmp237 = 2*tmp28*tmp43*tmp236;
double tmp238 = tmp231 + tmp232 + tmp237;
double tmp239 = 4*tmp35*tmp192*tmp77;
double tmp240 = 2*tmp35*tmp195*tmp97;
double tmp241 = 4*tmp35*tmp194*tmp116;
double tmp242 = tmp239 + tmp240 + tmp241;
double tmp243 = 2*tmp35*tmp145*tmp77;
double tmp244 = 4*tmp35*tmp175*tmp97;
double tmp245 = 4*tmp35*tmp161*tmp116;
double tmp246 = tmp243 + tmp244 + tmp245;
double tmp247 = 4*tmp35*tmp129*tmp77;
double tmp248 = 4*tmp35*tmp141*tmp97;
double tmp249 = 2*tmp35*tmp134*tmp116;
double tmp250 = tmp247 + tmp248 + tmp249;
double tmp251 = -(tmp50*tmp53);
double tmp252 = tmp188 + tmp251;
double tmp253 = 4*tmp35*tmp129*tmp159;
double tmp254 = 2*tmp35*tmp134*tmp173;
double tmp255 = 4*tmp35*tmp141*tmp187;
double tmp256 = tmp253 + tmp254 + tmp255;
double tmp257 = tmp50*tmp52;
double tmp258 = tmp51*tmp53;
double tmp259 = tmp257 + tmp258;
double tmp260 = 2*tmp35*tmp145*tmp159;
double tmp261 = 4*tmp35*tmp161*tmp173;
double tmp262 = 4*tmp35*tmp175*tmp187;
double tmp263 = tmp260 + tmp261 + tmp262;
double tmp264 = -tmp122;
double tmp265 = tmp121 + tmp264 + tmp123 + tmp126;
double tmp266 = 4*tmp35*tmp192*tmp159;
double tmp267 = 4*tmp35*tmp194*tmp173;
double tmp268 = 2*tmp35*tmp195*tmp187;
double tmp269 = tmp266 + tmp267 + tmp268;
double tmp270 = 4*tmp35*tmp141*tmp214;
double tmp271 = 2*tmp35*tmp134*tmp226;
double tmp272 = 4*tmp35*tmp129*tmp238;
double tmp273 = tmp270 + tmp271 + tmp272;
double tmp274 = 2*tmp35*tmp195*tmp214;
double tmp275 = 4*tmp35*tmp194*tmp226;
double tmp276 = 4*tmp35*tmp192*tmp238;
double tmp277 = tmp274 + tmp275 + tmp276;
double tmp278 = 4*tmp35*tmp175*tmp214;
double tmp279 = 4*tmp35*tmp161*tmp226;
double tmp280 = 2*tmp35*tmp145*tmp238;
double tmp281 = tmp278 + tmp279 + tmp280;
double tmp282 = tmp50*tmp51;
double tmp283 = tmp282 + tmp143;
double tmp284 = tmp121 + tmp264 + tmp124 + tmp125;
double tmp285 = -(tmp50*tmp52);
double tmp286 = tmp285 + tmp258;
J(1+_OFF,4+_OFF) = 2*tmp190*tmp242 + 2*tmp144*tmp246 + tmp127*tmp250;
J(1+_OFF,5+_OFF) = tmp127*tmp256 + 2*tmp144*tmp263 + 2*tmp190*tmp269;
J(1+_OFF,6+_OFF) = tmp127*tmp273 + 2*tmp190*tmp277 + 2*tmp144*tmp281;
J(2+_OFF,4+_OFF) = tmp265*tmp242 + 2*tmp259*tmp246 + 2*tmp252*tmp250;
J(2+_OFF,5+_OFF) = 2*tmp252*tmp256 + 2*tmp259*tmp263 + tmp265*tmp269;
J(2+_OFF,6+_OFF) = 2*tmp252*tmp273 + tmp265*tmp277 + 2*tmp259*tmp281;
J(3+_OFF,4+_OFF) = 2*tmp286*tmp242 + tmp284*tmp246 + 2*tmp283*tmp250;
J(3+_OFF,5+_OFF) = 2*tmp283*tmp256 + tmp284*tmp263 + 2*tmp286*tmp269;
J(3+_OFF,6+_OFF) = 2*tmp283*tmp273 + 2*tmp286*tmp277 + tmp284*tmp281;
