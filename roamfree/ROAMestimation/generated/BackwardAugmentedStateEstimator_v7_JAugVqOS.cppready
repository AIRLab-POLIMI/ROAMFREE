double tmp0 = qos(2+_OFF);
double tmp1 = qos(3+_OFF);
double tmp2 = qos(1+_OFF);
double tmp3 = qos(4+_OFF);
double tmp4 = x2(4+_OFF);
double tmp5 = so(2+_OFF);
double tmp6 = so(1+_OFF);
double tmp7 = x2(5+_OFF);
double tmp8 = x1(3+_OFF);
double tmp9 = x2(3+_OFF);
double tmp10 = x1(4+_OFF);
double tmp11 = x1(7+_OFF);
double tmp12 = x2(6+_OFF);
double tmp13 = -tmp9;
double tmp14 = tmp8 + tmp13;
double tmp15 = x1(5+_OFF);
double tmp16 = x1(6+_OFF);
double tmp17 = x2(7+_OFF);
double tmp18 = x1(1+_OFF);
double tmp19 = -2*tmp18;
double tmp20 = x2(1+_OFF);
double tmp21 = 2*tmp20;
double tmp22 = tmp19 + tmp21;
double tmp23 = x1(2+_OFF);
double tmp24 = x2(2+_OFF);
double tmp25 = 1.*tmp1;
double tmp26 = 0. + tmp25;
double tmp27 = 0.01*tmp3;
double tmp28 = 0. + tmp27;
double tmp29 = -0.01*tmp1;
double tmp30 = 0. + tmp29;
double tmp31 = 1.*tmp3;
double tmp32 = 0. + tmp31;
double tmp33 = so(3+_OFF);
double tmp34 = -2*tmp23;
double tmp35 = 2*tmp24;
double tmp36 = tmp34 + tmp35;
double tmp37 = std::pow(tmp12,2);
double tmp38 = -tmp20;
double tmp39 = tmp18 + tmp38;
double tmp40 = 1.*tmp2;
double tmp41 = 0. + tmp40;
double tmp42 = 0.01*tmp2;
double tmp43 = 0. + tmp42;
double tmp44 = 1.*tmp0;
double tmp45 = 0. + tmp44;
double tmp46 = -0.01*tmp0;
double tmp47 = 0. + tmp46;
double tmp48 = -2*tmp8;
double tmp49 = 2*tmp9;
double tmp50 = tmp48 + tmp49;
double tmp51 = -tmp24;
double tmp52 = tmp23 + tmp51;
double tmp53 = std::pow(tmp7,2);
double tmp54 = std::pow(tmp17,2);
double tmp55 = 1/Dt12;
double tmp56 = -tmp8;
double tmp57 = -2*tmp5*tmp15*tmp4;
double tmp58 = 2*tmp6*tmp16*tmp4;
double tmp59 = 2*tmp5*tmp10*tmp7;
double tmp60 = 2*tmp6*tmp11*tmp7;
double tmp61 = 2*tmp52*tmp4*tmp7;
double tmp62 = 2*tmp14*tmp53;
double tmp63 = -2*tmp6*tmp10*tmp12;
double tmp64 = 2*tmp5*tmp11*tmp12;
double tmp65 = tmp22*tmp4*tmp12;
double tmp66 = 2*tmp14*tmp37;
double tmp67 = -2*tmp6*tmp15*tmp17;
double tmp68 = -2*tmp5*tmp16*tmp17;
double tmp69 = tmp22*tmp7*tmp17;
double tmp70 = tmp36*tmp12*tmp17;
double tmp71 = tmp56 + tmp9 + tmp57 + tmp58 + tmp59 + tmp60 + tmp61 + tmp62 + tmp63 + tmp64 + tmp65 + tmp66 + tmp67 + tmp68 + tmp69 + tmp70;
double tmp72 = 0.01*tmp0;
double tmp73 = 0. + tmp72;
double tmp74 = -tmp18;
double tmp75 = -2*tmp33*tmp16*tmp4;
double tmp76 = 2*tmp5*tmp11*tmp4;
double tmp77 = -2*tmp5*tmp16*tmp7;
double tmp78 = -2*tmp33*tmp11*tmp7;
double tmp79 = 2*tmp33*tmp10*tmp12;
double tmp80 = 2*tmp5*tmp15*tmp12;
double tmp81 = 2*tmp14*tmp4*tmp12;
double tmp82 = tmp36*tmp7*tmp12;
double tmp83 = 2*tmp39*tmp37;
double tmp84 = -2*tmp5*tmp10*tmp17;
double tmp85 = 2*tmp33*tmp15*tmp17;
double tmp86 = tmp36*tmp4*tmp17;
double tmp87 = tmp50*tmp7*tmp17;
double tmp88 = 2*tmp39*tmp54;
double tmp89 = tmp74 + tmp20 + tmp75 + tmp76 + tmp77 + tmp78 + tmp79 + tmp80 + tmp81 + tmp82 + tmp83 + tmp84 + tmp85 + tmp86 + tmp87 + tmp88;
double tmp90 = -0.01*tmp3;
double tmp91 = 0. + tmp90;
double tmp92 = -tmp23;
double tmp93 = 2*tmp33*tmp15*tmp4;
double tmp94 = -2*tmp6*tmp11*tmp4;
double tmp95 = -2*tmp33*tmp10*tmp7;
double tmp96 = 2*tmp6*tmp16*tmp7;
double tmp97 = tmp50*tmp4*tmp7;
double tmp98 = 2*tmp52*tmp53;
double tmp99 = -2*tmp6*tmp15*tmp12;
double tmp100 = -2*tmp33*tmp11*tmp12;
double tmp101 = tmp22*tmp7*tmp12;
double tmp102 = 2*tmp6*tmp10*tmp17;
double tmp103 = 2*tmp33*tmp16*tmp17;
double tmp104 = 2*tmp39*tmp4*tmp17;
double tmp105 = tmp50*tmp12*tmp17;
double tmp106 = 2*tmp52*tmp54;
double tmp107 = tmp92 + tmp24 + tmp93 + tmp94 + tmp95 + tmp96 + tmp97 + tmp98 + tmp99 + tmp100 + tmp101 + tmp102 + tmp103 + tmp104 + tmp105 + tmp106;
double tmp108 = tmp26*tmp91;
double tmp109 = tmp43*tmp41;
double tmp110 = 0.01*tmp1;
double tmp111 = 0. + tmp110;
double tmp112 = tmp47*tmp45;
double tmp113 = tmp30*tmp26;
double tmp114 = tmp43*tmp26;
double tmp115 = tmp45*tmp28;
double tmp116 = 4*tmp30*tmp32;
double tmp117 = tmp43*tmp45;
double tmp118 = 4*tmp73*tmp32;
double tmp119 = tmp47*tmp32;
double tmp120 = tmp111*tmp26;
double tmp121 = -(tmp91*tmp32);
double tmp122 = 4*tmp43*tmp32;
double tmp123 = 4*tmp43*tmp45;
double tmp124 = 4*tmp26*tmp28;
double tmp125 = tmp45*tmp30;
double tmp126 = tmp47*tmp26;
double tmp127 = tmp41*tmp28;
double tmp128 = tmp43*tmp32;
double tmp129 = 4*tmp43*tmp26;
double tmp130 = 4*tmp45*tmp91;
double tmp131 = tmp91*tmp32;
double tmp132 = tmp41*tmp91;
double tmp133 = -(tmp43*tmp32);
double tmp134 = 4*tmp45*tmp111;
double tmp135 = 4*tmp47*tmp26;
double tmp136 = tmp41*tmp47;
double tmp137 = tmp41*tmp111;
double tmp138 = tmp45*tmp91;
double tmp139 = -(tmp47*tmp32);
J(1+_OFF,1+_OFF) = tmp55*(-2*(-(tmp45*tmp30) + tmp126 + tmp127 + tmp133)*tmp71 - (tmp124 + tmp116)*tmp89 + 2*(tmp41*tmp30 + tmp114 + tmp115 + tmp119)*tmp107);
J(1+_OFF,2+_OFF) = tmp55*(-2*(tmp109 - tmp73*tmp45 + tmp113 + tmp121)*tmp71 - (tmp129 + tmp118)*tmp89 + 2*(tmp41*tmp73 + tmp117 + tmp108 + tmp30*tmp32)*tmp107);
J(1+_OFF,3+_OFF) = tmp55*(-2*(tmp136 - tmp43*tmp45 + tmp108 - tmp111*tmp32)*tmp71 - (tmp135 + tmp122)*tmp89 + 2*(tmp109 + tmp112 + tmp120 + tmp131)*tmp107);
J(2+_OFF,1+_OFF) = tmp55*(2*(tmp109 + tmp112 + tmp113 + tmp28*tmp32)*tmp71 + 2*(-(tmp41*tmp30) + tmp114 + tmp115 + tmp139)*tmp89 - (tmp123 + tmp116)*tmp107);
J(2+_OFF,2+_OFF) = tmp55*(2*(tmp125 + tmp73*tmp26 + tmp132 + tmp128)*tmp71 + 2*(-(tmp41*tmp73) + tmp117 + tmp108 - tmp30*tmp32)*tmp89 - (tmp130 + tmp118)*tmp107);
J(2+_OFF,3+_OFF) = tmp55*(2*(tmp137 + tmp114 + tmp138 + tmp119)*tmp71 + 2*(-(tmp43*tmp41) + tmp112 + tmp120 + tmp121)*tmp89 - (tmp134 + tmp122)*tmp107);
J(3+_OFF,1+_OFF) = tmp55*(-((tmp123 + tmp124)*tmp71) + 2*(tmp125 + tmp126 + tmp127 + tmp128)*tmp89 - 2*(tmp109 + tmp112 - tmp30*tmp26 - tmp28*tmp32)*tmp107);
J(3+_OFF,2+_OFF) = tmp55*(-((tmp129 + tmp130)*tmp71) + 2*(tmp109 + tmp73*tmp45 + tmp113 + tmp131)*tmp89 - 2*(tmp125 - tmp73*tmp26 + tmp132 + tmp133)*tmp107);
J(3+_OFF,3+_OFF) = tmp55*(-((tmp134 + tmp135)*tmp71) + 2*(tmp136 + tmp117 + tmp108 + tmp111*tmp32)*tmp89 - 2*(tmp137 - tmp43*tmp26 + tmp138 + tmp139)*tmp107);
