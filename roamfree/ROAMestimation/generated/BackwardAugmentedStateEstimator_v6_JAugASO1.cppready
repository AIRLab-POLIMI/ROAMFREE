double tmp0 = std::pow(Dt12,-2);
double tmp1 = x2(4+_OFF);
double tmp2 = std::pow(tmp1,2);
double tmp3 = x1(6+_OFF);
double tmp4 = std::pow(tmp3,2);
double tmp5 = x1(7+_OFF);
double tmp6 = std::pow(tmp5,2);
double tmp7 = x2(5+_OFF);
double tmp8 = std::pow(tmp7,2);
double tmp9 = x2(6+_OFF);
double tmp10 = x1(5+_OFF);
double tmp11 = x1(4+_OFF);
double tmp12 = std::pow(tmp9,2);
double tmp13 = x2(7+_OFF);
double tmp14 = std::pow(tmp11,2);
double tmp15 = std::pow(tmp10,2);
double tmp16 = std::pow(tmp13,2);
double tmp17 = std::pow(qOS2,2);
double tmp18 = std::pow(qOS3,2);
double tmp19 = std::pow(Dt12,2);
double tmp20 = Dt01 + Dt12;
double tmp21 = x0(6+_OFF);
double tmp22 = x0(7+_OFF);
double tmp23 = x0(4+_OFF);
double tmp24 = x0(5+_OFF);
double tmp25 = 1/Dt01;
double tmp26 = 1/tmp20;
double tmp27 = std::pow(qOS1,2);
double tmp28 = -tmp27;
double tmp29 = -tmp17;
double tmp30 = -tmp18;
double tmp31 = 1 + tmp28 + tmp29 + tmp30;
double tmp32 = std::sqrt(tmp31);
double tmp33 = std::pow(Dt01,2);
double tmp34 = Dt01*Dt12;
double tmp35 = tmp33 + tmp34;
double tmp36 = qOS1*qOS2;
double tmp37 = -4*tmp0*tmp4*tmp2;
double tmp38 = -4*tmp0*tmp6*tmp2;
double tmp39 = -4*tmp0*tmp4*tmp8;
double tmp40 = -4*tmp0*tmp6*tmp8;
double tmp41 = 8*tmp0*tmp11*tmp3*tmp1*tmp9;
double tmp42 = -8*tmp0*tmp10*tmp5*tmp1*tmp9;
double tmp43 = 8*tmp0*tmp10*tmp3*tmp7*tmp9;
double tmp44 = 8*tmp0*tmp11*tmp5*tmp7*tmp9;
double tmp45 = -4*tmp0*tmp14*tmp12;
double tmp46 = -4*tmp0*tmp15*tmp12;
double tmp47 = 8*tmp0*tmp10*tmp3*tmp1*tmp13;
double tmp48 = 8*tmp0*tmp11*tmp5*tmp1*tmp13;
double tmp49 = -8*tmp0*tmp11*tmp3*tmp7*tmp13;
double tmp50 = 8*tmp0*tmp10*tmp5*tmp7*tmp13;
double tmp51 = -4*tmp0*tmp14*tmp16;
double tmp52 = -4*tmp0*tmp15*tmp16;
double tmp53 = tmp37 + tmp38 + tmp39 + tmp40 + tmp41 + tmp42 + tmp43 + tmp44 + tmp45 + tmp46 + tmp47 + tmp48 + tmp49 + tmp50 + tmp51 + tmp52;
double tmp54 = -2*tmp19*tmp22*tmp11;
double tmp55 = -2*tmp19*tmp21*tmp10;
double tmp56 = 2*tmp19*tmp24*tmp3;
double tmp57 = -2*Dt01*tmp20*tmp10*tmp3;
double tmp58 = 2*tmp19*tmp23*tmp5;
double tmp59 = 2*Dt01*Dt12*tmp5*tmp1;
double tmp60 = -2*Dt01*Dt12*tmp3*tmp7;
double tmp61 = 4*tmp19*tmp21*tmp11*tmp1*tmp7;
double tmp62 = -4*tmp19*tmp22*tmp10*tmp1*tmp7;
double tmp63 = -4*tmp19*tmp23*tmp3*tmp1*tmp7;
double tmp64 = 2*Dt01*tmp20*tmp11*tmp3*tmp1*tmp7;
double tmp65 = 4*tmp19*tmp24*tmp5*tmp1*tmp7;
double tmp66 = -2*Dt01*tmp20*tmp10*tmp5*tmp1*tmp7;
double tmp67 = 4*tmp19*tmp22*tmp11*tmp8;
double tmp68 = 4*tmp19*tmp21*tmp10*tmp8;
double tmp69 = -4*tmp19*tmp24*tmp3*tmp8;
double tmp70 = 2*Dt01*tmp20*tmp10*tmp3*tmp8;
double tmp71 = -4*tmp19*tmp23*tmp5*tmp8;
double tmp72 = 2*Dt01*tmp20*tmp11*tmp5*tmp8;
double tmp73 = 2*Dt01*Dt12*tmp10*tmp9;
double tmp74 = -4*tmp19*tmp24*tmp11*tmp1*tmp9;
double tmp75 = 4*tmp19*tmp23*tmp10*tmp1*tmp9;
double tmp76 = 2*Dt01*tmp20*tmp11*tmp10*tmp1*tmp9;
double tmp77 = -4*tmp19*tmp22*tmp3*tmp1*tmp9;
double tmp78 = 4*tmp19*tmp21*tmp5*tmp1*tmp9;
double tmp79 = 2*Dt01*tmp20*tmp3*tmp5*tmp1*tmp9;
double tmp80 = -2*tmp35*tmp7*tmp9;
double tmp81 = 2*Dt01*tmp20*tmp15*tmp7*tmp9;
double tmp82 = 2*Dt01*tmp20*tmp4*tmp7*tmp9;
double tmp83 = 4*Dt01*tmp20*tmp6*tmp7*tmp9;
double tmp84 = 4*tmp19*tmp22*tmp11*tmp12;
double tmp85 = 4*tmp19*tmp21*tmp10*tmp12;
double tmp86 = -4*tmp19*tmp24*tmp3*tmp12;
double tmp87 = 2*Dt01*tmp20*tmp10*tmp3*tmp12;
double tmp88 = -4*tmp19*tmp23*tmp5*tmp12;
double tmp89 = -2*Dt01*tmp20*tmp11*tmp5*tmp12;
double tmp90 = -2*Dt01*Dt12*tmp11*tmp13;
double tmp91 = 2*Dt01*tmp20*tmp15*tmp1*tmp13;
double tmp92 = -2*Dt01*tmp20*tmp4*tmp1*tmp13;
double tmp93 = -4*tmp19*tmp24*tmp11*tmp7*tmp13;
double tmp94 = 4*tmp19*tmp23*tmp10*tmp7*tmp13;
double tmp95 = -2*Dt01*tmp20*tmp11*tmp10*tmp7*tmp13;
double tmp96 = -4*tmp19*tmp22*tmp3*tmp7*tmp13;
double tmp97 = 4*tmp19*tmp21*tmp5*tmp7*tmp13;
double tmp98 = -2*Dt01*tmp20*tmp3*tmp5*tmp7*tmp13;
double tmp99 = -4*tmp19*tmp21*tmp11*tmp9*tmp13;
double tmp100 = 4*tmp19*tmp22*tmp10*tmp9*tmp13;
double tmp101 = 4*tmp19*tmp23*tmp3*tmp9*tmp13;
double tmp102 = 2*Dt01*tmp20*tmp11*tmp3*tmp9*tmp13;
double tmp103 = -4*tmp19*tmp24*tmp5*tmp9*tmp13;
double tmp104 = -2*Dt01*tmp20*tmp10*tmp5*tmp9*tmp13;
double tmp105 = 4*Dt01*tmp20*tmp10*tmp3*tmp16;
double tmp106 = tmp54 + tmp55 + tmp56 + tmp57 + tmp58 + tmp59 + tmp60 + tmp61 + tmp62 + tmp63 + tmp64 + tmp65 + tmp66 + tmp67 + tmp68 + tmp69 + tmp70 + tmp71 + tmp72 + tmp73 + tmp74 + tmp75 + tmp76 + tmp77 + tmp78 + tmp79 + tmp80 + tmp81 + tmp82 + tmp83 + tmp84 + tmp85 + tmp86 + tmp87 + tmp88 + tmp89 + tmp90 + tmp91 + tmp92 + tmp93 + tmp94 + tmp95 + tmp96 + tmp97 + tmp98 + tmp99 + tmp100 + tmp101 + tmp102 + tmp103 + tmp104 + tmp105;
double tmp107 = 2*tmp19*tmp21*tmp11;
double tmp108 = -2*tmp19*tmp22*tmp10;
double tmp109 = -2*tmp19*tmp23*tmp3;
double tmp110 = 2*tmp19*tmp24*tmp5;
double tmp111 = -2*Dt01*tmp20*tmp10*tmp5;
double tmp112 = -2*Dt01*Dt12*tmp3*tmp1;
double tmp113 = -2*Dt01*Dt12*tmp5*tmp7;
double tmp114 = 4*tmp19*tmp22*tmp11*tmp1*tmp7;
double tmp115 = 4*tmp19*tmp21*tmp10*tmp1*tmp7;
double tmp116 = -4*tmp19*tmp24*tmp3*tmp1*tmp7;
double tmp117 = 2*Dt01*tmp20*tmp10*tmp3*tmp1*tmp7;
double tmp118 = -4*tmp19*tmp23*tmp5*tmp1*tmp7;
double tmp119 = 2*Dt01*tmp20*tmp11*tmp5*tmp1*tmp7;
double tmp120 = -4*tmp19*tmp21*tmp11*tmp8;
double tmp121 = 4*tmp19*tmp22*tmp10*tmp8;
double tmp122 = 4*tmp19*tmp23*tmp3*tmp8;
double tmp123 = -2*Dt01*tmp20*tmp11*tmp3*tmp8;
double tmp124 = -4*tmp19*tmp24*tmp5*tmp8;
double tmp125 = 2*Dt01*tmp20*tmp10*tmp5*tmp8;
double tmp126 = 2*Dt01*Dt12*tmp11*tmp9;
double tmp127 = -2*Dt01*tmp20*tmp15*tmp1*tmp9;
double tmp128 = 2*Dt01*tmp20*tmp6*tmp1*tmp9;
double tmp129 = 4*tmp19*tmp24*tmp11*tmp7*tmp9;
double tmp130 = -4*tmp19*tmp23*tmp10*tmp7*tmp9;
double tmp131 = 2*Dt01*tmp20*tmp11*tmp10*tmp7*tmp9;
double tmp132 = 4*tmp19*tmp22*tmp3*tmp7*tmp9;
double tmp133 = -4*tmp19*tmp21*tmp5*tmp7*tmp9;
double tmp134 = -2*Dt01*tmp20*tmp3*tmp5*tmp7*tmp9;
double tmp135 = 4*Dt01*tmp20*tmp10*tmp5*tmp12;
double tmp136 = 2*Dt01*Dt12*tmp10*tmp13;
double tmp137 = -4*tmp19*tmp24*tmp11*tmp1*tmp13;
double tmp138 = 4*tmp19*tmp23*tmp10*tmp1*tmp13;
double tmp139 = 2*Dt01*tmp20*tmp11*tmp10*tmp1*tmp13;
double tmp140 = -4*tmp19*tmp22*tmp3*tmp1*tmp13;
double tmp141 = 4*tmp19*tmp21*tmp5*tmp1*tmp13;
double tmp142 = -2*Dt01*tmp20*tmp3*tmp5*tmp1*tmp13;
double tmp143 = -2*tmp35*tmp7*tmp13;
double tmp144 = 2*Dt01*tmp20*tmp15*tmp7*tmp13;
double tmp145 = 4*Dt01*tmp20*tmp4*tmp7*tmp13;
double tmp146 = 2*Dt01*tmp20*tmp6*tmp7*tmp13;
double tmp147 = 4*tmp19*tmp22*tmp11*tmp9*tmp13;
double tmp148 = 4*tmp19*tmp21*tmp10*tmp9*tmp13;
double tmp149 = -4*tmp19*tmp24*tmp3*tmp9*tmp13;
double tmp150 = -2*Dt01*tmp20*tmp10*tmp3*tmp9*tmp13;
double tmp151 = -4*tmp19*tmp23*tmp5*tmp9*tmp13;
double tmp152 = -2*Dt01*tmp20*tmp11*tmp5*tmp9*tmp13;
double tmp153 = -4*tmp19*tmp21*tmp11*tmp16;
double tmp154 = 4*tmp19*tmp22*tmp10*tmp16;
double tmp155 = 4*tmp19*tmp23*tmp3*tmp16;
double tmp156 = 2*Dt01*tmp20*tmp11*tmp3*tmp16;
double tmp157 = -4*tmp19*tmp24*tmp5*tmp16;
double tmp158 = 2*Dt01*tmp20*tmp10*tmp5*tmp16;
double tmp159 = tmp107 + tmp108 + tmp109 + tmp110 + tmp111 + tmp112 + tmp113 + tmp114 + tmp115 + tmp116 + tmp117 + tmp118 + tmp119 + tmp120 + tmp121 + tmp122 + tmp123 + tmp124 + tmp125 + tmp126 + tmp127 + tmp128 + tmp129 + tmp130 + tmp131 + tmp132 + tmp133 + tmp134 + tmp135 + tmp136 + tmp137 + tmp138 + tmp139 + tmp140 + tmp141 + tmp142 + tmp143 + tmp144 + tmp145 + tmp146 + tmp147 + tmp148 + tmp149 + tmp150 + tmp151 + tmp152 + tmp153 + tmp154 + tmp155 + tmp156 + tmp157 + tmp158;
double tmp160 = qOS1*qOS3;
double tmp161 = qOS2*qOS3;
double tmp162 = 2*tmp27;
J(1+_OFF,1+_OFF) = (1 - 2*tmp17 - 2*tmp18)*tmp53 - 4*tmp25*tmp0*tmp26*(tmp36 + qOS3*tmp32)*tmp106 - 4*tmp25*tmp0*tmp26*(tmp160 - qOS2*tmp32)*tmp159;
J(2+_OFF,1+_OFF) = 2*(tmp36 - qOS3*tmp32)*tmp53 + 2*tmp25*tmp0*tmp26*(-1 + tmp162 + 2*tmp18)*tmp106 - 4*tmp25*tmp0*tmp26*(tmp161 + qOS1*tmp32)*tmp159;
J(3+_OFF,1+_OFF) = 4*tmp25*tmp0*tmp26*(tmp160 + qOS2*tmp32)*(-2*tmp33*tmp4*tmp2 - 2*Dt01*Dt12*tmp4*tmp2 - 2*tmp33*tmp6*tmp2 - 2*Dt01*Dt12*tmp6*tmp2 - 2*tmp33*tmp4*tmp8 - 2*Dt01*Dt12*tmp4*tmp8 - 2*tmp33*tmp6*tmp8 - 2*Dt01*Dt12*tmp6*tmp8 + 4*tmp33*tmp11*tmp3*tmp1*tmp9 + 4*Dt01*Dt12*tmp11*tmp3*tmp1*tmp9 - 4*tmp33*tmp10*tmp5*tmp1*tmp9 - 4*Dt01*Dt12*tmp10*tmp5*tmp1*tmp9 + 4*tmp33*tmp10*tmp3*tmp7*tmp9 + 4*Dt01*Dt12*tmp10*tmp3*tmp7*tmp9 + 4*tmp33*tmp11*tmp5*tmp7*tmp9 + 4*Dt01*Dt12*tmp11*tmp5*tmp7*tmp9 - 2*tmp33*tmp14*tmp12 - 2*Dt01*Dt12*tmp14*tmp12 - 2*tmp33*tmp15*tmp12 - 2*Dt01*Dt12*tmp15*tmp12 + 4*tmp33*tmp10*tmp3*tmp1*tmp13 + 4*Dt01*Dt12*tmp10*tmp3*tmp1*tmp13 + 4*tmp33*tmp11*tmp5*tmp1*tmp13 + 4*Dt01*Dt12*tmp11*tmp5*tmp1*tmp13 - 4*tmp33*tmp11*tmp3*tmp7*tmp13 - 4*Dt01*Dt12*tmp11*tmp3*tmp7*tmp13 + 4*tmp33*tmp10*tmp5*tmp7*tmp13 + 4*Dt01*Dt12*tmp10*tmp5*tmp7*tmp13 - 2*tmp33*tmp14*tmp16 - 2*Dt01*Dt12*tmp14*tmp16 - 2*tmp33*tmp15*tmp16 - 2*Dt01*Dt12*tmp15*tmp16) - 4*tmp25*tmp0*tmp26*(tmp161 - qOS1*tmp32)*tmp106 + 2*tmp25*tmp0*tmp26*(-1 + tmp162 + 2*tmp17)*tmp159;
