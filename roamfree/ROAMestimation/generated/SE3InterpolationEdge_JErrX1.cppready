double tmp0 = -t1;
double tmp1 = tmp0 + t2;
double tmp2 = 1/tmp1;
double tmp3 = -delay;
double tmp4 = -ti;
double tmp5 = tmp3 + t2 + tmp4;
double tmp6 = 0.001*tmp2*tmp5;
double tmp7 = x1(5+_OFF);
double tmp8 = -0.01*tmp7;
double tmp9 = 0. + tmp8;
double tmp10 = x1(4+_OFF);
double tmp11 = 0.01*tmp10;
double tmp12 = 0. + tmp11;
double tmp13 = x1(7+_OFF);
double tmp14 = 0.01*tmp13;
double tmp15 = 0. + tmp14;
double tmp16 = x1(6+_OFF);
double tmp17 = -0.01*tmp16;
double tmp18 = 0. + tmp17;
double tmp19 = xi(4+_OFF);
double tmp20 = x2(4+_OFF);
double tmp21 = 1.*tmp7;
double tmp22 = 0. + tmp21;
double tmp23 = x2(5+_OFF);
double tmp24 = x2(6+_OFF);
double tmp25 = x2(7+_OFF);
double tmp26 = 1.*tmp16;
double tmp27 = 0. + tmp26;
double tmp28 = 1.*tmp13;
double tmp29 = 0. + tmp28;
double tmp30 = xi(5+_OFF);
double tmp31 = 1.*tmp10;
double tmp32 = 0. + tmp31;
double tmp33 = tmp12*tmp23;
double tmp34 = tmp15*tmp24;
double tmp35 = tmp18*tmp25;
double tmp36 = tmp22*tmp23;
double tmp37 = tmp27*tmp24;
double tmp38 = tmp29*tmp25;
double tmp39 = tmp32*tmp20;
double tmp40 = xi(6+_OFF);
double tmp41 = tmp9*tmp20;
double tmp42 = tmp41 + tmp33 + tmp34 + tmp35;
double tmp43 = xi(7+_OFF);
double tmp44 = -1 + tmp39 + tmp36 + tmp37 + tmp38;
double tmp45 = -(tmp20*tmp19);
double tmp46 = tmp23*tmp30;
double tmp47 = tmp45 + tmp46;
double tmp48 = -t2;
double tmp49 = t1 + tmp48;
double tmp50 = 1/tmp49;
double tmp51 = -0.01*tmp13;
double tmp52 = 0. + tmp51;
double tmp53 = 0.01*tmp7;
double tmp54 = 0. + tmp53;
double tmp55 = tmp52*tmp23;
double tmp56 = tmp12*tmp24;
double tmp57 = tmp54*tmp25;
double tmp58 = -1 + tmp36 + tmp37 + tmp38;
double tmp59 = tmp18*tmp20;
double tmp60 = -1 + tmp39 + tmp36 + tmp37;
double tmp61 = tmp59 + tmp55 + tmp56 + tmp57;
double tmp62 = delay + ti;
double tmp63 = tmp27*tmp24*tmp30;
double tmp64 = tmp29*tmp25*tmp30;
double tmp65 = tmp22*tmp47;
double tmp66 = tmp29*tmp20*tmp40;
double tmp67 = -(tmp27*tmp20*tmp43);
double tmp68 = tmp63 + tmp64 + tmp65 + tmp66 + tmp67;
double tmp69 = -(tmp29*tmp40);
double tmp70 = tmp27*tmp43;
double tmp71 = tmp69 + tmp70;
double tmp72 = 0.01*tmp16;
double tmp73 = 0. + tmp72;
double tmp74 = tmp73*tmp23;
double tmp75 = tmp9*tmp24;
double tmp76 = tmp12*tmp25;
double tmp77 = tmp52*tmp20;
double tmp78 = tmp77 + tmp74 + tmp75 + tmp76;
double tmp79 = tmp41 + tmp33 + tmp34;
double tmp80 = 2*tmp12*tmp22;
double tmp81 = 2*tmp27*tmp15;
double tmp82 = 2*tmp18*tmp29;
double tmp83 = tmp80 + tmp81 + tmp82;
double tmp84 = tmp33 + tmp34 + tmp35;
double tmp85 = tmp20*tmp19;
double tmp86 = -(tmp24*tmp40);
double tmp87 = tmp85 + tmp86;
double tmp88 = tmp20*tmp30;
double tmp89 = -(tmp25*tmp40);
double tmp90 = tmp88 + tmp89;
double tmp91 = tmp23*tmp40;
double tmp92 = tmp20*tmp43;
double tmp93 = tmp91 + tmp92;
double tmp94 = 2*tmp12*tmp19;
double tmp95 = -2*tmp18*tmp40;
double tmp96 = tmp12*tmp44;
double tmp97 = tmp59 + tmp55 + tmp56;
double tmp98 = 2*tmp12*tmp27;
double tmp99 = 2*tmp22*tmp52;
double tmp100 = 2*tmp54*tmp29;
double tmp101 = tmp98 + tmp99 + tmp100;
double tmp102 = tmp55 + tmp56 + tmp57;
double tmp103 = tmp12*tmp29*tmp25*tmp19;
double tmp104 = tmp20*tmp40;
double tmp105 = -(tmp23*tmp43);
double tmp106 = tmp104 + tmp105;
double tmp107 = tmp27*tmp19;
double tmp108 = tmp29*tmp30;
double tmp109 = tmp107 + tmp108;
double tmp110 = tmp23*tmp109;
double tmp111 = tmp37 + tmp38;
double tmp112 = -(tmp111*tmp43);
double tmp113 = tmp110 + tmp112;
double tmp114 = tmp27*tmp87;
double tmp115 = tmp29*tmp90;
double tmp116 = -(tmp22*tmp93);
double tmp117 = tmp114 + tmp115 + tmp116;
double tmp118 = tmp77 + tmp74 + tmp75;
double tmp119 = 2*tmp22*tmp73;
double tmp120 = 2*tmp9*tmp27;
double tmp121 = 2*tmp12*tmp29;
double tmp122 = tmp119 + tmp120 + tmp121;
double tmp123 = tmp74 + tmp75 + tmp76;
double tmp124 = 2*tmp27*tmp15*tmp24;
double tmp125 = -(tmp83*tmp20);
double tmp126 = tmp32*tmp84;
double tmp127 = tmp9*tmp58;
double tmp128 = tmp125 + tmp126 + tmp127;
double tmp129 = tmp81 + tmp82;
double tmp130 = -(tmp15*tmp30);
double tmp131 = tmp12*tmp40;
double tmp132 = -(tmp27*tmp30);
double tmp133 = tmp22*tmp40;
double tmp134 = -1 + tmp39 + tmp36;
double tmp135 = 2*tmp12*tmp27*tmp24;
double tmp136 = tmp60*tmp19;
double tmp137 = tmp132 + tmp133;
double tmp138 = tmp25*tmp137;
double tmp139 = tmp136 + tmp138;
double tmp140 = -(tmp101*tmp20);
double tmp141 = tmp32*tmp102;
double tmp142 = tmp18*tmp58;
double tmp143 = tmp140 + tmp141 + tmp142;
double tmp144 = tmp29*tmp23*tmp19;
double tmp145 = -(tmp27*tmp23*tmp30);
double tmp146 = tmp27*tmp24*tmp40;
double tmp147 = tmp29*tmp25*tmp40;
double tmp148 = tmp144 + tmp145 + tmp146 + tmp147;
double tmp149 = tmp98 + tmp100;
double tmp150 = -(tmp12*tmp30);
double tmp151 = tmp52*tmp40;
double tmp152 = tmp29*tmp19;
double tmp153 = tmp152 + tmp132 + tmp133;
double tmp154 = tmp20*tmp153;
double tmp155 = tmp36 + tmp37 + tmp38;
double tmp156 = -(tmp155*tmp43);
double tmp157 = tmp154 + tmp156;
double tmp158 = -2*tmp9*tmp30;
double tmp159 = -2*tmp52*tmp43;
double tmp160 = 2*tmp9*tmp27*tmp24;
double tmp161 = -(tmp122*tmp20);
double tmp162 = tmp32*tmp123;
double tmp163 = tmp52*tmp58;
double tmp164 = tmp161 + tmp162 + tmp163;
double tmp165 = tmp12*tmp27*tmp24*tmp19;
double tmp166 = tmp120 + tmp121;
double tmp167 = tmp12*tmp19;
double tmp168 = -(tmp9*tmp30);
double tmp169 = tmp73*tmp40;
J(1+_OFF,1+_OFF) = tmp6;
J(1+_OFF,2+_OFF) = 0;
J(1+_OFF,3+_OFF) = 0;
J(1+_OFF,4+_OFF) = 0;
J(1+_OFF,5+_OFF) = 0;
J(1+_OFF,6+_OFF) = 0;
J(2+_OFF,1+_OFF) = 0;
J(2+_OFF,2+_OFF) = tmp6;
J(2+_OFF,3+_OFF) = 0;
J(2+_OFF,4+_OFF) = 0;
J(2+_OFF,5+_OFF) = 0;
J(2+_OFF,6+_OFF) = 0;
J(3+_OFF,1+_OFF) = 0;
J(3+_OFF,2+_OFF) = 0;
J(3+_OFF,3+_OFF) = tmp6;
J(3+_OFF,4+_OFF) = 0;
J(3+_OFF,5+_OFF) = 0;
J(3+_OFF,6+_OFF) = 0;
J(4+_OFF,1+_OFF) = 0;
J(4+_OFF,2+_OFF) = 0;
J(4+_OFF,3+_OFF) = 0;
J(4+_OFF,4+_OFF) = tmp50*(-(t2*(tmp94 + tmp158 + tmp95 + 2*tmp15*tmp43)) + 2*t1*(-(tmp22*tmp42*tmp19) - tmp12*tmp44*tmp19 - tmp83*tmp20*tmp30 + tmp32*tmp84*tmp30 + tmp9*tmp58*tmp30 + tmp18*tmp60*tmp40 + tmp29*tmp79*tmp40 + 2*tmp18*tmp29*tmp25*tmp40 - tmp27*tmp42*tmp43 - tmp15*tmp44*tmp43) + 2*tmp62*(tmp165 + tmp22*tmp15*tmp24*tmp19 + tmp22*tmp18*tmp25*tmp19 + tmp103 + 2*tmp12*tmp22*tmp20*tmp30 + 2*tmp27*tmp15*tmp20*tmp30 + 2*tmp18*tmp29*tmp20*tmp30 - tmp18*tmp27*tmp24*tmp40 - tmp15*tmp29*tmp24*tmp40 - 2*tmp18*tmp29*tmp25*tmp40 + (tmp124 + tmp18*tmp27*tmp25 + tmp15*tmp29*tmp25)*tmp43 - tmp9*tmp68 - tmp32*(tmp15*tmp24*tmp30 + tmp18*tmp25*tmp30 + tmp12*tmp47 + tmp18*tmp20*tmp40 - tmp15*tmp20*tmp43) + tmp23*(2*tmp12*tmp22*tmp19 + tmp12*tmp71 + tmp22*(-(tmp18*tmp40) + tmp15*tmp43))));
J(4+_OFF,5+_OFF) = tmp50*(-(t2*(2*tmp52*tmp19 - 2*tmp18*tmp30 - 2*tmp54*tmp40 + 2*tmp12*tmp43)) + 2*t1*(-(tmp22*tmp61*tmp19) - tmp52*tmp44*tmp19 - tmp101*tmp20*tmp30 + tmp32*tmp102*tmp30 + tmp18*tmp58*tmp30 + tmp29*tmp97*tmp40 + tmp54*tmp60*tmp40 + 2*tmp54*tmp29*tmp25*tmp40 - tmp27*tmp61*tmp43 - tmp12*tmp44*tmp43) + 2*tmp62*(tmp12*tmp22*tmp24*tmp19 + tmp27*tmp52*tmp24*tmp19 + tmp54*tmp22*tmp25*tmp19 + tmp52*tmp29*tmp25*tmp19 + 2*tmp12*tmp27*tmp20*tmp30 + 2*tmp22*tmp52*tmp20*tmp30 + 2*tmp54*tmp29*tmp20*tmp30 - tmp54*tmp27*tmp24*tmp40 - tmp12*tmp29*tmp24*tmp40 - 2*tmp54*tmp29*tmp25*tmp40 + (tmp135 + tmp54*tmp27*tmp25 + tmp12*tmp29*tmp25)*tmp43 - tmp32*(tmp12*tmp24*tmp30 + tmp54*tmp25*tmp30 + tmp52*tmp47 + tmp54*tmp20*tmp40 - tmp12*tmp20*tmp43) - tmp18*tmp68 + tmp23*(2*tmp22*tmp52*tmp19 + tmp22*(-(tmp54*tmp40) + tmp12*tmp43) + tmp52*tmp71)));
J(4+_OFF,6+_OFF) = tmp50*(-(t2*(2*tmp73*tmp19 - 2*tmp52*tmp30 - 2*tmp12*tmp40 + 2*tmp9*tmp43)) + 2*t1*(-(tmp22*tmp78*tmp19) - tmp73*tmp44*tmp19 - tmp122*tmp20*tmp30 + tmp32*tmp123*tmp30 + tmp52*tmp58*tmp30 + tmp29*tmp118*tmp40 + tmp12*tmp60*tmp40 + 2*tmp12*tmp29*tmp25*tmp40 - tmp27*tmp78*tmp43 - tmp9*tmp44*tmp43) + 2*tmp62*(tmp9*tmp22*tmp24*tmp19 + tmp73*tmp27*tmp24*tmp19 + tmp12*tmp22*tmp25*tmp19 + tmp73*tmp29*tmp25*tmp19 + 2*tmp22*tmp73*tmp20*tmp30 + 2*tmp9*tmp27*tmp20*tmp30 + 2*tmp12*tmp29*tmp20*tmp30 - tmp12*tmp27*tmp24*tmp40 - tmp9*tmp29*tmp24*tmp40 - 2*tmp12*tmp29*tmp25*tmp40 + (tmp160 + tmp12*tmp27*tmp25 + tmp9*tmp29*tmp25)*tmp43 - tmp32*(tmp9*tmp24*tmp30 + tmp12*tmp25*tmp30 + tmp73*tmp47 + tmp12*tmp20*tmp40 - tmp9*tmp20*tmp43) - tmp52*tmp68 + tmp23*(2*tmp22*tmp73*tmp19 + tmp22*(-(tmp12*tmp40) + tmp9*tmp43) + tmp73*tmp71)));
J(5+_OFF,1+_OFF) = 0;
J(5+_OFF,2+_OFF) = 0;
J(5+_OFF,3+_OFF) = 0;
J(5+_OFF,4+_OFF) = tmp50*(-(t2*(2*tmp15*tmp19 + 2*tmp18*tmp30 - 2*tmp9*tmp40 - 2*tmp12*tmp43)) + t1*(-2*(tmp27*tmp42 + tmp15*tmp44)*tmp19 - 2*(tmp18*tmp60 + tmp29*tmp79 + 2*tmp18*tmp29*tmp25)*tmp30 + 2*tmp128*tmp40 + 2*(tmp22*tmp42 + tmp96)*tmp43) + 2*tmp62*(2*tmp27*tmp15*tmp24*tmp19 + tmp18*tmp27*tmp25*tmp19 + tmp15*tmp29*tmp25*tmp19 + tmp18*tmp27*tmp24*tmp30 + tmp15*tmp29*tmp24*tmp30 + 2*tmp18*tmp29*tmp25*tmp30 + tmp129*tmp20*tmp40 + 2*tmp12*tmp22*tmp106 + tmp22*(tmp23*(tmp15*tmp19 + tmp18*tmp30) - (tmp34 + tmp35)*tmp43) + tmp12*tmp113 + tmp32*(tmp15*tmp87 + tmp18*tmp90 - tmp12*tmp93) + tmp9*tmp117));
J(5+_OFF,5+_OFF) = tmp50*(-(t2*(tmp94 + 2*tmp54*tmp30 + tmp95 + tmp159)) + t1*(-2*(tmp27*tmp61 + tmp96)*tmp19 - 2*(tmp29*tmp97 + tmp54*tmp60 + 2*tmp54*tmp29*tmp25)*tmp30 + 2*tmp143*tmp40 + 2*(tmp22*tmp61 + tmp52*tmp44)*tmp43) + 2*tmp62*(2*tmp12*tmp27*tmp24*tmp19 + tmp54*tmp27*tmp25*tmp19 + tmp103 + tmp54*tmp27*tmp24*tmp30 + tmp12*tmp29*tmp24*tmp30 + 2*tmp54*tmp29*tmp25*tmp30 + tmp149*tmp20*tmp40 + 2*tmp22*tmp52*tmp106 + tmp22*(tmp23*(tmp167 + tmp54*tmp30) - (tmp56 + tmp57)*tmp43) + tmp52*tmp113 + tmp18*tmp117 + tmp32*(tmp12*tmp87 + tmp54*tmp90 - tmp52*tmp93)));
J(5+_OFF,6+_OFF) = tmp50*(-(t2*(2*tmp9*tmp19 + 2*tmp12*tmp30 - 2*tmp52*tmp40 - 2*tmp73*tmp43)) + t1*(-2*(tmp27*tmp78 + tmp9*tmp44)*tmp19 - 2*(tmp29*tmp118 + tmp12*tmp60 + 2*tmp12*tmp29*tmp25)*tmp30 + 2*tmp164*tmp40 + 2*(tmp22*tmp78 + tmp73*tmp44)*tmp43) + 2*tmp62*(2*tmp9*tmp27*tmp24*tmp19 + tmp12*tmp27*tmp25*tmp19 + tmp9*tmp29*tmp25*tmp19 + tmp12*tmp27*tmp24*tmp30 + tmp9*tmp29*tmp24*tmp30 + 2*tmp12*tmp29*tmp25*tmp30 + tmp166*tmp20*tmp40 + 2*tmp22*tmp73*tmp106 + tmp22*(tmp23*(tmp9*tmp19 + tmp12*tmp30) - (tmp75 + tmp76)*tmp43) + tmp73*tmp113 + tmp52*tmp117 + tmp32*(tmp9*tmp87 + tmp12*tmp90 - tmp73*tmp93)));
J(6+_OFF,1+_OFF) = 0;
J(6+_OFF,2+_OFF) = 0;
J(6+_OFF,3+_OFF) = 0;
J(6+_OFF,4+_OFF) = tmp50*(-(t2*(2*tmp18*tmp19 - 2*tmp15*tmp30 + 2*tmp12*tmp40 - 2*tmp9*tmp43)) + 2*t1*(-2*tmp18*tmp29*tmp25*tmp19 + (tmp27*(tmp41 + tmp33) + tmp15*tmp134 + tmp124)*tmp30 + (-(tmp12*tmp60) - tmp22*tmp79)*tmp40 - tmp29*(tmp79*tmp19 + tmp25*(tmp130 + tmp131)) - tmp18*tmp139 + tmp128*tmp43) + 2*tmp62*(tmp18*tmp27*tmp24*tmp19 + tmp15*tmp29*tmp24*tmp19 + 2*tmp18*tmp29*tmp25*tmp19 - 2*tmp27*tmp15*tmp24*tmp30 - tmp18*tmp27*tmp25*tmp30 - tmp15*tmp29*tmp25*tmp30 + tmp22*(tmp18*tmp23*tmp19 - tmp15*tmp23*tmp30 + tmp15*tmp24*tmp40 + tmp18*tmp25*tmp40) + tmp12*tmp148 + tmp129*tmp20*tmp43 + 2*tmp12*tmp22*tmp93 + tmp32*(tmp20*(tmp18*tmp19 + tmp130 + tmp131) - tmp84*tmp43) + tmp9*tmp157));
J(6+_OFF,5+_OFF) = tmp50*(-(t2*(2*tmp54*tmp19 - 2*tmp12*tmp30 + 2*tmp52*tmp40 - 2*tmp18*tmp43)) + 2*t1*(-2*tmp54*tmp29*tmp25*tmp19 + (tmp12*tmp134 + tmp27*(tmp59 + tmp55) + tmp135)*tmp30 + (-(tmp22*tmp97) - tmp52*tmp60)*tmp40 - tmp54*tmp139 - tmp29*(tmp97*tmp19 + tmp25*(tmp150 + tmp151)) + tmp143*tmp43) + 2*tmp62*(tmp54*tmp27*tmp24*tmp19 + tmp12*tmp29*tmp24*tmp19 + 2*tmp54*tmp29*tmp25*tmp19 - 2*tmp12*tmp27*tmp24*tmp30 - tmp54*tmp27*tmp25*tmp30 - tmp12*tmp29*tmp25*tmp30 + tmp22*(tmp54*tmp23*tmp19 - tmp12*tmp23*tmp30 + tmp12*tmp24*tmp40 + tmp54*tmp25*tmp40) + tmp52*tmp148 + tmp149*tmp20*tmp43 + 2*tmp22*tmp52*tmp93 + tmp32*(tmp20*(tmp54*tmp19 + tmp150 + tmp151) - tmp102*tmp43) + tmp18*tmp157));
J(6+_OFF,6+_OFF) = tmp50*(-(t2*(tmp94 + tmp158 + 2*tmp73*tmp40 + tmp159)) + 2*t1*(-2*tmp12*tmp29*tmp25*tmp19 + (tmp9*tmp134 + tmp27*(tmp77 + tmp74) + tmp160)*tmp30 + (-(tmp22*tmp118) - tmp73*tmp60)*tmp40 - tmp12*tmp139 - tmp29*(tmp118*tmp19 + tmp25*(tmp168 + tmp169)) + tmp164*tmp43) + 2*tmp62*(tmp165 + tmp9*tmp29*tmp24*tmp19 + 2*tmp12*tmp29*tmp25*tmp19 - 2*tmp9*tmp27*tmp24*tmp30 - tmp12*tmp27*tmp25*tmp30 - tmp9*tmp29*tmp25*tmp30 + tmp22*(tmp12*tmp23*tmp19 - tmp9*tmp23*tmp30 + tmp9*tmp24*tmp40 + tmp12*tmp25*tmp40) + tmp73*tmp148 + tmp166*tmp20*tmp43 + 2*tmp22*tmp73*tmp93 + tmp32*(tmp20*(tmp167 + tmp168 + tmp169) - tmp123*tmp43) + tmp52*tmp157));
