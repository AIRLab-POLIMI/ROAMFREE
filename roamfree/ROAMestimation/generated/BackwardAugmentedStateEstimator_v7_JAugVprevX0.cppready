double tmp0 = qos(1+_OFF);
double tmp1 = qos(3+_OFF);
double tmp2 = qos(2+_OFF);
double tmp3 = qos(4+_OFF);
double tmp4 = x1(4+_OFF);
double tmp5 = x1(6+_OFF);
double tmp6 = x1(5+_OFF);
double tmp7 = x1(7+_OFF);
double tmp8 = 1/Dt01;
double tmp9 = 1/Dt12;
double tmp10 = std::pow(tmp1,2);
double tmp11 = -2*tmp10;
double tmp12 = std::pow(tmp3,2);
double tmp13 = -2*tmp12;
double tmp14 = 1 + tmp11 + tmp13;
double tmp15 = 0.002*tmp4*tmp7;
double tmp16 = tmp0*tmp1;
double tmp17 = -(tmp2*tmp3);
double tmp18 = tmp16 + tmp17;
double tmp19 = tmp2*tmp1;
double tmp20 = tmp0*tmp3;
double tmp21 = tmp19 + tmp20;
double tmp22 = std::pow(tmp7,2);
double tmp23 = std::pow(tmp6,2);
double tmp24 = std::pow(tmp5,2);
double tmp25 = -0.002*tmp6*tmp5;
double tmp26 = tmp25 + tmp15;
double tmp27 = tmp4*tmp5;
double tmp28 = tmp6*tmp7;
double tmp29 = tmp27 + tmp28;
double tmp30 = -0.002*tmp24;
double tmp31 = -0.002*tmp22;
double tmp32 = 0.001 + tmp30 + tmp31;
double tmp33 = -(tmp0*tmp3);
double tmp34 = tmp19 + tmp33;
double tmp35 = 0.002*tmp6*tmp5;
double tmp36 = tmp35 + tmp15;
double tmp37 = tmp0*tmp2;
double tmp38 = tmp1*tmp3;
double tmp39 = tmp37 + tmp38;
double tmp40 = tmp4*tmp6;
double tmp41 = -(tmp5*tmp7);
double tmp42 = tmp40 + tmp41;
double tmp43 = std::pow(tmp2,2);
double tmp44 = -2*tmp43;
double tmp45 = 1 + tmp44 + tmp13;
double tmp46 = 0.002*tmp23;
double tmp47 = 0.002*tmp22;
double tmp48 = -0.001 + tmp46 + tmp47;
double tmp49 = 2*tmp23;
double tmp50 = 2*tmp24;
double tmp51 = -1 + tmp49 + tmp50;
double tmp52 = -0.002*tmp4*tmp5;
double tmp53 = 0.002*tmp6*tmp7;
double tmp54 = tmp52 + tmp53;
double tmp55 = -0.002*tmp4*tmp6;
double tmp56 = -0.002*tmp5*tmp7;
double tmp57 = tmp55 + tmp56;
double tmp58 = tmp2*tmp3;
double tmp59 = tmp16 + tmp58;
double tmp60 = 1 + tmp44 + tmp11;
double tmp61 = -(tmp1*tmp3);
double tmp62 = tmp37 + tmp61;
J(1+_OFF,1+_OFF) = tmp8*tmp9*(2*Dt12*tmp21*tmp26 + 0.004*Dt12*tmp18*tmp29 - Dt12*tmp14*tmp32);
J(1+_OFF,2+_OFF) = tmp8*tmp9*(-(Dt12*tmp14*tmp36) - 0.004*Dt12*tmp18*tmp42 + 2*Dt12*tmp21*tmp48);
J(1+_OFF,3+_OFF) = tmp8*tmp9*(-0.002*Dt12*tmp18*tmp51 - Dt12*tmp14*tmp54 + 2*Dt12*tmp21*tmp57);
J(2+_OFF,1+_OFF) = tmp8*tmp9*(Dt12*tmp45*tmp26 - 0.004*Dt12*tmp39*tmp29 - 2*Dt12*tmp34*tmp32);
J(2+_OFF,2+_OFF) = tmp8*tmp9*(-2*Dt12*tmp34*tmp36 + 0.004*Dt12*tmp39*tmp42 + Dt12*tmp45*tmp48);
J(2+_OFF,3+_OFF) = tmp8*tmp9*(0.002*Dt12*tmp39*tmp51 - 2*Dt12*tmp34*tmp54 + Dt12*tmp45*tmp57);
J(3+_OFF,1+_OFF) = tmp8*tmp9*(-2*Dt12*tmp62*tmp26 - 0.002*Dt12*tmp60*tmp29 - 2*Dt12*tmp59*tmp32);
J(3+_OFF,2+_OFF) = tmp8*tmp9*(-2*Dt12*tmp59*tmp36 + 0.002*Dt12*tmp60*tmp42 - 2*Dt12*tmp62*tmp48);
J(3+_OFF,3+_OFF) = tmp8*tmp9*(0.001*Dt12*tmp60*tmp51 - 2*Dt12*tmp59*tmp54 - 2*Dt12*tmp62*tmp57);
