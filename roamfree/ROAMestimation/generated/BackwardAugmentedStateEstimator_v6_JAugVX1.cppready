double tmp0 = std::pow(qOS1,2);
double tmp1 = -tmp0;
double tmp2 = std::pow(qOS2,2);
double tmp3 = -tmp2;
double tmp4 = std::pow(qOS3,2);
double tmp5 = -tmp4;
double tmp6 = 1 + tmp1 + tmp3 + tmp5;
double tmp7 = std::sqrt(tmp6);
double tmp8 = x2(4+_OFF);
double tmp9 = x2(6+_OFF);
double tmp10 = x2(5+_OFF);
double tmp11 = x2(7+_OFF);
double tmp12 = 1/Dt12;
double tmp13 = -2*tmp2;
double tmp14 = -2*tmp4;
double tmp15 = 1 + tmp13 + tmp14;
double tmp16 = tmp10*tmp9;
double tmp17 = qOS1*qOS3;
double tmp18 = -(qOS2*tmp7);
double tmp19 = tmp17 + tmp18;
double tmp20 = qOS1*qOS2;
double tmp21 = qOS3*tmp7;
double tmp22 = tmp20 + tmp21;
double tmp23 = std::pow(tmp11,2);
double tmp24 = 2*tmp23;
double tmp25 = std::pow(tmp10,2);
double tmp26 = 2*tmp25;
double tmp27 = std::pow(tmp9,2);
double tmp28 = 2*tmp27;
double tmp29 = tmp8*tmp9;
double tmp30 = tmp8*tmp10;
double tmp31 = x1(6+_OFF);
double tmp32 = -0.01*tmp31;
double tmp33 = 0. + tmp32;
double tmp34 = x1(7+_OFF);
double tmp35 = 0.01*tmp34;
double tmp36 = 0. + tmp35;
double tmp37 = x1(4+_OFF);
double tmp38 = 0.01*tmp37;
double tmp39 = 0. + tmp38;
double tmp40 = x1(5+_OFF);
double tmp41 = -0.01*tmp40;
double tmp42 = 0. + tmp41;
double tmp43 = 0.01*tmp40;
double tmp44 = 0. + tmp43;
double tmp45 = -0.01*tmp34;
double tmp46 = 0. + tmp45;
double tmp47 = 2*sO3*tmp39*tmp8;
double tmp48 = -2*sO3*tmp33*tmp9;
double tmp49 = -2*sO2*tmp39*tmp9;
double tmp50 = 2*sO2*tmp42*tmp11;
double tmp51 = 0.01*tmp31;
double tmp52 = 0. + tmp51;
double tmp53 = -2*sO1*tmp39*tmp8;
double tmp54 = 2*sO1*tmp46*tmp11;
double tmp55 = -(tmp8*tmp11);
double tmp56 = tmp16 + tmp55;
double tmp57 = tmp10*tmp11;
double tmp58 = tmp29 + tmp57;
double tmp59 = -1 + tmp28 + tmp24;
double tmp60 = -(qOS3*tmp7);
double tmp61 = tmp20 + tmp60;
double tmp62 = tmp8*tmp11;
double tmp63 = tmp16 + tmp62;
double tmp64 = qOS2*qOS3;
double tmp65 = qOS1*tmp7;
double tmp66 = tmp64 + tmp65;
double tmp67 = -(tmp9*tmp11);
double tmp68 = tmp30 + tmp67;
double tmp69 = -2*tmp0;
double tmp70 = 1 + tmp69 + tmp14;
double tmp71 = -1 + tmp26 + tmp24;
double tmp72 = -1 + tmp26 + tmp28;
double tmp73 = -(tmp10*tmp11);
double tmp74 = tmp29 + tmp73;
double tmp75 = tmp9*tmp11;
double tmp76 = tmp30 + tmp75;
double tmp77 = -2*sO2*tmp33*tmp8;
double tmp78 = 2*sO3*tmp36*tmp8;
double tmp79 = 2*sO3*tmp33*tmp10;
double tmp80 = 2*sO2*tmp36*tmp10;
double tmp81 = -2*sO3*tmp42*tmp9;
double tmp82 = -2*sO3*tmp39*tmp11;
double tmp83 = tmp77 + tmp78 + tmp79 + tmp80 + tmp49 + tmp81 + tmp82 + tmp50;
double tmp84 = 2*sO2*tmp39*tmp8;
double tmp85 = -2*sO1*tmp36*tmp8;
double tmp86 = -2*sO2*tmp42*tmp10;
double tmp87 = -2*sO1*tmp33*tmp10;
double tmp88 = 2*sO1*tmp42*tmp9;
double tmp89 = -2*sO2*tmp33*tmp9;
double tmp90 = 2*sO1*tmp39*tmp11;
double tmp91 = 2*sO2*tmp36*tmp11;
double tmp92 = tmp84 + tmp85 + tmp86 + tmp87 + tmp88 + tmp89 + tmp90 + tmp91;
double tmp93 = -2*sO1*tmp33*tmp8;
double tmp94 = -2*sO3*tmp42*tmp10;
double tmp95 = 2*sO1*tmp36*tmp10;
double tmp96 = -2*sO1*tmp39*tmp9;
double tmp97 = 2*sO1*tmp42*tmp11;
double tmp98 = 2*sO3*tmp36*tmp11;
double tmp99 = tmp47 + tmp93 + tmp94 + tmp95 + tmp96 + tmp48 + tmp97 + tmp98;
double tmp100 = -2*sO1*tmp44*tmp8;
double tmp101 = 2*sO3*tmp46*tmp8;
double tmp102 = 2*sO1*tmp39*tmp10;
double tmp103 = -2*sO3*tmp33*tmp10;
double tmp104 = -2*sO3*tmp44*tmp9;
double tmp105 = -2*sO1*tmp46*tmp9;
double tmp106 = 2*sO3*tmp39*tmp11;
double tmp107 = 2*sO1*tmp33*tmp11;
double tmp108 = tmp100 + tmp101 + tmp102 + tmp103 + tmp104 + tmp105 + tmp106 + tmp107;
double tmp109 = 2*sO2*tmp46*tmp8;
double tmp110 = -2*sO1*tmp44*tmp10;
double tmp111 = -2*sO2*tmp33*tmp10;
double tmp112 = -2*sO2*tmp44*tmp9;
double tmp113 = 2*sO1*tmp33*tmp9;
double tmp114 = 2*sO2*tmp39*tmp11;
double tmp115 = tmp53 + tmp109 + tmp110 + tmp111 + tmp112 + tmp113 + tmp114 + tmp54;
double tmp116 = -2*sO2*tmp44*tmp8;
double tmp117 = 2*sO2*tmp39*tmp10;
double tmp118 = 2*sO3*tmp44*tmp10;
double tmp119 = -2*sO2*tmp46*tmp9;
double tmp120 = 2*sO2*tmp33*tmp11;
double tmp121 = -2*sO3*tmp46*tmp11;
double tmp122 = tmp47 + tmp116 + tmp117 + tmp118 + tmp48 + tmp119 + tmp120 + tmp121;
double tmp123 = -2*sO1*tmp42*tmp8;
double tmp124 = 2*sO2*tmp52*tmp8;
double tmp125 = -2*sO1*tmp39*tmp10;
double tmp126 = -2*sO2*tmp46*tmp10;
double tmp127 = 2*sO1*tmp46*tmp9;
double tmp128 = 2*sO1*tmp52*tmp11;
double tmp129 = tmp123 + tmp124 + tmp125 + tmp126 + tmp49 + tmp127 + tmp50 + tmp128;
double tmp130 = 2*sO3*tmp52*tmp8;
double tmp131 = 2*sO1*tmp42*tmp10;
double tmp132 = -2*sO3*tmp46*tmp10;
double tmp133 = -2*sO3*tmp39*tmp9;
double tmp134 = -2*sO1*tmp52*tmp9;
double tmp135 = 2*sO3*tmp42*tmp11;
double tmp136 = tmp53 + tmp130 + tmp131 + tmp132 + tmp133 + tmp134 + tmp135 + tmp54;
double tmp137 = -2*sO2*tmp39*tmp8;
double tmp138 = 2*sO3*tmp42*tmp8;
double tmp139 = 2*sO3*tmp39*tmp10;
double tmp140 = 2*sO2*tmp42*tmp10;
double tmp141 = -2*sO2*tmp52*tmp9;
double tmp142 = -2*sO3*tmp46*tmp9;
double tmp143 = -2*sO3*tmp52*tmp11;
double tmp144 = 2*sO2*tmp46*tmp11;
double tmp145 = tmp137 + tmp138 + tmp139 + tmp140 + tmp141 + tmp142 + tmp143 + tmp144;
double tmp146 = qOS2*tmp7;
double tmp147 = tmp17 + tmp146;
double tmp148 = 1 + tmp69 + tmp13;
double tmp149 = -(qOS1*tmp7);
double tmp150 = tmp64 + tmp149;
J(1+_OFF,1+_OFF) = tmp12*(-0.004*tmp22*tmp56 - 0.004*tmp19*tmp58 + 0.001*tmp15*tmp59);
J(1+_OFF,2+_OFF) = tmp12*(-0.002*tmp15*tmp63 + 0.004*tmp19*tmp68 + 0.002*tmp22*tmp71);
J(1+_OFF,3+_OFF) = tmp12*(0.002*tmp19*tmp72 + 0.002*tmp15*tmp74 - 0.004*tmp22*tmp76);
J(1+_OFF,4+_OFF) = tmp12*(-(tmp15*tmp83) - 2*tmp19*tmp92 + 2*tmp22*tmp99);
J(1+_OFF,5+_OFF) = tmp12*(2*tmp22*tmp108 - 2*tmp19*tmp115 - tmp15*tmp122);
J(1+_OFF,6+_OFF) = tmp12*(-2*tmp19*tmp129 + 2*tmp22*tmp136 - tmp15*tmp145);
J(2+_OFF,1+_OFF) = tmp12*(-0.002*tmp70*tmp56 - 0.004*tmp66*tmp58 + 0.002*tmp61*tmp59);
J(2+_OFF,2+_OFF) = tmp12*(-0.004*tmp61*tmp63 + 0.004*tmp66*tmp68 + 0.001*tmp70*tmp71);
J(2+_OFF,3+_OFF) = tmp12*(0.002*tmp66*tmp72 + 0.004*tmp61*tmp74 - 0.002*tmp70*tmp76);
J(2+_OFF,4+_OFF) = tmp12*(-2*tmp61*tmp83 - 2*tmp66*tmp92 + tmp70*tmp99);
J(2+_OFF,5+_OFF) = tmp12*(tmp70*tmp108 - 2*tmp66*tmp115 - 2*tmp61*tmp122);
J(2+_OFF,6+_OFF) = tmp12*(-2*tmp66*tmp129 + tmp70*tmp136 - 2*tmp61*tmp145);
J(3+_OFF,1+_OFF) = tmp12*(-0.004*tmp150*tmp56 - 0.002*tmp148*tmp58 + 0.002*tmp147*tmp59);
J(3+_OFF,2+_OFF) = tmp12*(-0.004*tmp147*tmp63 + 0.002*tmp148*tmp68 + 0.002*tmp150*tmp71);
J(3+_OFF,3+_OFF) = tmp12*(0.001*tmp148*tmp72 + 0.004*tmp147*tmp74 - 0.004*tmp150*tmp76);
J(3+_OFF,4+_OFF) = tmp12*(-2*tmp147*tmp83 - tmp148*tmp92 + 2*tmp150*tmp99);
J(3+_OFF,5+_OFF) = tmp12*(2*tmp150*tmp108 - tmp148*tmp115 - 2*tmp147*tmp122);
J(3+_OFF,6+_OFF) = tmp12*(-(tmp148*tmp129) + 2*tmp150*tmp136 - 2*tmp147*tmp145);
