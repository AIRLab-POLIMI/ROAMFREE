double tmp0 = std::pow(qOS1,2);
double tmp1 = -tmp0;
double tmp2 = std::pow(qOS2,2);
double tmp3 = -tmp2;
double tmp4 = std::pow(qOS3,2);
double tmp5 = -tmp4;
double tmp6 = 1 + tmp1 + tmp3 + tmp5;
double tmp7 = std::sqrt(tmp6);
double tmp8 = x2(4+_OFF);
double tmp9 = x2(6+_OFF);
double tmp10 = x2(5+_OFF);
double tmp11 = x2(7+_OFF);
double tmp12 = 1/Dt12;
double tmp13 = 2*tmp2;
double tmp14 = 2*tmp4;
double tmp15 = -1 + tmp13 + tmp14;
double tmp16 = -0.002*tmp10*tmp9;
double tmp17 = qOS1*qOS3;
double tmp18 = -(qOS2*tmp7);
double tmp19 = tmp17 + tmp18;
double tmp20 = qOS1*qOS2;
double tmp21 = qOS3*tmp7;
double tmp22 = tmp20 + tmp21;
double tmp23 = std::pow(tmp11,2);
double tmp24 = 0.002*tmp23;
double tmp25 = std::pow(tmp10,2);
double tmp26 = 0.002*tmp25;
double tmp27 = std::pow(tmp9,2);
double tmp28 = 0.002*tmp27;
double tmp29 = -0.002*tmp10*tmp11;
double tmp30 = -0.002*tmp9*tmp11;
double tmp31 = x1(6+_OFF);
double tmp32 = -0.01*tmp31;
double tmp33 = 0. + tmp32;
double tmp34 = x1(7+_OFF);
double tmp35 = 0.01*tmp34;
double tmp36 = 0. + tmp35;
double tmp37 = x1(4+_OFF);
double tmp38 = 0.01*tmp37;
double tmp39 = 0. + tmp38;
double tmp40 = x1(5+_OFF);
double tmp41 = -0.01*tmp40;
double tmp42 = 0. + tmp41;
double tmp43 = -2*sO3*tmp33*tmp10;
double tmp44 = 0.01*tmp40;
double tmp45 = 0. + tmp44;
double tmp46 = -0.01*tmp34;
double tmp47 = 0. + tmp46;
double tmp48 = 2*sO3*tmp39*tmp11;
double tmp49 = 2*sO1*tmp39*tmp10;
double tmp50 = 2*sO2*tmp39*tmp9;
double tmp51 = -2*sO1*tmp47*tmp9;
double tmp52 = -2*sO2*tmp42*tmp11;
double tmp53 = 0.01*tmp31;
double tmp54 = 0. + tmp53;
double tmp55 = 0.002*tmp8*tmp11;
double tmp56 = tmp16 + tmp55;
double tmp57 = -0.002*tmp8*tmp9;
double tmp58 = tmp57 + tmp29;
double tmp59 = -0.001 + tmp28 + tmp24;
double tmp60 = -(qOS3*tmp7);
double tmp61 = tmp20 + tmp60;
double tmp62 = -0.002*tmp8*tmp11;
double tmp63 = tmp16 + tmp62;
double tmp64 = qOS2*qOS3;
double tmp65 = qOS1*tmp7;
double tmp66 = tmp64 + tmp65;
double tmp67 = 0.002*tmp8*tmp10;
double tmp68 = tmp67 + tmp30;
double tmp69 = 2*tmp0;
double tmp70 = -1 + tmp69 + tmp14;
double tmp71 = -0.001 + tmp26 + tmp24;
double tmp72 = -0.001 + tmp26 + tmp28;
double tmp73 = 0.002*tmp8*tmp9;
double tmp74 = tmp73 + tmp29;
double tmp75 = -0.002*tmp8*tmp10;
double tmp76 = tmp75 + tmp30;
double tmp77 = 2*sO2*tmp33*tmp8;
double tmp78 = -2*sO3*tmp36*tmp8;
double tmp79 = -2*sO2*tmp36*tmp10;
double tmp80 = 2*sO3*tmp42*tmp9;
double tmp81 = tmp77 + tmp78 + tmp43 + tmp79 + tmp50 + tmp80 + tmp48 + tmp52;
double tmp82 = -2*sO2*tmp39*tmp8;
double tmp83 = 2*sO1*tmp36*tmp8;
double tmp84 = 2*sO2*tmp42*tmp10;
double tmp85 = 2*sO1*tmp33*tmp10;
double tmp86 = -2*sO1*tmp42*tmp9;
double tmp87 = 2*sO2*tmp33*tmp9;
double tmp88 = -2*sO1*tmp39*tmp11;
double tmp89 = -2*sO2*tmp36*tmp11;
double tmp90 = tmp82 + tmp83 + tmp84 + tmp85 + tmp86 + tmp87 + tmp88 + tmp89;
double tmp91 = 2*sO3*tmp39*tmp8;
double tmp92 = -2*sO1*tmp33*tmp8;
double tmp93 = -2*sO3*tmp42*tmp10;
double tmp94 = 2*sO1*tmp36*tmp10;
double tmp95 = -2*sO1*tmp39*tmp9;
double tmp96 = -2*sO3*tmp33*tmp9;
double tmp97 = 2*sO1*tmp42*tmp11;
double tmp98 = 2*sO3*tmp36*tmp11;
double tmp99 = tmp91 + tmp92 + tmp93 + tmp94 + tmp95 + tmp96 + tmp97 + tmp98;
double tmp100 = -2*sO1*tmp45*tmp8;
double tmp101 = 2*sO3*tmp47*tmp8;
double tmp102 = -2*sO3*tmp45*tmp9;
double tmp103 = 2*sO1*tmp33*tmp11;
double tmp104 = tmp100 + tmp101 + tmp49 + tmp43 + tmp102 + tmp51 + tmp48 + tmp103;
double tmp105 = 2*sO1*tmp39*tmp8;
double tmp106 = -2*sO2*tmp47*tmp8;
double tmp107 = 2*sO1*tmp45*tmp10;
double tmp108 = 2*sO2*tmp33*tmp10;
double tmp109 = 2*sO2*tmp45*tmp9;
double tmp110 = -2*sO1*tmp33*tmp9;
double tmp111 = -2*sO2*tmp39*tmp11;
double tmp112 = -2*sO1*tmp47*tmp11;
double tmp113 = tmp105 + tmp106 + tmp107 + tmp108 + tmp109 + tmp110 + tmp111 + tmp112;
double tmp114 = -2*sO3*tmp39*tmp8;
double tmp115 = 2*sO2*tmp45*tmp8;
double tmp116 = -2*sO2*tmp39*tmp10;
double tmp117 = -2*sO3*tmp45*tmp10;
double tmp118 = 2*sO3*tmp33*tmp9;
double tmp119 = 2*sO2*tmp47*tmp9;
double tmp120 = -2*sO2*tmp33*tmp11;
double tmp121 = 2*sO3*tmp47*tmp11;
double tmp122 = tmp114 + tmp115 + tmp116 + tmp117 + tmp118 + tmp119 + tmp120 + tmp121;
double tmp123 = 2*sO1*tmp42*tmp8;
double tmp124 = -2*sO2*tmp54*tmp8;
double tmp125 = 2*sO2*tmp47*tmp10;
double tmp126 = -2*sO1*tmp54*tmp11;
double tmp127 = tmp123 + tmp124 + tmp49 + tmp125 + tmp50 + tmp51 + tmp52 + tmp126;
double tmp128 = -2*sO1*tmp39*tmp8;
double tmp129 = 2*sO3*tmp54*tmp8;
double tmp130 = 2*sO1*tmp42*tmp10;
double tmp131 = -2*sO3*tmp47*tmp10;
double tmp132 = -2*sO3*tmp39*tmp9;
double tmp133 = -2*sO1*tmp54*tmp9;
double tmp134 = 2*sO3*tmp42*tmp11;
double tmp135 = 2*sO1*tmp47*tmp11;
double tmp136 = tmp128 + tmp129 + tmp130 + tmp131 + tmp132 + tmp133 + tmp134 + tmp135;
double tmp137 = 2*sO2*tmp39*tmp8;
double tmp138 = -2*sO3*tmp42*tmp8;
double tmp139 = -2*sO3*tmp39*tmp10;
double tmp140 = -2*sO2*tmp42*tmp10;
double tmp141 = 2*sO2*tmp54*tmp9;
double tmp142 = 2*sO3*tmp47*tmp9;
double tmp143 = 2*sO3*tmp54*tmp11;
double tmp144 = -2*sO2*tmp47*tmp11;
double tmp145 = tmp137 + tmp138 + tmp139 + tmp140 + tmp141 + tmp142 + tmp143 + tmp144;
double tmp146 = qOS2*tmp7;
double tmp147 = tmp17 + tmp146;
double tmp148 = -1 + tmp69 + tmp13;
double tmp149 = -(qOS1*tmp7);
double tmp150 = tmp64 + tmp149;
J(1+_OFF,1+_OFF) = tmp12*(2*tmp22*tmp56 + 2*tmp19*tmp58 - tmp15*tmp59);
J(1+_OFF,2+_OFF) = tmp12*(-(tmp15*tmp63) + 2*tmp19*tmp68 + 2*tmp22*tmp71);
J(1+_OFF,3+_OFF) = tmp12*(2*tmp19*tmp72 - tmp15*tmp74 + 2*tmp22*tmp76);
J(1+_OFF,4+_OFF) = tmp12*(-(tmp15*tmp81) + 2*tmp19*tmp90 + 2*tmp22*tmp99);
J(1+_OFF,5+_OFF) = tmp12*(2*tmp22*tmp104 + 2*tmp19*tmp113 - tmp15*tmp122);
J(1+_OFF,6+_OFF) = tmp12*(2*tmp19*tmp127 + 2*tmp22*tmp136 - tmp15*tmp145);
J(2+_OFF,1+_OFF) = tmp12*(-(tmp70*tmp56) + 2*tmp66*tmp58 + 2*tmp61*tmp59);
J(2+_OFF,2+_OFF) = tmp12*(2*tmp61*tmp63 + 2*tmp66*tmp68 - tmp70*tmp71);
J(2+_OFF,3+_OFF) = tmp12*(2*tmp66*tmp72 + 2*tmp61*tmp74 - tmp70*tmp76);
J(2+_OFF,4+_OFF) = tmp12*(2*tmp61*tmp81 + 2*tmp66*tmp90 - tmp70*tmp99);
J(2+_OFF,5+_OFF) = tmp12*(-(tmp70*tmp104) + 2*tmp66*tmp113 + 2*tmp61*tmp122);
J(2+_OFF,6+_OFF) = tmp12*(2*tmp66*tmp127 - tmp70*tmp136 + 2*tmp61*tmp145);
J(3+_OFF,1+_OFF) = tmp12*(2*tmp150*tmp56 - tmp148*tmp58 + 2*tmp147*tmp59);
J(3+_OFF,2+_OFF) = tmp12*(2*tmp147*tmp63 - tmp148*tmp68 + 2*tmp150*tmp71);
J(3+_OFF,3+_OFF) = tmp12*(-(tmp148*tmp72) + 2*tmp147*tmp74 + 2*tmp150*tmp76);
J(3+_OFF,4+_OFF) = tmp12*(2*tmp147*tmp81 - tmp148*tmp90 + 2*tmp150*tmp99);
J(3+_OFF,5+_OFF) = tmp12*(2*tmp150*tmp104 - tmp148*tmp113 + 2*tmp147*tmp122);
J(3+_OFF,6+_OFF) = tmp12*(-(tmp148*tmp127) + 2*tmp150*tmp136 + 2*tmp147*tmp145);
