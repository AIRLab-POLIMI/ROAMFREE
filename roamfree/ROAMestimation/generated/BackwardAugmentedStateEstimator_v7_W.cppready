double tmp0 = x1(6+_OFF);
double tmp1 = x2(4+_OFF);
double tmp2 = qos(1+_OFF);
double tmp3 = qos(3+_OFF);
double tmp4 = qos(2+_OFF);
double tmp5 = qos(4+_OFF);
double tmp6 = x1(7+_OFF);
double tmp7 = x1(4+_OFF);
double tmp8 = x2(5+_OFF);
double tmp9 = x2(6+_OFF);
double tmp10 = std::pow(tmp3,2);
double tmp11 = std::pow(tmp5,2);
double tmp12 = x2(7+_OFF);
double tmp13 = 2*tmp10;
double tmp14 = 2*tmp11;
double tmp15 = -1 + tmp13 + tmp14;
double tmp16 = std::pow(tmp8,2);
double tmp17 = std::pow(tmp9,2);
double tmp18 = tmp1*tmp8;
double tmp19 = tmp9*tmp12;
double tmp20 = tmp18 + tmp19;
double tmp21 = 1/Dt12;
double tmp22 = x1(5+_OFF);
double tmp23 = tmp0*tmp1;
double tmp24 = tmp6*tmp8;
double tmp25 = -(tmp7*tmp9);
double tmp26 = -(tmp22*tmp12);
double tmp27 = std::pow(tmp4,2);
double tmp28 = 2*tmp16;
double tmp29 = 2*tmp17;
double tmp30 = -1 + tmp28 + tmp29;
double tmp31 = tmp1*tmp9;
double tmp32 = -(tmp8*tmp12);
double tmp33 = tmp31 + tmp32;
double tmp34 = tmp6*tmp1;
double tmp35 = -(tmp0*tmp8);
double tmp36 = tmp22*tmp9;
double tmp37 = -(tmp7*tmp12);
double tmp38 = tmp34 + tmp35 + tmp36 + tmp37;
double tmp39 = tmp22*tmp1;
double tmp40 = -(tmp7*tmp8);
double tmp41 = -(tmp6*tmp9);
double tmp42 = tmp0*tmp12;
double tmp43 = tmp39 + tmp40 + tmp41 + tmp42;
double tmp44 = tmp3*tmp43;
double tmp45 = -2*tmp16;
double tmp46 = -2*tmp17;
double tmp47 = 4*tmp16;
double tmp48 = 4*tmp17;
double tmp49 = -2 + tmp47 + tmp48;
part(1+_OFF) = 2*tmp21*(-2*tmp4*tmp3*tmp0*tmp1 - 2*tmp2*tmp5*tmp0*tmp1 + 2*tmp2*tmp3*tmp6*tmp1 - 2*tmp4*tmp5*tmp6*tmp1 + tmp7*tmp8 - 2*tmp10*tmp7*tmp8 - 2*tmp11*tmp7*tmp8 - 2*tmp2*tmp3*tmp0*tmp8 + 2*tmp4*tmp5*tmp0*tmp8 - 2*tmp4*tmp3*tmp6*tmp8 - 2*tmp2*tmp5*tmp6*tmp8 + 2*tmp4*tmp3*tmp7*tmp9 + 2*tmp2*tmp5*tmp7*tmp9 + tmp6*tmp9 - 2*tmp10*tmp6*tmp9 - 2*tmp11*tmp6*tmp9 - 2*tmp2*tmp3*tmp7*tmp12 + 2*tmp4*tmp5*tmp7*tmp12 - tmp0*tmp12 + 2*tmp10*tmp0*tmp12 + 2*tmp11*tmp0*tmp12 + tmp22*(tmp15*tmp1 + 2*tmp4*(-(tmp5*tmp9) + tmp3*tmp12) + 2*tmp2*(tmp3*tmp9 + tmp5*tmp12)) + Dt12*earthrate*(tmp15*tmp33 + tmp4*(tmp5*(1 + tmp45 + tmp46) + 2*tmp3*tmp20) + tmp2*(tmp3*tmp30 + 2*tmp5*tmp20)));
part(2+_OFF) = -2*tmp21*(-2*tmp2*tmp5*tmp22*tmp1 + tmp23 - 2*tmp11*tmp0*tmp1 + 2*tmp3*tmp5*tmp6*tmp1 + 2*tmp2*tmp5*tmp7*tmp8 - 2*tmp3*tmp5*tmp0*tmp8 + tmp24 - 2*tmp11*tmp6*tmp8 + tmp25 + 2*tmp11*tmp7*tmp9 + 2*tmp3*tmp5*tmp22*tmp9 + 2*tmp2*tmp5*tmp6*tmp9 - 2*tmp3*tmp5*tmp7*tmp12 + tmp26 + 2*tmp11*tmp22*tmp12 - 2*tmp2*tmp5*tmp0*tmp12 - 2*tmp27*(tmp23 + tmp24 + tmp25 + tmp26) + 2*tmp4*(tmp2*tmp38 + tmp44) + Dt12*earthrate*((-1 + 2*tmp27 + tmp14)*tmp20 + tmp3*(tmp5*tmp30 + 2*tmp4*tmp33) + tmp2*(tmp4*tmp30 + 2*tmp5*(-(tmp1*tmp9) + tmp8*tmp12))));
part(3+_OFF) = 2*tmp21*(-2*tmp3*tmp5*tmp0*tmp1 - tmp6*tmp1 + 2*tmp10*tmp6*tmp1 + tmp0*tmp8 - 2*tmp10*tmp0*tmp8 - 2*tmp3*tmp5*tmp6*tmp8 + 2*tmp3*tmp5*tmp7*tmp9 - tmp22*tmp9 + 2*tmp10*tmp22*tmp9 + tmp7*tmp12 - 2*tmp10*tmp7*tmp12 + 2*tmp3*tmp5*tmp22*tmp12 + 2*tmp27*tmp38 - 2*tmp4*tmp5*tmp43 - 2*tmp2*(tmp4*(-(tmp0*tmp1) - tmp6*tmp8 + tmp7*tmp9 + tmp22*tmp12) + tmp44)) + earthrate*(1 + tmp45 + tmp46 + tmp27*tmp49 + tmp10*tmp49 + 4*tmp3*(tmp5*tmp1*tmp8 - tmp2*tmp1*tmp9 + tmp2*tmp8*tmp12 + tmp5*tmp9*tmp12) - 4*tmp4*(tmp5*tmp33 + tmp2*tmp20));
