double tmp0 = x1(6+_OFF);
double tmp1 = -0.01*tmp0;
double tmp2 = 0. + tmp1;
double tmp3 = x2(4+_OFF);
double tmp4 = x1(7+_OFF);
double tmp5 = x2(5+_OFF);
double tmp6 = x1(4+_OFF);
double tmp7 = 0.01*tmp6;
double tmp8 = 0. + tmp7;
double tmp9 = x2(6+_OFF);
double tmp10 = x1(5+_OFF);
double tmp11 = x2(7+_OFF);
double tmp12 = -0.01*tmp4;
double tmp13 = 0. + tmp12;
double tmp14 = -0.01*tmp10;
double tmp15 = 0. + tmp14;
double tmp16 = 0.01*tmp4;
double tmp17 = 0. + tmp16;
double tmp18 = std::pow(qOS1,2);
double tmp19 = -tmp18;
double tmp20 = std::pow(qOS2,2);
double tmp21 = -tmp20;
double tmp22 = std::pow(qOS3,2);
double tmp23 = -tmp22;
double tmp24 = 1 + tmp19 + tmp21 + tmp23;
double tmp25 = std::sqrt(tmp24);
double tmp26 = -(qOS1*tmp8);
double tmp27 = 0.01*tmp10;
double tmp28 = 0. + tmp27;
double tmp29 = -(qOS2*tmp3);
double tmp30 = qOS3*tmp5;
double tmp31 = -(tmp25*tmp9);
double tmp32 = -(qOS1*tmp11);
double tmp33 = tmp29 + tmp30 + tmp31 + tmp32;
double tmp34 = tmp25*tmp2;
double tmp35 = qOS1*tmp3;
double tmp36 = tmp25*tmp5;
double tmp37 = qOS3*tmp9;
double tmp38 = -(qOS2*tmp11);
double tmp39 = tmp35 + tmp36 + tmp37 + tmp38;
double tmp40 = qOS1*tmp2;
double tmp41 = -(tmp25*tmp3);
double tmp42 = qOS1*tmp5;
double tmp43 = qOS2*tmp9;
double tmp44 = qOS3*tmp11;
double tmp45 = tmp41 + tmp42 + tmp43 + tmp44;
double tmp46 = tmp25*tmp8;
double tmp47 = qOS3*tmp3;
double tmp48 = qOS2*tmp5;
double tmp49 = -(qOS1*tmp9);
double tmp50 = tmp25*tmp11;
double tmp51 = tmp47 + tmp48 + tmp49 + tmp50;
double tmp52 = 0.01*tmp0;
double tmp53 = 0. + tmp52;
double tmp54 = -(qOS3*tmp8);
double tmp55 = tmp25*tmp13;
double tmp56 = -(qOS2*tmp8);
double tmp57 = qOS3*tmp15;
double tmp58 = tmp25*tmp15;
double tmp59 = qOS2*tmp13;
double tmp60 = tmp15*tmp9;
double tmp61 = tmp8*tmp11;
double tmp62 = tmp17*tmp3;
double tmp63 = tmp2*tmp5;
double tmp64 = -(tmp15*tmp9);
double tmp65 = -(tmp8*tmp11);
double tmp66 = tmp62 + tmp63 + tmp64 + tmp65;
double tmp67 = tmp2*tmp3;
double tmp68 = tmp8*tmp9;
double tmp69 = tmp2*tmp9;
double tmp70 = tmp8*tmp3;
double tmp71 = -(tmp2*tmp9);
double tmp72 = tmp28*tmp5;
double tmp73 = -(tmp13*tmp11);
double tmp74 = tmp70 + tmp72 + tmp71 + tmp73;
double tmp75 = tmp13*tmp3;
double tmp76 = -(tmp2*tmp5);
double tmp77 = tmp25*tmp3;
double tmp78 = -(qOS2*tmp9);
double tmp79 = tmp77 + tmp78;
double tmp80 = tmp8*tmp5;
double tmp81 = tmp2*tmp11;
double tmp82 = -(tmp8*tmp5);
double tmp83 = tmp13*tmp9;
double tmp84 = tmp15*tmp3;
double tmp85 = -(tmp13*tmp9);
double tmp86 = -(tmp53*tmp11);
double tmp87 = tmp84 + tmp80 + tmp85 + tmp86;
double tmp88 = tmp15*tmp11;
double tmp89 = -(tmp15*tmp5);
double tmp90 = tmp13*tmp5;
double tmp91 = -(tmp15*tmp11);
double tmp92 = -(tmp8*tmp3);
double tmp93 = tmp15*tmp5;
double tmp94 = tmp13*tmp11;
double tmp95 = -(tmp2*tmp3);
double tmp96 = tmp17*tmp5;
double tmp97 = -(tmp8*tmp9);
double tmp98 = -(tmp17*tmp5);
double tmp99 = tmp67 + tmp98 + tmp68 + tmp91;
double tmp100 = -(tmp17*tmp11);
double tmp101 = tmp93 + tmp69 + tmp100;
double tmp102 = -(tmp25*tmp101);
double tmp103 = -(tmp17*tmp3);
double tmp104 = tmp17*tmp11;
double tmp105 = tmp70 + tmp89 + tmp71 + tmp104;
double tmp106 = -(tmp28*tmp3);
double tmp107 = tmp28*tmp3;
double tmp108 = -(tmp2*tmp11);
double tmp109 = tmp107 + tmp82 + tmp83 + tmp108;
double tmp110 = -(qOS3*tmp11);
double tmp111 = tmp77 + tmp110;
double tmp112 = tmp28*tmp9;
double tmp113 = tmp63 + tmp112 + tmp65;
double tmp114 = -(tmp25*tmp113);
double tmp115 = -(tmp28*tmp9);
double tmp116 = tmp75 + tmp76 + tmp115 + tmp61;
double tmp117 = -(tmp28*tmp5);
double tmp118 = tmp53*tmp9;
double tmp119 = tmp70 + tmp89 + tmp118 + tmp73;
double tmp120 = tmp90 + tmp68 + tmp91;
double tmp121 = -(tmp25*tmp120);
double tmp122 = tmp53*tmp3;
double tmp123 = -(tmp13*tmp5);
double tmp124 = tmp122 + tmp123 + tmp97 + tmp88;
double tmp125 = -(tmp15*tmp3);
double tmp126 = tmp53*tmp11;
J(1+_OFF,4+_OFF) = tmp84 + tmp80 + tmp17*tmp9 + tmp81;
J(1+_OFF,5+_OFF) = tmp67 + tmp90 + tmp68 + tmp28*tmp11;
J(1+_OFF,6+_OFF) = tmp75 + tmp53*tmp5 + tmp60 + tmp61;
J(2+_OFF,4+_OFF) = -((qOS2*tmp8 + tmp57 + tmp34 - qOS1*tmp17)*tmp33) + (tmp26 + tmp58 - qOS3*tmp2 - qOS2*tmp17)*tmp39 + (tmp46 + qOS1*tmp15 - qOS2*tmp2 + qOS3*tmp17)*tmp45 - (tmp54 + qOS2*tmp15 + tmp40 + tmp25*tmp17)*tmp51;
J(2+_OFF,5+_OFF) = -((tmp26 + tmp25*tmp28 + qOS3*tmp2 + tmp59)*tmp33) + (tmp56 - qOS3*tmp28 + tmp34 - qOS1*tmp13)*tmp39 + (qOS3*tmp8 - qOS2*tmp28 + tmp40 + tmp55)*tmp45 - (tmp46 + qOS1*tmp28 + qOS2*tmp2 - qOS3*tmp13)*tmp51;
J(2+_OFF,6+_OFF) = -((tmp46 - qOS1*tmp15 + qOS2*tmp53 + qOS3*tmp13)*tmp33) + (tmp54 - qOS2*tmp15 - qOS1*tmp53 + tmp55)*tmp39 + (tmp56 + tmp57 + tmp25*tmp53 + qOS1*tmp13)*tmp45 - (qOS1*tmp8 + tmp58 - qOS3*tmp53 + tmp59)*tmp51;
J(3+_OFF,4+_OFF) = tmp103 + tmp76 + tmp60 + tmp61 + 2*tmp18*tmp66 + 2*tmp22*tmp66 + 2*qOS3*(tmp8*tmp79 + qOS2*(tmp95 + tmp96 + tmp88) + tmp102) - 2*qOS1*(tmp25*tmp99 + qOS2*tmp105);
J(3+_OFF,5+_OFF) = tmp92 + tmp117 + tmp69 + tmp94 + 2*tmp18*tmp74 + 2*tmp22*tmp74 - 2*qOS1*(qOS2*tmp116 + tmp25*tmp109) + 2*qOS3*(tmp13*tmp79 + tmp114 + qOS2*(tmp106 + tmp80 + tmp81));
J(3+_OFF,6+_OFF) = tmp125 + tmp82 + tmp83 + tmp126 + 2*tmp18*tmp87 + 2*tmp22*tmp87 - 2*qOS1*(qOS2*tmp124 + tmp25*tmp119) + 2*qOS3*(tmp53*tmp79 + tmp121 + qOS2*(tmp92 + tmp93 + tmp94));
J(4+_OFF,4+_OFF) = tmp95 + tmp96 + tmp97 + tmp88 + 2*tmp18*tmp99 + 2*tmp20*tmp99 - 2*qOS2*(qOS3*(tmp62 + tmp63 + tmp64) + tmp8*tmp111 + tmp102) - 2*qOS1*(tmp25*(tmp103 + tmp76 + tmp60 + tmp61) + qOS3*tmp105);
J(4+_OFF,5+_OFF) = tmp106 + tmp80 + tmp85 + tmp81 + 2*tmp18*tmp109 + 2*tmp20*tmp109 - 2*qOS2*(qOS3*(tmp70 + tmp72 + tmp71) + tmp13*tmp111 + tmp114) - 2*qOS1*(qOS3*tmp116 + tmp25*(tmp92 + tmp117 + tmp69 + tmp94));
J(4+_OFF,6+_OFF) = tmp92 + tmp93 - tmp53*tmp9 + tmp94 + 2*tmp18*tmp119 + 2*tmp20*tmp119 - 2*qOS2*(qOS3*(tmp84 + tmp80 + tmp85) + tmp53*tmp111 + tmp121) - 2*qOS1*(qOS3*tmp124 + tmp25*(tmp125 + tmp82 + tmp83 + tmp126));
