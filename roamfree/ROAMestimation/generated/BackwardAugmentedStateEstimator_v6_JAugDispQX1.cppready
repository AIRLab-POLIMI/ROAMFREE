double tmp0 = x1(6+_OFF);
double tmp1 = x2(4+_OFF);
double tmp2 = x1(7+_OFF);
double tmp3 = x2(5+_OFF);
double tmp4 = x1(4+_OFF);
double tmp5 = x2(6+_OFF);
double tmp6 = x1(5+_OFF);
double tmp7 = x2(7+_OFF);
double tmp8 = std::pow(qOS1,2);
double tmp9 = -tmp8;
double tmp10 = std::pow(qOS2,2);
double tmp11 = -tmp10;
double tmp12 = std::pow(qOS3,2);
double tmp13 = -tmp12;
double tmp14 = 1 + tmp9 + tmp11 + tmp13;
double tmp15 = std::sqrt(tmp14);
double tmp16 = -(qOS1*tmp4);
double tmp17 = -(qOS2*tmp2);
double tmp18 = -(qOS2*tmp1);
double tmp19 = qOS3*tmp3;
double tmp20 = -(tmp15*tmp5);
double tmp21 = -(qOS1*tmp7);
double tmp22 = tmp18 + tmp19 + tmp20 + tmp21;
double tmp23 = -(qOS3*tmp6);
double tmp24 = -(tmp15*tmp0);
double tmp25 = qOS1*tmp1;
double tmp26 = tmp15*tmp3;
double tmp27 = qOS3*tmp5;
double tmp28 = -(qOS2*tmp7);
double tmp29 = tmp25 + tmp26 + tmp27 + tmp28;
double tmp30 = -(qOS2*tmp6);
double tmp31 = -(qOS1*tmp0);
double tmp32 = -(tmp15*tmp1);
double tmp33 = qOS1*tmp3;
double tmp34 = qOS2*tmp5;
double tmp35 = qOS3*tmp7;
double tmp36 = tmp32 + tmp33 + tmp34 + tmp35;
double tmp37 = tmp15*tmp4;
double tmp38 = qOS3*tmp2;
double tmp39 = qOS3*tmp1;
double tmp40 = qOS2*tmp3;
double tmp41 = -(qOS1*tmp5);
double tmp42 = tmp15*tmp7;
double tmp43 = tmp39 + tmp40 + tmp41 + tmp42;
double tmp44 = qOS1*tmp6;
double tmp45 = qOS2*tmp0;
double tmp46 = -(qOS3*tmp4);
double tmp47 = -(tmp15*tmp2);
double tmp48 = -(qOS2*tmp4);
double tmp49 = -(qOS1*tmp2);
double tmp50 = -(tmp15*tmp6);
double tmp51 = -(qOS3*tmp0);
double tmp52 = -(tmp2*tmp1);
double tmp53 = tmp0*tmp3;
double tmp54 = -(tmp6*tmp5);
double tmp55 = tmp4*tmp7;
double tmp56 = tmp2*tmp1;
double tmp57 = -(tmp0*tmp3);
double tmp58 = tmp6*tmp5;
double tmp59 = -(tmp4*tmp7);
double tmp60 = tmp56 + tmp57 + tmp58 + tmp59;
double tmp61 = -(tmp0*tmp1);
double tmp62 = -(tmp2*tmp3);
double tmp63 = tmp4*tmp5;
double tmp64 = tmp6*tmp7;
double tmp65 = tmp61 + tmp62 + tmp63 + tmp64;
double tmp66 = -(tmp6*tmp3);
double tmp67 = -(tmp0*tmp5);
double tmp68 = -(tmp2*tmp7);
double tmp69 = tmp4*tmp1;
double tmp70 = tmp6*tmp3;
double tmp71 = tmp0*tmp5;
double tmp72 = tmp2*tmp7;
double tmp73 = tmp69 + tmp70 + tmp71 + tmp72;
double tmp74 = tmp15*tmp1;
double tmp75 = -(qOS2*tmp5);
double tmp76 = tmp74 + tmp75;
double tmp77 = -(tmp6*tmp1);
double tmp78 = tmp4*tmp3;
double tmp79 = -(tmp0*tmp7);
double tmp80 = tmp52 + tmp53 + tmp54 + tmp55;
double tmp81 = tmp6*tmp1;
double tmp82 = -(tmp4*tmp3);
double tmp83 = -(tmp2*tmp5);
double tmp84 = tmp0*tmp7;
double tmp85 = tmp2*tmp5;
double tmp86 = tmp77 + tmp78 + tmp85 + tmp79;
double tmp87 = -(tmp4*tmp1);
double tmp88 = tmp0*tmp1;
double tmp89 = tmp2*tmp3;
double tmp90 = -(tmp6*tmp7);
double tmp91 = -(tmp4*tmp5);
double tmp92 = tmp66 + tmp67 + tmp68;
double tmp93 = -(tmp15*tmp92);
double tmp94 = tmp81 + tmp82 + tmp83 + tmp84;
double tmp95 = -(qOS3*tmp7);
double tmp96 = tmp74 + tmp95;
double tmp97 = tmp57 + tmp58 + tmp59;
double tmp98 = -(tmp15*tmp97);
double tmp99 = 2*tmp8*tmp73;
double tmp100 = tmp62 + tmp63 + tmp64;
double tmp101 = -(tmp15*tmp100);
double tmp102 = tmp88 + tmp89 + tmp91 + tmp90;
double tmp103 = tmp15*tmp94;
J(1+_OFF,4+_OFF) = tmp86;
J(1+_OFF,5+_OFF) = tmp65;
J(1+_OFF,6+_OFF) = tmp80;
J(2+_OFF,4+_OFF) = -((qOS2*tmp4 + tmp23 + tmp24 + tmp49)*tmp22) + (tmp16 + tmp50 + qOS3*tmp0 + tmp17)*tmp29 + (tmp37 - qOS1*tmp6 + tmp45 + tmp38)*tmp36 - (tmp46 + tmp30 + tmp31 + tmp15*tmp2)*tmp43;
J(2+_OFF,5+_OFF) = -((tmp16 + tmp15*tmp6 + tmp51 + tmp17)*tmp22) + (tmp48 + tmp23 + tmp24 + qOS1*tmp2)*tmp29 + (qOS3*tmp4 + tmp30 + tmp31 + tmp47)*tmp36 - (tmp37 + tmp44 - qOS2*tmp0 + tmp38)*tmp43;
J(2+_OFF,6+_OFF) = -((tmp37 + tmp44 + tmp45 - qOS3*tmp2)*tmp22) + (tmp46 + qOS2*tmp6 + tmp31 + tmp47)*tmp29 + (tmp48 + tmp23 + tmp15*tmp0 + tmp49)*tmp36 - (qOS1*tmp4 + tmp50 + tmp51 + tmp17)*tmp43;
J(3+_OFF,4+_OFF) = tmp52 + tmp53 + tmp54 + tmp55 + 2*tmp8*tmp60 + 2*tmp12*tmp60 + 2*qOS3*(tmp4*tmp76 + qOS2*(tmp88 + tmp89 + tmp90) + tmp93) - 2*qOS1*(tmp15*tmp65 + qOS2*tmp73);
J(3+_OFF,5+_OFF) = tmp87 + tmp66 + tmp67 + tmp68 + tmp99 + 2*tmp12*tmp73 + 2*qOS3*(-(tmp2*tmp76) + tmp98 + qOS2*(tmp77 + tmp78 + tmp79)) - 2*qOS1*(qOS2*tmp80 + tmp103);
J(3+_OFF,6+_OFF) = tmp81 + tmp82 + tmp83 + tmp84 + 2*tmp8*tmp86 + 2*tmp12*tmp86 + 2*qOS3*(tmp0*tmp76 + tmp101 + qOS2*(tmp87 + tmp66 + tmp68)) - 2*qOS1*(qOS2*tmp102 + tmp15*tmp73);
J(4+_OFF,4+_OFF) = tmp88 + tmp89 + tmp91 + tmp90 + 2*tmp8*tmp65 + 2*tmp10*tmp65 - 2*qOS2*(qOS3*(tmp56 + tmp57 + tmp58) + tmp4*tmp96 + tmp93) - 2*qOS1*(tmp15*tmp80 + qOS3*tmp73);
J(4+_OFF,5+_OFF) = tmp77 + tmp78 + tmp85 + tmp79 + 2*tmp8*tmp94 + 2*tmp10*tmp94 - 2*qOS2*(qOS3*(tmp69 + tmp70 + tmp71) - tmp2*tmp96 + tmp98) - 2*qOS1*(qOS3*tmp80 + tmp15*(tmp87 + tmp66 + tmp67 + tmp68));
J(4+_OFF,6+_OFF) = tmp87 + tmp66 + tmp67 + tmp68 + tmp99 + 2*tmp10*tmp73 - 2*qOS2*(qOS3*(tmp77 + tmp78 + tmp85) + tmp0*tmp96 + tmp101) - 2*qOS1*(qOS3*tmp102 + tmp103);
