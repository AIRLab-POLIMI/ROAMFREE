double tmp0 = qos(1+_OFF);
double tmp1 = qos(3+_OFF);
double tmp2 = qos(2+_OFF);
double tmp3 = qos(4+_OFF);
double tmp4 = x2(4+_OFF);
double tmp5 = x2(6+_OFF);
double tmp6 = x2(5+_OFF);
double tmp7 = x2(7+_OFF);
double tmp8 = 1/Dt12;
double tmp9 = std::pow(tmp1,2);
double tmp10 = -2*tmp9;
double tmp11 = std::pow(tmp3,2);
double tmp12 = -2*tmp11;
double tmp13 = 1 + tmp10 + tmp12;
double tmp14 = tmp6*tmp5;
double tmp15 = tmp0*tmp1;
double tmp16 = -(tmp2*tmp3);
double tmp17 = tmp15 + tmp16;
double tmp18 = tmp2*tmp1;
double tmp19 = tmp0*tmp3;
double tmp20 = tmp18 + tmp19;
double tmp21 = std::pow(tmp7,2);
double tmp22 = 2*tmp21;
double tmp23 = std::pow(tmp6,2);
double tmp24 = 2*tmp23;
double tmp25 = std::pow(tmp5,2);
double tmp26 = 2*tmp25;
double tmp27 = tmp4*tmp5;
double tmp28 = tmp4*tmp6;
double tmp29 = so(3+_OFF);
double tmp30 = x1(6+_OFF);
double tmp31 = -0.01*tmp30;
double tmp32 = 0. + tmp31;
double tmp33 = so(2+_OFF);
double tmp34 = x1(7+_OFF);
double tmp35 = 0.01*tmp34;
double tmp36 = 0. + tmp35;
double tmp37 = x1(4+_OFF);
double tmp38 = 0.01*tmp37;
double tmp39 = 0. + tmp38;
double tmp40 = x1(5+_OFF);
double tmp41 = -0.01*tmp40;
double tmp42 = 0. + tmp41;
double tmp43 = so(1+_OFF);
double tmp44 = 0.01*tmp40;
double tmp45 = 0. + tmp44;
double tmp46 = -0.01*tmp34;
double tmp47 = 0. + tmp46;
double tmp48 = 2*tmp29*tmp39*tmp4;
double tmp49 = -2*tmp29*tmp32*tmp5;
double tmp50 = -2*tmp33*tmp39*tmp5;
double tmp51 = 2*tmp33*tmp42*tmp7;
double tmp52 = 0.01*tmp30;
double tmp53 = 0. + tmp52;
double tmp54 = -2*tmp43*tmp39*tmp4;
double tmp55 = 2*tmp43*tmp47*tmp7;
double tmp56 = -(tmp4*tmp7);
double tmp57 = tmp14 + tmp56;
double tmp58 = tmp6*tmp7;
double tmp59 = tmp27 + tmp58;
double tmp60 = -1 + tmp26 + tmp22;
double tmp61 = -(tmp0*tmp3);
double tmp62 = tmp18 + tmp61;
double tmp63 = tmp4*tmp7;
double tmp64 = tmp14 + tmp63;
double tmp65 = tmp0*tmp2;
double tmp66 = tmp1*tmp3;
double tmp67 = tmp65 + tmp66;
double tmp68 = -(tmp5*tmp7);
double tmp69 = tmp28 + tmp68;
double tmp70 = std::pow(tmp2,2);
double tmp71 = -2*tmp70;
double tmp72 = 1 + tmp71 + tmp12;
double tmp73 = -1 + tmp24 + tmp22;
double tmp74 = -1 + tmp24 + tmp26;
double tmp75 = -(tmp6*tmp7);
double tmp76 = tmp27 + tmp75;
double tmp77 = tmp5*tmp7;
double tmp78 = tmp28 + tmp77;
double tmp79 = -2*tmp33*tmp32*tmp4;
double tmp80 = 2*tmp29*tmp36*tmp4;
double tmp81 = 2*tmp29*tmp32*tmp6;
double tmp82 = 2*tmp33*tmp36*tmp6;
double tmp83 = -2*tmp29*tmp42*tmp5;
double tmp84 = -2*tmp29*tmp39*tmp7;
double tmp85 = tmp79 + tmp80 + tmp81 + tmp82 + tmp50 + tmp83 + tmp84 + tmp51;
double tmp86 = 2*tmp33*tmp39*tmp4;
double tmp87 = -2*tmp43*tmp36*tmp4;
double tmp88 = -2*tmp33*tmp42*tmp6;
double tmp89 = -2*tmp43*tmp32*tmp6;
double tmp90 = 2*tmp43*tmp42*tmp5;
double tmp91 = -2*tmp33*tmp32*tmp5;
double tmp92 = 2*tmp43*tmp39*tmp7;
double tmp93 = 2*tmp33*tmp36*tmp7;
double tmp94 = tmp86 + tmp87 + tmp88 + tmp89 + tmp90 + tmp91 + tmp92 + tmp93;
double tmp95 = -2*tmp43*tmp32*tmp4;
double tmp96 = -2*tmp29*tmp42*tmp6;
double tmp97 = 2*tmp43*tmp36*tmp6;
double tmp98 = -2*tmp43*tmp39*tmp5;
double tmp99 = 2*tmp43*tmp42*tmp7;
double tmp100 = 2*tmp29*tmp36*tmp7;
double tmp101 = tmp48 + tmp95 + tmp96 + tmp97 + tmp98 + tmp49 + tmp99 + tmp100;
double tmp102 = -2*tmp43*tmp45*tmp4;
double tmp103 = 2*tmp29*tmp47*tmp4;
double tmp104 = 2*tmp43*tmp39*tmp6;
double tmp105 = -2*tmp29*tmp32*tmp6;
double tmp106 = -2*tmp29*tmp45*tmp5;
double tmp107 = -2*tmp43*tmp47*tmp5;
double tmp108 = 2*tmp29*tmp39*tmp7;
double tmp109 = 2*tmp43*tmp32*tmp7;
double tmp110 = tmp102 + tmp103 + tmp104 + tmp105 + tmp106 + tmp107 + tmp108 + tmp109;
double tmp111 = 2*tmp33*tmp47*tmp4;
double tmp112 = -2*tmp43*tmp45*tmp6;
double tmp113 = -2*tmp33*tmp32*tmp6;
double tmp114 = -2*tmp33*tmp45*tmp5;
double tmp115 = 2*tmp43*tmp32*tmp5;
double tmp116 = 2*tmp33*tmp39*tmp7;
double tmp117 = tmp54 + tmp111 + tmp112 + tmp113 + tmp114 + tmp115 + tmp116 + tmp55;
double tmp118 = -2*tmp33*tmp45*tmp4;
double tmp119 = 2*tmp33*tmp39*tmp6;
double tmp120 = 2*tmp29*tmp45*tmp6;
double tmp121 = -2*tmp33*tmp47*tmp5;
double tmp122 = 2*tmp33*tmp32*tmp7;
double tmp123 = -2*tmp29*tmp47*tmp7;
double tmp124 = tmp48 + tmp118 + tmp119 + tmp120 + tmp49 + tmp121 + tmp122 + tmp123;
double tmp125 = -2*tmp43*tmp42*tmp4;
double tmp126 = 2*tmp33*tmp53*tmp4;
double tmp127 = -2*tmp43*tmp39*tmp6;
double tmp128 = -2*tmp33*tmp47*tmp6;
double tmp129 = 2*tmp43*tmp47*tmp5;
double tmp130 = 2*tmp43*tmp53*tmp7;
double tmp131 = tmp125 + tmp126 + tmp127 + tmp128 + tmp50 + tmp129 + tmp51 + tmp130;
double tmp132 = 2*tmp29*tmp53*tmp4;
double tmp133 = 2*tmp43*tmp42*tmp6;
double tmp134 = -2*tmp29*tmp47*tmp6;
double tmp135 = -2*tmp29*tmp39*tmp5;
double tmp136 = -2*tmp43*tmp53*tmp5;
double tmp137 = 2*tmp29*tmp42*tmp7;
double tmp138 = tmp54 + tmp132 + tmp133 + tmp134 + tmp135 + tmp136 + tmp137 + tmp55;
double tmp139 = -2*tmp33*tmp39*tmp4;
double tmp140 = 2*tmp29*tmp42*tmp4;
double tmp141 = 2*tmp29*tmp39*tmp6;
double tmp142 = 2*tmp33*tmp42*tmp6;
double tmp143 = -2*tmp33*tmp53*tmp5;
double tmp144 = -2*tmp29*tmp47*tmp5;
double tmp145 = -2*tmp29*tmp53*tmp7;
double tmp146 = 2*tmp33*tmp47*tmp7;
double tmp147 = tmp139 + tmp140 + tmp141 + tmp142 + tmp143 + tmp144 + tmp145 + tmp146;
double tmp148 = tmp2*tmp3;
double tmp149 = tmp15 + tmp148;
double tmp150 = 1 + tmp71 + tmp10;
double tmp151 = -(tmp1*tmp3);
double tmp152 = tmp65 + tmp151;
J(1+_OFF,1+_OFF) = tmp8*(-0.004*tmp20*tmp57 + 0.004*tmp17*tmp59 + 0.001*tmp13*tmp60);
J(1+_OFF,2+_OFF) = tmp8*(-0.002*tmp13*tmp64 - 0.004*tmp17*tmp69 + 0.002*tmp20*tmp73);
J(1+_OFF,3+_OFF) = tmp8*(-0.002*tmp17*tmp74 + 0.002*tmp13*tmp76 - 0.004*tmp20*tmp78);
J(1+_OFF,4+_OFF) = tmp8*(-(tmp13*tmp85) + 2*tmp17*tmp94 + 2*tmp20*tmp101);
J(1+_OFF,5+_OFF) = tmp8*(2*tmp20*tmp110 + 2*tmp17*tmp117 - tmp13*tmp124);
J(1+_OFF,6+_OFF) = tmp8*(2*tmp17*tmp131 + 2*tmp20*tmp138 - tmp13*tmp147);
J(2+_OFF,1+_OFF) = tmp8*(-0.002*tmp72*tmp57 - 0.004*tmp67*tmp59 + 0.002*tmp62*tmp60);
J(2+_OFF,2+_OFF) = tmp8*(-0.004*tmp62*tmp64 + 0.004*tmp67*tmp69 + 0.001*tmp72*tmp73);
J(2+_OFF,3+_OFF) = tmp8*(0.002*tmp67*tmp74 + 0.004*tmp62*tmp76 - 0.002*tmp72*tmp78);
J(2+_OFF,4+_OFF) = tmp8*(-2*tmp62*tmp85 - 2*tmp67*tmp94 + tmp72*tmp101);
J(2+_OFF,5+_OFF) = tmp8*(tmp72*tmp110 - 2*tmp67*tmp117 - 2*tmp62*tmp124);
J(2+_OFF,6+_OFF) = tmp8*(-2*tmp67*tmp131 + tmp72*tmp138 - 2*tmp62*tmp147);
J(3+_OFF,1+_OFF) = -(tmp8*(-0.004*tmp152*tmp57 + 0.002*tmp150*tmp59 - 0.002*tmp149*tmp60));
J(3+_OFF,2+_OFF) = -(tmp8*(0.004*tmp149*tmp64 - 0.002*tmp150*tmp69 + 0.002*tmp152*tmp73));
J(3+_OFF,3+_OFF) = -(tmp8*(-0.001*tmp150*tmp74 - 0.004*tmp149*tmp76 - 0.004*tmp152*tmp78));
J(3+_OFF,4+_OFF) = -(tmp8*(2*tmp149*tmp85 + tmp150*tmp94 + 2*tmp152*tmp101));
J(3+_OFF,5+_OFF) = -(tmp8*(2*tmp152*tmp110 + tmp150*tmp117 + 2*tmp149*tmp124));
J(3+_OFF,6+_OFF) = -(tmp8*(tmp150*tmp131 + 2*tmp152*tmp138 + 2*tmp149*tmp147));
