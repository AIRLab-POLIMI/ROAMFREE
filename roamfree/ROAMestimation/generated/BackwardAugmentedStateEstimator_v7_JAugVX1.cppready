double tmp0 = qos(1+_OFF);
double tmp1 = qos(3+_OFF);
double tmp2 = qos(2+_OFF);
double tmp3 = qos(4+_OFF);
double tmp4 = x2(4+_OFF);
double tmp5 = x2(6+_OFF);
double tmp6 = x2(5+_OFF);
double tmp7 = x2(7+_OFF);
double tmp8 = 1/Dt12;
double tmp9 = std::pow(tmp1,2);
double tmp10 = -2*tmp9;
double tmp11 = std::pow(tmp3,2);
double tmp12 = -2*tmp11;
double tmp13 = 1 + tmp10 + tmp12;
double tmp14 = tmp6*tmp5;
double tmp15 = tmp0*tmp1;
double tmp16 = -(tmp2*tmp3);
double tmp17 = tmp15 + tmp16;
double tmp18 = tmp2*tmp1;
double tmp19 = tmp0*tmp3;
double tmp20 = tmp18 + tmp19;
double tmp21 = std::pow(tmp7,2);
double tmp22 = 2*tmp21;
double tmp23 = std::pow(tmp6,2);
double tmp24 = std::pow(tmp5,2);
double tmp25 = so(3+_OFF);
double tmp26 = x1(6+_OFF);
double tmp27 = -0.01*tmp26;
double tmp28 = 0. + tmp27;
double tmp29 = so(2+_OFF);
double tmp30 = x1(7+_OFF);
double tmp31 = 0.01*tmp30;
double tmp32 = 0. + tmp31;
double tmp33 = x1(4+_OFF);
double tmp34 = 0.01*tmp33;
double tmp35 = 0. + tmp34;
double tmp36 = x1(5+_OFF);
double tmp37 = -0.01*tmp36;
double tmp38 = 0. + tmp37;
double tmp39 = so(1+_OFF);
double tmp40 = 0.01*tmp36;
double tmp41 = 0. + tmp40;
double tmp42 = -0.01*tmp30;
double tmp43 = 0. + tmp42;
double tmp44 = 2*tmp25*tmp35*tmp4;
double tmp45 = -2*tmp25*tmp28*tmp5;
double tmp46 = 0.01*tmp26;
double tmp47 = 0. + tmp46;
double tmp48 = -(tmp4*tmp7);
double tmp49 = tmp14 + tmp48;
double tmp50 = 2*tmp24;
double tmp51 = -1 + tmp50 + tmp22;
double tmp52 = -(tmp0*tmp3);
double tmp53 = tmp18 + tmp52;
double tmp54 = tmp4*tmp7;
double tmp55 = tmp14 + tmp54;
double tmp56 = tmp0*tmp2;
double tmp57 = tmp1*tmp3;
double tmp58 = tmp56 + tmp57;
double tmp59 = std::pow(tmp2,2);
double tmp60 = -2*tmp59;
double tmp61 = 1 + tmp60 + tmp12;
double tmp62 = 2*tmp23;
double tmp63 = -1 + tmp62 + tmp22;
double tmp64 = tmp4*tmp5;
double tmp65 = -(tmp6*tmp7);
double tmp66 = tmp64 + tmp65;
double tmp67 = tmp4*tmp6;
double tmp68 = tmp5*tmp7;
double tmp69 = tmp67 + tmp68;
double tmp70 = -2*tmp29*tmp28*tmp4;
double tmp71 = 2*tmp25*tmp32*tmp4;
double tmp72 = 2*tmp25*tmp28*tmp6;
double tmp73 = 2*tmp29*tmp32*tmp6;
double tmp74 = -2*tmp29*tmp35*tmp5;
double tmp75 = -2*tmp25*tmp38*tmp5;
double tmp76 = -2*tmp25*tmp35*tmp7;
double tmp77 = 2*tmp29*tmp38*tmp7;
double tmp78 = tmp70 + tmp71 + tmp72 + tmp73 + tmp74 + tmp75 + tmp76 + tmp77;
double tmp79 = -2*tmp39*tmp28*tmp4;
double tmp80 = -2*tmp25*tmp38*tmp6;
double tmp81 = 2*tmp39*tmp32*tmp6;
double tmp82 = -2*tmp39*tmp35*tmp5;
double tmp83 = 2*tmp39*tmp38*tmp7;
double tmp84 = 2*tmp25*tmp32*tmp7;
double tmp85 = tmp44 + tmp79 + tmp80 + tmp81 + tmp82 + tmp45 + tmp83 + tmp84;
double tmp86 = -2*tmp39*tmp41*tmp4;
double tmp87 = 2*tmp25*tmp43*tmp4;
double tmp88 = 2*tmp39*tmp35*tmp6;
double tmp89 = -2*tmp25*tmp28*tmp6;
double tmp90 = -2*tmp25*tmp41*tmp5;
double tmp91 = -2*tmp39*tmp43*tmp5;
double tmp92 = 2*tmp25*tmp35*tmp7;
double tmp93 = 2*tmp39*tmp28*tmp7;
double tmp94 = tmp86 + tmp87 + tmp88 + tmp89 + tmp90 + tmp91 + tmp92 + tmp93;
double tmp95 = -2*tmp29*tmp41*tmp4;
double tmp96 = 2*tmp29*tmp35*tmp6;
double tmp97 = 2*tmp25*tmp41*tmp6;
double tmp98 = -2*tmp29*tmp43*tmp5;
double tmp99 = 2*tmp29*tmp28*tmp7;
double tmp100 = -2*tmp25*tmp43*tmp7;
double tmp101 = tmp44 + tmp95 + tmp96 + tmp97 + tmp45 + tmp98 + tmp99 + tmp100;
double tmp102 = -2*tmp39*tmp35*tmp4;
double tmp103 = 2*tmp25*tmp47*tmp4;
double tmp104 = 2*tmp39*tmp38*tmp6;
double tmp105 = -2*tmp25*tmp43*tmp6;
double tmp106 = -2*tmp25*tmp35*tmp5;
double tmp107 = -2*tmp39*tmp47*tmp5;
double tmp108 = 2*tmp25*tmp38*tmp7;
double tmp109 = 2*tmp39*tmp43*tmp7;
double tmp110 = tmp102 + tmp103 + tmp104 + tmp105 + tmp106 + tmp107 + tmp108 + tmp109;
double tmp111 = -2*tmp29*tmp35*tmp4;
double tmp112 = 2*tmp25*tmp38*tmp4;
double tmp113 = 2*tmp25*tmp35*tmp6;
double tmp114 = 2*tmp29*tmp38*tmp6;
double tmp115 = -2*tmp29*tmp47*tmp5;
double tmp116 = -2*tmp25*tmp43*tmp5;
double tmp117 = -2*tmp25*tmp47*tmp7;
double tmp118 = 2*tmp29*tmp43*tmp7;
double tmp119 = tmp111 + tmp112 + tmp113 + tmp114 + tmp115 + tmp116 + tmp117 + tmp118;
double tmp120 = -0.001*tmp4*tmp5;
double tmp121 = -0.001*tmp6*tmp7;
double tmp122 = tmp120 + tmp121;
double tmp123 = tmp2*tmp3;
double tmp124 = tmp15 + tmp123;
double tmp125 = 2*tmp59;
double tmp126 = 2*tmp9;
double tmp127 = -1 + tmp125 + tmp126;
double tmp128 = 0.001*tmp4*tmp6;
double tmp129 = -0.001*tmp5*tmp7;
double tmp130 = tmp128 + tmp129;
double tmp131 = -(tmp1*tmp3);
double tmp132 = tmp56 + tmp131;
double tmp133 = -1 + tmp62 + tmp50;
double tmp134 = -(tmp29*tmp35*tmp4);
double tmp135 = tmp39*tmp32*tmp4;
double tmp136 = tmp29*tmp38*tmp6;
double tmp137 = tmp39*tmp28*tmp6;
double tmp138 = -(tmp39*tmp38*tmp5);
double tmp139 = tmp29*tmp28*tmp5;
double tmp140 = -(tmp39*tmp35*tmp7);
double tmp141 = -(tmp29*tmp32*tmp7);
double tmp142 = tmp134 + tmp135 + tmp136 + tmp137 + tmp138 + tmp139 + tmp140 + tmp141;
double tmp143 = tmp39*tmp35*tmp4;
double tmp144 = -(tmp29*tmp43*tmp4);
double tmp145 = tmp39*tmp41*tmp6;
double tmp146 = tmp29*tmp28*tmp6;
double tmp147 = tmp29*tmp41*tmp5;
double tmp148 = -(tmp39*tmp28*tmp5);
double tmp149 = -(tmp29*tmp35*tmp7);
double tmp150 = -(tmp39*tmp43*tmp7);
double tmp151 = tmp143 + tmp144 + tmp145 + tmp146 + tmp147 + tmp148 + tmp149 + tmp150;
double tmp152 = tmp39*tmp38*tmp4;
double tmp153 = -(tmp29*tmp47*tmp4);
double tmp154 = tmp39*tmp35*tmp6;
double tmp155 = tmp29*tmp43*tmp6;
double tmp156 = tmp29*tmp35*tmp5;
double tmp157 = -(tmp39*tmp43*tmp5);
double tmp158 = -(tmp29*tmp38*tmp7);
double tmp159 = -(tmp39*tmp47*tmp7);
double tmp160 = tmp152 + tmp153 + tmp154 + tmp155 + tmp156 + tmp157 + tmp158 + tmp159;
J(1+_OFF,1+_OFF) = tmp8*(-0.004*tmp20*tmp49 + 4*tmp17*(0.001*tmp4*tmp5 + 0.001*tmp6*tmp7) + 0.001*tmp13*tmp51);
J(1+_OFF,2+_OFF) = tmp8*(-0.002*tmp13*tmp55 + 4*tmp17*(-0.001*tmp4*tmp6 + 0.001*tmp5*tmp7) + 0.002*tmp20*tmp63);
J(1+_OFF,3+_OFF) = tmp8*(0.002*tmp17*(1 - 2*tmp23 - 2*tmp24) + 0.002*tmp13*tmp66 - 0.004*tmp20*tmp69);
J(1+_OFF,4+_OFF) = tmp8*(-(tmp13*tmp78) + 4*tmp17*(tmp29*tmp35*tmp4 - tmp39*tmp32*tmp4 - tmp29*tmp38*tmp6 - tmp39*tmp28*tmp6 + tmp39*tmp38*tmp5 - tmp29*tmp28*tmp5 + tmp39*tmp35*tmp7 + tmp29*tmp32*tmp7) + 2*tmp20*tmp85);
J(1+_OFF,5+_OFF) = tmp8*(2*tmp20*tmp94 + 4*tmp17*(-(tmp39*tmp35*tmp4) + tmp29*tmp43*tmp4 - tmp39*tmp41*tmp6 - tmp29*tmp28*tmp6 - tmp29*tmp41*tmp5 + tmp39*tmp28*tmp5 + tmp29*tmp35*tmp7 + tmp39*tmp43*tmp7) - tmp13*tmp101);
J(1+_OFF,6+_OFF) = tmp8*(4*tmp17*(-(tmp39*tmp38*tmp4) + tmp29*tmp47*tmp4 - tmp39*tmp35*tmp6 - tmp29*tmp43*tmp6 - tmp29*tmp35*tmp5 + tmp39*tmp43*tmp5 + tmp29*tmp38*tmp7 + tmp39*tmp47*tmp7) + 2*tmp20*tmp110 - tmp13*tmp119);
J(2+_OFF,1+_OFF) = tmp8*(-0.002*tmp61*tmp49 + 4*tmp58*tmp122 + 0.002*tmp53*tmp51);
J(2+_OFF,2+_OFF) = tmp8*(-0.004*tmp53*tmp55 + 4*tmp58*tmp130 + 0.001*tmp61*tmp63);
J(2+_OFF,3+_OFF) = tmp8*(0.002*tmp58*tmp133 + 0.004*tmp53*tmp66 - 0.002*tmp61*tmp69);
J(2+_OFF,4+_OFF) = tmp8*(-2*tmp53*tmp78 + 4*tmp58*tmp142 + tmp61*tmp85);
J(2+_OFF,5+_OFF) = tmp8*(tmp61*tmp94 + 4*tmp58*tmp151 - 2*tmp53*tmp101);
J(2+_OFF,6+_OFF) = tmp8*(4*tmp58*tmp160 + tmp61*tmp110 - 2*tmp53*tmp119);
J(3+_OFF,1+_OFF) = -(tmp8*(-0.004*tmp132*tmp49 + 2*tmp127*tmp122 - 0.002*tmp124*tmp51));
J(3+_OFF,2+_OFF) = -(tmp8*(0.004*tmp124*tmp55 + 2*tmp127*tmp130 + 0.002*tmp132*tmp63));
J(3+_OFF,3+_OFF) = -(tmp8*(0.001*tmp127*tmp133 - 0.004*tmp124*tmp66 - 0.004*tmp132*tmp69));
J(3+_OFF,4+_OFF) = -(tmp8*(2*tmp124*tmp78 + 2*tmp127*tmp142 + 2*tmp132*tmp85));
J(3+_OFF,5+_OFF) = -(tmp8*(2*tmp132*tmp94 + 2*tmp127*tmp151 + 2*tmp124*tmp101));
J(3+_OFF,6+_OFF) = -(tmp8*(2*tmp127*tmp160 + 2*tmp132*tmp110 + 2*tmp124*tmp119));
