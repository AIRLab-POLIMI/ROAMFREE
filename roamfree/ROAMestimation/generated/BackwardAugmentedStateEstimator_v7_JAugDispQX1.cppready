double tmp0 = x1(6+_OFF);
double tmp1 = -0.01*tmp0;
double tmp2 = 0. + tmp1;
double tmp3 = x2(4+_OFF);
double tmp4 = x1(7+_OFF);
double tmp5 = x2(5+_OFF);
double tmp6 = x1(4+_OFF);
double tmp7 = 0.01*tmp6;
double tmp8 = 0. + tmp7;
double tmp9 = x2(6+_OFF);
double tmp10 = x1(5+_OFF);
double tmp11 = x2(7+_OFF);
double tmp12 = -0.01*tmp4;
double tmp13 = 0. + tmp12;
double tmp14 = -0.01*tmp10;
double tmp15 = 0. + tmp14;
double tmp16 = 0.01*tmp4;
double tmp17 = 0. + tmp16;
double tmp18 = qos(4+_OFF);
double tmp19 = qos(3+_OFF);
double tmp20 = qos(2+_OFF);
double tmp21 = qos(1+_OFF);
double tmp22 = tmp21*tmp8;
double tmp23 = 0.01*tmp10;
double tmp24 = 0. + tmp23;
double tmp25 = tmp18*tmp3;
double tmp26 = tmp19*tmp5;
double tmp27 = -(tmp20*tmp9);
double tmp28 = tmp21*tmp11;
double tmp29 = tmp25 + tmp26 + tmp27 + tmp28;
double tmp30 = -(tmp20*tmp8);
double tmp31 = -(tmp19*tmp3);
double tmp32 = tmp18*tmp5;
double tmp33 = -(tmp21*tmp9);
double tmp34 = -(tmp20*tmp11);
double tmp35 = tmp31 + tmp32 + tmp33 + tmp34;
double tmp36 = tmp21*tmp2;
double tmp37 = tmp20*tmp3;
double tmp38 = tmp21*tmp5;
double tmp39 = tmp18*tmp9;
double tmp40 = -(tmp19*tmp11);
double tmp41 = tmp37 + tmp38 + tmp39 + tmp40;
double tmp42 = tmp20*tmp2;
double tmp43 = -(tmp21*tmp3);
double tmp44 = tmp20*tmp5;
double tmp45 = tmp19*tmp9;
double tmp46 = tmp18*tmp11;
double tmp47 = tmp43 + tmp44 + tmp45 + tmp46;
double tmp48 = tmp21*tmp15;
double tmp49 = 0.01*tmp0;
double tmp50 = 0. + tmp49;
double tmp51 = tmp19*tmp13;
double tmp52 = -(tmp18*tmp8);
double tmp53 = tmp21*tmp13;
double tmp54 = -(tmp19*tmp8);
double tmp55 = tmp18*tmp15;
double tmp56 = tmp20*tmp15;
double tmp57 = -(tmp19*tmp2);
double tmp58 = tmp18*tmp17;
double tmp59 = tmp22 + tmp56 + tmp57 + tmp58;
double tmp60 = -(tmp18*tmp2);
double tmp61 = -(tmp19*tmp17);
double tmp62 = tmp30 + tmp48 + tmp60 + tmp61;
double tmp63 = tmp19*tmp8;
double tmp64 = -(tmp20*tmp17);
double tmp65 = tmp63 + tmp55 + tmp36 + tmp64;
double tmp66 = tmp19*tmp15;
double tmp67 = tmp21*tmp17;
double tmp68 = tmp52 + tmp66 + tmp42 + tmp67;
double tmp69 = tmp18*tmp8;
double tmp70 = -(tmp19*tmp24);
double tmp71 = tmp69 + tmp70 + tmp42 + tmp53;
double tmp72 = -(tmp18*tmp3);
double tmp73 = -(tmp19*tmp5);
double tmp74 = tmp20*tmp9;
double tmp75 = -(tmp21*tmp11);
double tmp76 = tmp72 + tmp73 + tmp74 + tmp75;
double tmp77 = -(tmp18*tmp24);
double tmp78 = -(tmp20*tmp13);
double tmp79 = tmp54 + tmp77 + tmp36 + tmp78;
double tmp80 = tmp19*tmp3;
double tmp81 = -(tmp18*tmp5);
double tmp82 = tmp21*tmp9;
double tmp83 = tmp20*tmp11;
double tmp84 = tmp80 + tmp81 + tmp82 + tmp83;
double tmp85 = tmp21*tmp24;
double tmp86 = tmp18*tmp2;
double tmp87 = tmp30 + tmp85 + tmp86 + tmp51;
double tmp88 = tmp20*tmp24;
double tmp89 = tmp19*tmp2;
double tmp90 = -(tmp18*tmp13);
double tmp91 = tmp22 + tmp88 + tmp89 + tmp90;
double tmp92 = tmp21*tmp50;
double tmp93 = tmp20*tmp13;
double tmp94 = tmp54 + tmp55 + tmp92 + tmp93;
double tmp95 = -(tmp19*tmp15);
double tmp96 = -(tmp20*tmp50);
double tmp97 = tmp52 + tmp95 + tmp96 + tmp53;
double tmp98 = -(tmp20*tmp15);
double tmp99 = tmp19*tmp50;
double tmp100 = tmp18*tmp13;
double tmp101 = tmp22 + tmp98 + tmp99 + tmp100;
double tmp102 = tmp20*tmp8;
double tmp103 = -(tmp18*tmp50);
double tmp104 = tmp102 + tmp48 + tmp103 + tmp51;
double tmp105 = -(tmp20*tmp3);
double tmp106 = -(tmp21*tmp5);
double tmp107 = -(tmp18*tmp9);
double tmp108 = tmp19*tmp11;
double tmp109 = tmp105 + tmp106 + tmp107 + tmp108;
J(1+_OFF,4+_OFF) = tmp15*tmp3 + tmp8*tmp5 + tmp17*tmp9 + tmp2*tmp11;
J(1+_OFF,5+_OFF) = tmp2*tmp3 + tmp13*tmp5 + tmp8*tmp9 + tmp24*tmp11;
J(1+_OFF,6+_OFF) = tmp13*tmp3 + tmp50*tmp5 + tmp15*tmp9 + tmp8*tmp11;
J(2+_OFF,4+_OFF) = -(tmp68*tmp29) - tmp65*tmp35 + tmp62*tmp41 + tmp59*tmp47;
J(2+_OFF,5+_OFF) = -(tmp91*tmp29) - tmp87*tmp35 + tmp79*tmp41 + tmp71*tmp47;
J(2+_OFF,6+_OFF) = -(tmp104*tmp29) - tmp101*tmp35 + tmp97*tmp41 + tmp94*tmp47;
J(3+_OFF,4+_OFF) = -(tmp59*tmp76) + tmp62*tmp84 - tmp65*tmp41 + tmp68*tmp47;
J(3+_OFF,5+_OFF) = -(tmp71*tmp76) + tmp79*tmp84 - tmp87*tmp41 + tmp91*tmp47;
J(3+_OFF,6+_OFF) = -(tmp94*tmp76) + tmp97*tmp84 - tmp101*tmp41 + tmp104*tmp47;
J(4+_OFF,4+_OFF) = tmp62*tmp29 - tmp59*tmp84 - tmp68*tmp109 + tmp65*tmp47;
J(4+_OFF,5+_OFF) = tmp79*tmp29 - tmp71*tmp84 - tmp91*tmp109 + tmp87*tmp47;
J(4+_OFF,6+_OFF) = tmp97*tmp29 - tmp94*tmp84 - tmp104*tmp109 + tmp101*tmp47;
