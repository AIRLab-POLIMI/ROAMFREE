double tmp0 = std::pow(qOS2,2);
double tmp1 = -2*tmp0;
double tmp2 = std::pow(qOS3,2);
double tmp3 = -2*tmp2;
double tmp4 = 1 + tmp1 + tmp3;
double tmp5 = x1(5+_OFF);
double tmp6 = x1(6+_OFF);
double tmp7 = x1(7+_OFF);
double tmp8 = x1(4+_OFF);
double tmp9 = qOS3*tmp6;
double tmp10 = -(qOS2*tmp7);
double tmp11 = tmp9 + tmp10;
double tmp12 = std::pow(qOS1,2);
double tmp13 = -tmp12;
double tmp14 = -tmp0;
double tmp15 = -tmp2;
double tmp16 = 1 + tmp13 + tmp14 + tmp15;
double tmp17 = std::sqrt(tmp16);
double tmp18 = qOS2*tmp6;
double tmp19 = qOS3*tmp7;
double tmp20 = tmp18 + tmp19;
double tmp21 = qOS2*tmp8;
double tmp22 = -(qOS3*tmp5);
double tmp23 = tmp17*tmp6;
double tmp24 = qOS1*tmp7;
double tmp25 = tmp21 + tmp22 + tmp23 + tmp24;
double tmp26 = qOS1*tmp8;
double tmp27 = tmp17*tmp5;
double tmp28 = tmp26 + tmp27 + tmp9 + tmp10;
double tmp29 = qOS3*tmp8;
double tmp30 = qOS2*tmp5;
double tmp31 = -(qOS1*tmp6);
double tmp32 = tmp17*tmp7;
double tmp33 = tmp29 + tmp30 + tmp31 + tmp32;
double tmp34 = tmp25*tmp28;
double tmp35 = -(tmp17*tmp8);
double tmp36 = qOS1*tmp5;
double tmp37 = tmp35 + tmp36 + tmp18 + tmp19;
double tmp38 = -(tmp37*tmp33);
double tmp39 = tmp34 + tmp38;
double tmp40 = std::pow(tmp8,2);
double tmp41 = std::pow(tmp5,2);
double tmp42 = std::pow(tmp6,2);
double tmp43 = std::pow(tmp7,2);
double tmp44 = tmp17*tmp8;
double tmp45 = -(qOS1*tmp5);
double tmp46 = -(qOS2*tmp6);
double tmp47 = -(qOS3*tmp7);
double tmp48 = tmp44 + tmp45 + tmp46 + tmp47;
double tmp49 = -(tmp25*tmp48);
double tmp50 = tmp28*tmp33;
double tmp51 = tmp49 + tmp50;
double tmp52 = -tmp41;
double tmp53 = 2*tmp0;
double tmp54 = 2*tmp2;
double tmp55 = -1 + tmp53 + tmp54;
double tmp56 = tmp42 + tmp43;
double tmp57 = tmp17*tmp11;
double tmp58 = qOS1*tmp20;
double tmp59 = tmp57 + tmp58;
double tmp60 = qOS1*tmp11;
double tmp61 = -(tmp17*tmp20);
double tmp62 = tmp60 + tmp61;
double tmp63 = -(qOS3*tmp6);
double tmp64 = qOS2*tmp7;
double tmp65 = tmp63 + tmp64;
double tmp66 = x2(6+_OFF);
double tmp67 = x2(7+_OFF);
double tmp68 = x2(4+_OFF);
double tmp69 = x2(5+_OFF);
double tmp70 = std::pow(tmp66,2);
double tmp71 = tmp44 + tmp45 + tmp18 + tmp19;
double tmp72 = -(tmp17*tmp6);
double tmp73 = -(qOS1*tmp7);
double tmp74 = tmp21 + tmp22 + tmp72 + tmp73;
double tmp75 = -(qOS3*tmp8);
double tmp76 = -(qOS2*tmp5);
double tmp77 = tmp75 + tmp76 + tmp31 + tmp32;
double tmp78 = std::pow(tmp69,2);
double tmp79 = std::pow(tmp67,2);
double tmp80 = tmp8*tmp5;
double tmp81 = -(tmp68*tmp69);
double tmp82 = 2*sO1*tmp43;
double tmp83 = -2*tmp5*tmp6;
double tmp84 = -tmp42;
double tmp85 = -tmp43;
double tmp86 = tmp4*tmp40;
double tmp87 = tmp4*tmp41;
double tmp88 = tmp55*tmp56;
double tmp89 = 4*tmp5*tmp59;
double tmp90 = 4*tmp8*tmp62;
double tmp91 = tmp86 + tmp87 + tmp88 + tmp89 + tmp90;
double tmp92 = tmp29 + tmp76;
double tmp93 = qOS3*tmp5;
double tmp94 = tmp21 + tmp93;
double tmp95 = x1(1+_OFF);
double tmp96 = -tmp95;
double tmp97 = -2*sO2*tmp5*tmp6;
double tmp98 = 2*sO1*tmp42;
double tmp99 = 2*sO2*tmp8*tmp7;
double tmp100 = x2(1+_OFF);
double tmp101 = 2*sO2*tmp69*tmp66;
double tmp102 = -2*sO1*tmp70;
double tmp103 = -2*sO2*tmp68*tmp67;
double tmp104 = -2*sO1*tmp79;
double tmp105 = tmp8*tmp6;
double tmp106 = tmp5*tmp7;
double tmp107 = -(tmp68*tmp66);
double tmp108 = -(tmp69*tmp67);
double tmp109 = tmp105 + tmp106 + tmp107 + tmp108;
double tmp110 = -2*sO3*tmp109;
double tmp111 = tmp96 + tmp97 + tmp98 + tmp99 + tmp82 + tmp100 + tmp101 + tmp102 + tmp103 + tmp104 + tmp110;
double tmp112 = -(qOS1*tmp8);
double tmp113 = x1(3+_OFF);
double tmp114 = -tmp113;
double tmp115 = 2*sO3*tmp41;
double tmp116 = 2*sO1*tmp8*tmp6;
double tmp117 = 2*sO3*tmp42;
double tmp118 = -2*sO1*tmp5*tmp7;
double tmp119 = x2(3+_OFF);
double tmp120 = -2*sO3*tmp78;
double tmp121 = -2*sO1*tmp68*tmp66;
double tmp122 = -2*sO3*tmp70;
double tmp123 = 2*sO1*tmp69*tmp67;
double tmp124 = tmp6*tmp7;
double tmp125 = -(tmp66*tmp67);
double tmp126 = tmp80 + tmp124 + tmp81 + tmp125;
double tmp127 = -2*sO2*tmp126;
double tmp128 = tmp114 + tmp115 + tmp116 + tmp117 + tmp118 + tmp119 + tmp120 + tmp121 + tmp122 + tmp123 + tmp127;
double tmp129 = tmp44 + tmp36 + tmp46 + tmp19;
double tmp130 = tmp112 + tmp27 + tmp63 + tmp10;
double tmp131 = -(tmp17*tmp7);
double tmp132 = tmp29 + tmp76 + tmp31 + tmp131;
double tmp133 = x1(2+_OFF);
double tmp134 = -tmp133;
double tmp135 = 2*sO2*tmp41;
double tmp136 = -2*sO1*tmp5*tmp6;
double tmp137 = -2*sO1*tmp8*tmp7;
double tmp138 = 2*sO2*tmp43;
double tmp139 = x2(2+_OFF);
double tmp140 = -2*sO2*tmp78;
double tmp141 = 2*sO1*tmp69*tmp66;
double tmp142 = 2*sO1*tmp68*tmp67;
double tmp143 = -2*sO2*tmp79;
double tmp144 = -(tmp6*tmp7);
double tmp145 = tmp66*tmp67;
double tmp146 = tmp80 + tmp144 + tmp81 + tmp145;
double tmp147 = 2*sO3*tmp146;
double tmp148 = tmp134 + tmp135 + tmp136 + tmp137 + tmp138 + tmp139 + tmp140 + tmp141 + tmp142 + tmp143 + tmp147;
double tmp149 = -2*sO1*tmp42;
double tmp150 = -4*sO1*tmp8*tmp5;
double tmp151 = 2*tmp8*tmp6;
double tmp152 = -(qOS2*tmp8);
double tmp153 = qOS1*tmp92;
double tmp154 = tmp152 + tmp22;
double tmp155 = 2*tmp8*tmp7;
double tmp156 = tmp83 + tmp155;
double tmp157 = -(tmp17*tmp5);
double tmp158 = tmp152 + tmp22 + tmp23 + tmp73;
double tmp159 = tmp26 + tmp157 + tmp63 + tmp10;
double tmp160 = tmp44 + tmp36 + tmp18 + tmp47;
double tmp161 = 4*tmp41;
double tmp162 = 4*tmp43;
double tmp163 = -2 + tmp161 + tmp162;
double tmp164 = tmp37*tmp33;
double tmp165 = tmp34 + tmp164;
double tmp166 = -4*sO2*tmp8*tmp6;
double tmp167 = -4*sO2*tmp5*tmp7;
double tmp168 = -2*sO3*tmp156;
double tmp169 = tmp166 + tmp167 + tmp168;
double tmp170 = -(tmp28*tmp37);
double tmp171 = tmp25*tmp33;
double tmp172 = tmp170 + tmp171;
double tmp173 = 4*sO3*tmp8*tmp5;
double tmp174 = 4*sO3*tmp6*tmp7;
double tmp175 = tmp40 + tmp52 + tmp84 + tmp43;
double tmp176 = -2*sO2*tmp175;
double tmp177 = tmp173 + tmp174 + tmp176;
double tmp178 = 4*sO2*tmp8*tmp5;
double tmp179 = -4*sO2*tmp6*tmp7;
double tmp180 = tmp40 + tmp52 + tmp42 + tmp85;
double tmp181 = 2*sO3*tmp180;
double tmp182 = tmp178 + tmp179 + tmp181;
double tmp183 = tmp157 + tmp64;
double tmp184 = tmp8*tmp183;
double tmp185 = tmp30 + tmp32;
double tmp186 = tmp6*tmp185;
double tmp187 = tmp184 + tmp186;
double tmp188 = tmp5*tmp6;
double tmp189 = tmp8*tmp7;
double tmp190 = tmp188 + tmp189;
double tmp191 = tmp17*tmp190;
double tmp192 = tmp80 + tmp144;
double tmp193 = qOS2*tmp192;
double tmp194 = tmp191 + tmp193;
double tmp195 = tmp25*tmp71;
double tmp196 = tmp28*tmp77;
double tmp197 = tmp26 + tmp27 + tmp63 + tmp64;
double tmp198 = 8*tmp8*tmp5;
double tmp199 = -8*tmp6*tmp7;
double tmp200 = tmp198 + tmp199;
double tmp201 = 2*sO1*tmp40;
double tmp202 = -2*sO1*tmp41;
double tmp203 = 4*sO3*tmp8*tmp6;
double tmp204 = -4*sO3*tmp5*tmp7;
double tmp205 = tmp201 + tmp202 + tmp203 + tmp149 + tmp204 + tmp82;
double tmp206 = 4*sO1*tmp8*tmp6;
double tmp207 = 4*sO1*tmp5*tmp7;
double tmp208 = tmp40 + tmp41 + tmp84 + tmp85;
double tmp209 = -2*sO3*tmp208;
double tmp210 = tmp206 + tmp207 + tmp209;
double tmp211 = 4*sO1*tmp6*tmp7;
double tmp212 = -2*tmp8*tmp7;
double tmp213 = tmp83 + tmp212;
double tmp214 = 2*sO3*tmp213;
double tmp215 = tmp150 + tmp211 + tmp214;
double tmp216 = -2*tmp41;
double tmp217 = -2*tmp43;
double tmp218 = tmp12*tmp163;
double tmp219 = tmp2*tmp163;
double tmp220 = 4*qOS1*tmp187;
double tmp221 = -4*qOS3*tmp194;
double tmp222 = 1 + tmp216 + tmp217 + tmp218 + tmp219 + tmp220 + tmp221;
double tmp223 = tmp28*tmp129;
double tmp224 = tmp25*tmp132;
double tmp225 = tmp21 + tmp93 + tmp23 + tmp73;
double tmp226 = 2*sO2*tmp40;
double tmp227 = -4*sO1*tmp5*tmp6;
double tmp228 = -2*sO2*tmp42;
double tmp229 = 4*sO1*tmp8*tmp7;
double tmp230 = -2*sO2*tmp43;
double tmp231 = tmp226 + tmp135 + tmp227 + tmp228 + tmp229 + tmp230;
double tmp232 = -4*sO1*tmp6*tmp7;
double tmp233 = -2*tmp5*tmp7;
double tmp234 = tmp151 + tmp233;
double tmp235 = -2*sO2*tmp234;
double tmp236 = tmp150 + tmp232 + tmp235;
double tmp237 = -2*sO1*tmp40;
double tmp238 = 2*sO1*tmp41;
double tmp239 = 4*sO2*tmp5*tmp6;
double tmp240 = 4*sO2*tmp8*tmp7;
double tmp241 = tmp237 + tmp238 + tmp239 + tmp149 + tmp240 + tmp82;
double tmp242 = tmp158*tmp25;
double tmp243 = tmp159*tmp28;
double tmp244 = qOS1*tmp6;
double tmp245 = tmp29 + tmp76 + tmp244 + tmp32;
double tmp246 = 8*tmp5*tmp6;
double tmp247 = 8*tmp8*tmp7;
double tmp248 = tmp246 + tmp247;
double tmp249 = tmp21 + tmp72;
double tmp250 = tmp105 + tmp106;
double tmp251 = -2*tmp42;
double tmp252 = 1 + tmp251 + tmp217;
double tmp253 = 2*tmp41;
double tmp254 = 4*tmp42;
double tmp255 = -2 + tmp161 + tmp254;
double tmp256 = tmp28*tmp37;
double tmp257 = tmp256 + tmp171;
double tmp258 = tmp27 + tmp9;
double tmp259 = tmp8*tmp258;
double tmp260 = tmp22 + tmp23;
double tmp261 = tmp260*tmp7;
double tmp262 = tmp259 + tmp261;
double tmp263 = -(tmp8*tmp6);
double tmp264 = tmp263 + tmp106;
double tmp265 = tmp17*tmp264;
double tmp266 = tmp80 + tmp124;
double tmp267 = qOS3*tmp266;
double tmp268 = tmp265 + tmp267;
double tmp269 = -2*tmp12*tmp250;
double tmp270 = -2*tmp0*tmp250;
double tmp271 = -(tmp5*tmp6);
double tmp272 = tmp271 + tmp189;
double tmp273 = 2*tmp17*tmp272;
double tmp274 = qOS3*tmp252;
double tmp275 = tmp273 + tmp274;
double tmp276 = qOS1*tmp275;
double tmp277 = -(tmp8*tmp7);
double tmp278 = tmp188 + tmp277;
double tmp279 = 2*qOS3*tmp278;
double tmp280 = tmp17*tmp252;
double tmp281 = tmp279 + tmp280;
double tmp282 = qOS2*tmp281;
double tmp283 = tmp105 + tmp106 + tmp269 + tmp270 + tmp276 + tmp282;
double tmp284 = 2*tmp5*tmp7;
double tmp285 = tmp151 + tmp284;
double tmp286 = -4*tmp8*tmp5;
double tmp287 = 8*tmp6*tmp7;
double tmp288 = tmp198 + tmp287;
double tmp289 = tmp74*tmp25;
double tmp290 = tmp77*tmp33;
double tmp291 = tmp12*tmp255;
double tmp292 = tmp0*tmp255;
double tmp293 = -4*qOS1*tmp262;
double tmp294 = 4*qOS2*tmp268;
double tmp295 = 1 + tmp216 + tmp251 + tmp291 + tmp292 + tmp293 + tmp294;
double tmp296 = -4*tmp8*tmp6;
double tmp297 = -4*tmp5*tmp7;
double tmp298 = tmp296 + tmp297;
double tmp299 = 8*tmp8*tmp6;
double tmp300 = -8*tmp5*tmp7;
double tmp301 = tmp299 + tmp300;
double tmp302 = tmp44 + tmp19;
double tmp303 = tmp25*tmp130;
double tmp304 = tmp129*tmp33;
double tmp305 = -4*tmp8*tmp7;
double tmp306 = 4*tmp5*tmp6;
double tmp307 = tmp306 + tmp305;
double tmp308 = -tmp40;
double tmp309 = 2*tmp8*tmp5;
double tmp310 = tmp25*tmp160;
double tmp311 = tmp159*tmp33;
J(1+_OFF,1+_OFF) = -(tmp4*tmp40) - tmp4*tmp41 - tmp55*tmp56 - 4*tmp5*tmp59 - 4*tmp8*tmp62;
J(1+_OFF,2+_OFF) = -2*tmp39;
J(1+_OFF,3+_OFF) = -2*tmp51;
J(1+_OFF,4+_OFF) = 2*tmp39*tmp182 + 2*tmp51*tmp177 + tmp169*tmp91 + (4*tmp8*tmp59 + 4*tmp8*(-(tmp17*tmp65) + tmp58) - 4*tmp5*tmp62 + 4*tmp5*(qOS1*tmp65 + tmp17*tmp20))*tmp111 + 2*(-(tmp25*(tmp112 + tmp157 + tmp9 + tmp10)) + tmp74*tmp28 - tmp48*tmp77 + tmp71*tmp33)*tmp128 + 2*(tmp195 - tmp74*tmp37 + tmp196 - tmp197*tmp33)*tmp148;
J(1+_OFF,5+_OFF) = 2*tmp205*tmp51 + 2*tmp39*tmp215 + tmp210*tmp91 + (4*tmp5*(tmp17*tmp92 + qOS1*tmp94) + 4*tmp8*(tmp153 - tmp17*tmp94) - 2*tmp4*tmp8*tmp6 - 2*tmp4*tmp5*tmp7 + tmp55*tmp285 - 4*tmp7*tmp59 - 4*tmp6*tmp62)*tmp111 + 2*(-((tmp152 + tmp22 + tmp72 + tmp24)*tmp25) + tmp130*tmp28 - tmp48*tmp129 + tmp132*tmp33)*tmp128 + 2*(tmp223 - tmp130*tmp37 + tmp224 - tmp225*tmp33)*tmp148;
J(1+_OFF,6+_OFF) = 2*tmp241*tmp39 + 2*tmp51*tmp236 + tmp231*tmp91 + (4*tmp8*(-(tmp17*tmp92) + qOS1*tmp154) + 4*tmp5*(tmp153 + tmp17*tmp154) + 2*tmp4*tmp5*tmp6 - 2*tmp4*tmp8*tmp7 + tmp55*tmp156 + 4*tmp6*tmp59 - 4*tmp7*tmp62)*tmp111 + 2*(-(tmp159*tmp48) + tmp28*tmp160 - tmp25*(tmp75 + tmp30 + tmp31 + tmp131) + tmp158*tmp33)*tmp128 + 2*(tmp242 + tmp243 - tmp160*tmp37 - tmp33*tmp245)*tmp148;
J(2+_OFF,1+_OFF) = -2*tmp165;
J(2+_OFF,2+_OFF) = -1 + tmp253 + 2*tmp43 - tmp12*tmp163 - tmp2*tmp163 - 4*qOS1*tmp187 + 4*qOS3*tmp194;
J(2+_OFF,3+_OFF) = -2*tmp172;
J(2+_OFF,4+_OFF) = 2*tmp165*tmp169 + 2*tmp172*tmp177 + tmp182*tmp222 + 2*(tmp195 + tmp74*tmp37 + tmp196 + tmp197*tmp33)*tmp111 + 2*(tmp289 - tmp28*tmp197 - tmp71*tmp37 + tmp290)*tmp128 + (tmp286 + 4*tmp6*tmp7 + tmp12*tmp200 + tmp2*tmp200 - 4*qOS2*qOS3*tmp180 + 4*qOS1*(tmp8*(tmp35 + tmp46) + tmp6*tmp249 - tmp5*tmp183 + tmp7*tmp185))*tmp148;
J(2+_OFF,5+_OFF) = 2*tmp205*tmp172 + 2*tmp165*tmp210 + tmp215*tmp222 + 2*(tmp223 + tmp130*tmp37 + tmp224 + tmp225*tmp33)*tmp111 + 2*(tmp303 - tmp225*tmp28 - tmp37*tmp132 + tmp304)*tmp128 + (4*qOS1*(tmp6*(tmp27 + tmp10) - tmp6*tmp183 + 2*tmp8*tmp185) - 4*qOS3*(qOS2*tmp213 + tmp17*(tmp309 - 2*tmp6*tmp7)))*tmp148;
J(2+_OFF,6+_OFF) = 2*tmp231*tmp165 + 2*tmp172*tmp236 + tmp241*tmp222 + 2*(tmp242 + tmp243 + tmp160*tmp37 + tmp33*tmp245)*tmp111 + 2*(tmp310 - tmp158*tmp37 + tmp311 - tmp28*tmp245)*tmp128 + (-4*tmp5*tmp6 + tmp305 + tmp12*tmp248 + tmp2*tmp248 - 4*qOS3*tmp17*tmp180 + 4*qOS1*(tmp6*(tmp44 + tmp18) + tmp8*tmp249 - tmp7*tmp183 - tmp5*tmp185))*tmp148;
J(3+_OFF,1+_OFF) = -2*tmp283;
J(3+_OFF,2+_OFF) = -2*tmp257;
J(3+_OFF,3+_OFF) = -1 + tmp253 + 2*tmp42 - tmp12*tmp255 - tmp0*tmp255 + 4*qOS1*tmp262 - 4*qOS2*tmp268;
J(3+_OFF,4+_OFF) = 2*tmp257*tmp182 + tmp177*tmp295 + 2*tmp169*tmp283 + 2*(tmp83 + tmp155 - 2*tmp12*tmp156 - 2*tmp0*tmp156 + 2*qOS1*tmp17*(-2*tmp8*tmp6 + tmp233) + 2*qOS2*qOS3*tmp285)*tmp111 + (tmp286 - 4*tmp6*tmp7 + tmp12*tmp288 + tmp0*tmp288 + 4*qOS2*qOS3*tmp175 - 4*qOS1*(-(tmp5*tmp258) - tmp6*tmp260 + tmp8*tmp302 + tmp7*(tmp75 + tmp32)))*tmp128 + 2*(tmp289 + tmp28*tmp197 + tmp71*tmp37 + tmp290)*tmp148;
J(3+_OFF,5+_OFF) = 2*tmp257*tmp215 + tmp205*tmp295 + 2*tmp210*tmp283 + 2*(tmp40 + tmp41 + tmp84 + tmp85 + qOS1*qOS3*tmp298 + qOS2*tmp17*tmp298 - 2*tmp12*tmp208 - 2*tmp0*tmp208)*tmp111 + (tmp296 + 4*tmp5*tmp7 + tmp12*tmp301 + tmp0*tmp301 + 4*qOS2*tmp17*(tmp308 + tmp41 + tmp42 + tmp85) - 4*qOS1*(-(tmp6*tmp258) + tmp5*tmp260 + tmp7*tmp302 + tmp8*(tmp29 + tmp131)))*tmp128 + 2*(tmp303 + tmp225*tmp28 + tmp37*tmp132 + tmp304)*tmp148;
J(3+_OFF,6+_OFF) = 2*tmp241*tmp257 + tmp236*tmp295 + 2*tmp231*tmp283 + 2*(qOS1*(qOS3*tmp307 + 2*tmp17*tmp208) + qOS2*(tmp17*tmp307 + 2*qOS3*(tmp308 + tmp52 + tmp42 + tmp43)))*tmp111 + (-4*qOS1*(2*tmp8*tmp260 + (tmp157 + tmp63)*tmp7 - tmp258*tmp7) + 4*qOS2*(qOS3*tmp234 + tmp17*(tmp309 + 2*tmp6*tmp7)))*tmp128 + 2*(tmp310 + tmp158*tmp37 + tmp311 + tmp28*tmp245)*tmp148;
