double tmp0 = std::pow(qOS2,2);
double tmp1 = -2*tmp0;
double tmp2 = std::pow(qOS3,2);
double tmp3 = -2*tmp2;
double tmp4 = 1 + tmp1 + tmp3;
double tmp5 = x1(5+_OFF);
double tmp6 = 1.*tmp5;
double tmp7 = 0. + tmp6;
double tmp8 = x1(6+_OFF);
double tmp9 = 1.*tmp8;
double tmp10 = 0. + tmp9;
double tmp11 = x1(7+_OFF);
double tmp12 = 1.*tmp11;
double tmp13 = 0. + tmp12;
double tmp14 = x1(4+_OFF);
double tmp15 = 1.*tmp14;
double tmp16 = 0. + tmp15;
double tmp17 = qOS3*tmp10;
double tmp18 = -(qOS2*tmp13);
double tmp19 = tmp17 + tmp18;
double tmp20 = std::pow(qOS1,2);
double tmp21 = -tmp20;
double tmp22 = -tmp0;
double tmp23 = -tmp2;
double tmp24 = 1 + tmp21 + tmp22 + tmp23;
double tmp25 = std::sqrt(tmp24);
double tmp26 = qOS2*tmp10;
double tmp27 = qOS3*tmp13;
double tmp28 = tmp26 + tmp27;
double tmp29 = qOS2*tmp16;
double tmp30 = -(qOS3*tmp7);
double tmp31 = tmp25*tmp10;
double tmp32 = qOS1*tmp13;
double tmp33 = tmp29 + tmp30 + tmp31 + tmp32;
double tmp34 = qOS1*tmp16;
double tmp35 = tmp25*tmp7;
double tmp36 = tmp34 + tmp35 + tmp17 + tmp18;
double tmp37 = qOS3*tmp16;
double tmp38 = qOS2*tmp7;
double tmp39 = -(qOS1*tmp10);
double tmp40 = tmp25*tmp13;
double tmp41 = tmp37 + tmp38 + tmp39 + tmp40;
double tmp42 = tmp33*tmp36;
double tmp43 = -(tmp25*tmp16);
double tmp44 = qOS1*tmp7;
double tmp45 = tmp43 + tmp44 + tmp26 + tmp27;
double tmp46 = -(tmp45*tmp41);
double tmp47 = tmp42 + tmp46;
double tmp48 = 0.01*tmp14;
double tmp49 = 0. + tmp48;
double tmp50 = -0.01*tmp8;
double tmp51 = 0. + tmp50;
double tmp52 = -0.01*tmp5;
double tmp53 = 0. + tmp52;
double tmp54 = 0.01*tmp11;
double tmp55 = 0. + tmp54;
double tmp56 = tmp25*tmp16;
double tmp57 = -(qOS1*tmp7);
double tmp58 = -(qOS2*tmp10);
double tmp59 = -(qOS3*tmp13);
double tmp60 = tmp56 + tmp57 + tmp58 + tmp59;
double tmp61 = -(tmp33*tmp60);
double tmp62 = tmp36*tmp41;
double tmp63 = tmp61 + tmp62;
double tmp64 = tmp49*tmp16;
double tmp65 = tmp53*tmp7;
double tmp66 = std::pow(tmp16,2);
double tmp67 = tmp4*tmp66;
double tmp68 = std::pow(tmp7,2);
double tmp69 = tmp4*tmp68;
double tmp70 = 2*tmp0;
double tmp71 = 2*tmp2;
double tmp72 = -1 + tmp70 + tmp71;
double tmp73 = std::pow(tmp10,2);
double tmp74 = std::pow(tmp13,2);
double tmp75 = tmp73 + tmp74;
double tmp76 = tmp72*tmp75;
double tmp77 = tmp25*tmp19;
double tmp78 = qOS1*tmp28;
double tmp79 = tmp77 + tmp78;
double tmp80 = 4*tmp7*tmp79;
double tmp81 = qOS1*tmp19;
double tmp82 = -(tmp25*tmp28);
double tmp83 = tmp81 + tmp82;
double tmp84 = 4*tmp16*tmp83;
double tmp85 = tmp67 + tmp69 + tmp76 + tmp80 + tmp84;
double tmp86 = qOS3*tmp51;
double tmp87 = qOS2*tmp55;
double tmp88 = tmp86 + tmp87;
double tmp89 = -(qOS2*tmp51);
double tmp90 = qOS3*tmp55;
double tmp91 = tmp89 + tmp90;
double tmp92 = x2(6+_OFF);
double tmp93 = x2(7+_OFF);
double tmp94 = x2(4+_OFF);
double tmp95 = x2(5+_OFF);
double tmp96 = std::pow(tmp92,2);
double tmp97 = tmp25*tmp49;
double tmp98 = qOS1*tmp53;
double tmp99 = tmp97 + tmp98 + tmp89 + tmp90;
double tmp100 = -(qOS3*tmp49);
double tmp101 = qOS2*tmp53;
double tmp102 = qOS1*tmp51;
double tmp103 = tmp25*tmp55;
double tmp104 = tmp100 + tmp101 + tmp102 + tmp103;
double tmp105 = qOS2*tmp49;
double tmp106 = qOS3*tmp53;
double tmp107 = tmp25*tmp51;
double tmp108 = -(qOS1*tmp55);
double tmp109 = tmp105 + tmp106 + tmp107 + tmp108;
double tmp110 = std::pow(tmp95,2);
double tmp111 = std::pow(tmp93,2);
double tmp112 = tmp16*tmp7;
double tmp113 = -(tmp94*tmp95);
double tmp114 = -0.01*tmp11;
double tmp115 = 0. + tmp114;
double tmp116 = 0.01*tmp5;
double tmp117 = 0. + tmp116;
double tmp118 = tmp7*tmp51;
double tmp119 = tmp16*tmp115;
double tmp120 = tmp49*tmp13;
double tmp121 = tmp51*tmp10;
double tmp122 = qOS3*tmp49;
double tmp123 = -(qOS2*tmp117);
double tmp124 = tmp122 + tmp123;
double tmp125 = qOS3*tmp117;
double tmp126 = tmp105 + tmp125;
double tmp127 = x1(1+_OFF);
double tmp128 = -tmp127;
double tmp129 = -2*sO2*tmp7*tmp10;
double tmp130 = 2*sO1*tmp73;
double tmp131 = 2*sO2*tmp16*tmp13;
double tmp132 = 2*sO1*tmp74;
double tmp133 = x2(1+_OFF);
double tmp134 = 2*sO2*tmp95*tmp92;
double tmp135 = -2*sO1*tmp96;
double tmp136 = -2*sO2*tmp94*tmp93;
double tmp137 = -2*sO1*tmp111;
double tmp138 = tmp16*tmp10;
double tmp139 = tmp7*tmp13;
double tmp140 = -(tmp94*tmp92);
double tmp141 = -(tmp95*tmp93);
double tmp142 = tmp138 + tmp139 + tmp140 + tmp141;
double tmp143 = -2*sO3*tmp142;
double tmp144 = 0. + tmp128 + tmp129 + tmp130 + tmp131 + tmp132 + tmp133 + tmp134 + tmp135 + tmp136 + tmp137 + tmp143;
double tmp145 = -(qOS1*tmp49);
double tmp146 = x1(3+_OFF);
double tmp147 = -tmp146;
double tmp148 = 2*sO3*tmp68;
double tmp149 = 2*sO1*tmp16*tmp10;
double tmp150 = 2*sO3*tmp73;
double tmp151 = -2*sO1*tmp7*tmp13;
double tmp152 = x2(3+_OFF);
double tmp153 = -2*sO3*tmp110;
double tmp154 = -2*sO1*tmp94*tmp92;
double tmp155 = -2*sO3*tmp96;
double tmp156 = 2*sO1*tmp95*tmp93;
double tmp157 = tmp10*tmp13;
double tmp158 = -(tmp92*tmp93);
double tmp159 = tmp112 + tmp157 + tmp113 + tmp158;
double tmp160 = -2*sO2*tmp159;
double tmp161 = 0. + tmp147 + tmp148 + tmp149 + tmp150 + tmp151 + tmp152 + tmp153 + tmp154 + tmp155 + tmp156 + tmp160;
double tmp162 = tmp25*tmp115;
double tmp163 = tmp122 + tmp123 + tmp102 + tmp162;
double tmp164 = qOS1*tmp117;
double tmp165 = qOS2*tmp51;
double tmp166 = -(qOS3*tmp115);
double tmp167 = tmp97 + tmp164 + tmp165 + tmp166;
double tmp168 = tmp25*tmp117;
double tmp169 = qOS2*tmp115;
double tmp170 = tmp145 + tmp168 + tmp86 + tmp169;
double tmp171 = x1(2+_OFF);
double tmp172 = -tmp171;
double tmp173 = 2*sO2*tmp68;
double tmp174 = -2*sO1*tmp7*tmp10;
double tmp175 = -2*sO1*tmp16*tmp13;
double tmp176 = 2*sO2*tmp74;
double tmp177 = x2(2+_OFF);
double tmp178 = -2*sO2*tmp110;
double tmp179 = 2*sO1*tmp95*tmp92;
double tmp180 = 2*sO1*tmp94*tmp93;
double tmp181 = -2*sO2*tmp111;
double tmp182 = -(tmp10*tmp13);
double tmp183 = tmp92*tmp93;
double tmp184 = tmp112 + tmp182 + tmp113 + tmp183;
double tmp185 = 2*sO3*tmp184;
double tmp186 = 0. + tmp172 + tmp173 + tmp174 + tmp175 + tmp176 + tmp177 + tmp178 + tmp179 + tmp180 + tmp181 + tmp185;
double tmp187 = 0.01*tmp8;
double tmp188 = 0. + tmp187;
double tmp189 = -2*sO1*tmp115*tmp13;
double tmp190 = -2*sO1*tmp49*tmp7;
double tmp191 = tmp16*tmp188;
double tmp192 = tmp7*tmp115;
double tmp193 = -(qOS2*tmp49);
double tmp194 = tmp122 + tmp101;
double tmp195 = tmp193 + tmp106;
double tmp196 = qOS1*tmp49;
double tmp197 = tmp25*tmp53;
double tmp198 = qOS1*tmp115;
double tmp199 = tmp25*tmp188;
double tmp200 = tmp193 + tmp106 + tmp199 + tmp198;
double tmp201 = -(qOS3*tmp188);
double tmp202 = tmp196 + tmp197 + tmp201 + tmp169;
double tmp203 = -(qOS1*tmp53);
double tmp204 = qOS2*tmp188;
double tmp205 = qOS3*tmp115;
double tmp206 = tmp97 + tmp203 + tmp204 + tmp205;
double tmp207 = 4*tmp68;
double tmp208 = 4*tmp74;
double tmp209 = -2 + tmp207 + tmp208;
double tmp210 = tmp45*tmp41;
double tmp211 = tmp42 + tmp210;
double tmp212 = 2*sO2*tmp16*tmp51;
double tmp213 = -2*sO2*tmp49*tmp10;
double tmp214 = -2*sO2*tmp7*tmp55;
double tmp215 = 4*sO1*tmp10*tmp55;
double tmp216 = 2*sO2*tmp53*tmp13;
double tmp217 = 4*sO1*tmp51*tmp13;
double tmp218 = tmp53*tmp10;
double tmp219 = tmp16*tmp55;
double tmp220 = tmp118 + tmp218 + tmp219 + tmp120;
double tmp221 = -2*sO3*tmp220;
double tmp222 = tmp212 + tmp213 + tmp214 + tmp215 + tmp216 + tmp217 + tmp221;
double tmp223 = -(tmp36*tmp45);
double tmp224 = tmp33*tmp41;
double tmp225 = tmp223 + tmp224;
double tmp226 = 4*sO3*tmp49*tmp7;
double tmp227 = -2*sO1*tmp7*tmp51;
double tmp228 = 2*sO1*tmp53*tmp10;
double tmp229 = 2*sO1*tmp16*tmp55;
double tmp230 = 4*sO3*tmp10*tmp55;
double tmp231 = -2*sO1*tmp49*tmp13;
double tmp232 = tmp55*tmp13;
double tmp233 = tmp64 + tmp65 + tmp121 + tmp232;
double tmp234 = -2*sO2*tmp233;
double tmp235 = tmp226 + tmp227 + tmp228 + tmp229 + tmp230 + tmp231 + tmp234;
double tmp236 = 4*sO2*tmp49*tmp7;
double tmp237 = -2*sO1*tmp16*tmp51;
double tmp238 = -2*sO1*tmp49*tmp10;
double tmp239 = -2*sO1*tmp7*tmp55;
double tmp240 = -2*sO1*tmp53*tmp13;
double tmp241 = 4*sO2*tmp51*tmp13;
double tmp242 = -(tmp51*tmp10);
double tmp243 = -(tmp55*tmp13);
double tmp244 = tmp64 + tmp65 + tmp242 + tmp243;
double tmp245 = 2*sO3*tmp244;
double tmp246 = tmp236 + tmp237 + tmp238 + tmp239 + tmp240 + tmp241 + tmp245;
double tmp247 = -2*tmp68;
double tmp248 = -2*tmp74;
double tmp249 = tmp20*tmp209;
double tmp250 = tmp2*tmp209;
double tmp251 = -(tmp25*tmp7);
double tmp252 = qOS2*tmp13;
double tmp253 = tmp251 + tmp252;
double tmp254 = tmp16*tmp253;
double tmp255 = tmp38 + tmp40;
double tmp256 = tmp10*tmp255;
double tmp257 = tmp254 + tmp256;
double tmp258 = 4*qOS1*tmp257;
double tmp259 = tmp7*tmp10;
double tmp260 = tmp16*tmp13;
double tmp261 = tmp259 + tmp260;
double tmp262 = tmp25*tmp261;
double tmp263 = tmp112 + tmp182;
double tmp264 = qOS2*tmp263;
double tmp265 = tmp262 + tmp264;
double tmp266 = -4*qOS3*tmp265;
double tmp267 = 1 + tmp247 + tmp248 + tmp249 + tmp250 + tmp258 + tmp266;
double tmp268 = tmp99*tmp33;
double tmp269 = tmp104*tmp36;
double tmp270 = -(tmp25*tmp53);
double tmp271 = tmp196 + tmp270 + tmp86 + tmp87;
double tmp272 = 8*tmp49*tmp7;
double tmp273 = 8*tmp51*tmp13;
double tmp274 = tmp272 + tmp273;
double tmp275 = tmp49*tmp10;
double tmp276 = tmp53*tmp13;
double tmp277 = 2*sO1*tmp49*tmp16;
double tmp278 = -2*sO1*tmp117*tmp7;
double tmp279 = 4*sO3*tmp49*tmp10;
double tmp280 = 2*sO1*tmp51*tmp10;
double tmp281 = 4*sO3*tmp7*tmp115;
double tmp282 = tmp117*tmp10;
double tmp283 = tmp118 + tmp282 + tmp119 + tmp120;
double tmp284 = -2*sO2*tmp283;
double tmp285 = tmp277 + tmp278 + tmp279 + tmp280 + tmp281 + tmp189 + tmp284;
double tmp286 = 2*sO2*tmp16*tmp117;
double tmp287 = -2*sO2*tmp49*tmp7;
double tmp288 = 4*sO1*tmp49*tmp10;
double tmp289 = -2*sO2*tmp10*tmp115;
double tmp290 = 4*sO1*tmp117*tmp13;
double tmp291 = 2*sO2*tmp51*tmp13;
double tmp292 = tmp117*tmp7;
double tmp293 = tmp115*tmp13;
double tmp294 = tmp64 + tmp292 + tmp121 + tmp293;
double tmp295 = -2*sO3*tmp294;
double tmp296 = tmp286 + tmp287 + tmp288 + tmp289 + tmp290 + tmp291 + tmp295;
double tmp297 = -2*sO1*tmp16*tmp117;
double tmp298 = 4*sO2*tmp7*tmp115;
double tmp299 = -2*sO1*tmp10*tmp115;
double tmp300 = 4*sO2*tmp117*tmp13;
double tmp301 = -2*sO1*tmp51*tmp13;
double tmp302 = -(tmp117*tmp10);
double tmp303 = -(tmp49*tmp13);
double tmp304 = tmp118 + tmp302 + tmp119 + tmp303;
double tmp305 = 2*sO3*tmp304;
double tmp306 = tmp297 + tmp190 + tmp298 + tmp299 + tmp300 + tmp301 + tmp305;
double tmp307 = tmp163*tmp33;
double tmp308 = tmp167*tmp36;
double tmp309 = -(tmp25*tmp51);
double tmp310 = tmp105 + tmp125 + tmp309 + tmp198;
double tmp311 = 8*tmp7*tmp115;
double tmp312 = 8*tmp117*tmp13;
double tmp313 = tmp311 + tmp312;
double tmp314 = -(tmp25*tmp115);
double tmp315 = tmp49*tmp7;
double tmp316 = tmp10*tmp115;
double tmp317 = 2*sO1*tmp16*tmp53;
double tmp318 = 4*sO3*tmp7*tmp188;
double tmp319 = 4*sO3*tmp53*tmp10;
double tmp320 = 2*sO1*tmp10*tmp115;
double tmp321 = -2*sO1*tmp188*tmp13;
double tmp322 = tmp191 + tmp275 + tmp192 + tmp276;
double tmp323 = -2*sO2*tmp322;
double tmp324 = tmp317 + tmp190 + tmp318 + tmp319 + tmp320 + tmp321 + tmp323;
double tmp325 = 2*sO2*tmp49*tmp16;
double tmp326 = -2*sO2*tmp53*tmp7;
double tmp327 = 4*sO1*tmp53*tmp10;
double tmp328 = -2*sO2*tmp188*tmp10;
double tmp329 = 4*sO1*tmp49*tmp13;
double tmp330 = 2*sO2*tmp115*tmp13;
double tmp331 = tmp16*tmp53;
double tmp332 = tmp188*tmp13;
double tmp333 = tmp331 + tmp315 + tmp316 + tmp332;
double tmp334 = -2*sO3*tmp333;
double tmp335 = tmp325 + tmp326 + tmp327 + tmp328 + tmp329 + tmp330 + tmp334;
double tmp336 = -2*sO1*tmp49*tmp16;
double tmp337 = -2*sO1*tmp53*tmp7;
double tmp338 = 4*sO2*tmp7*tmp188;
double tmp339 = -2*sO1*tmp188*tmp10;
double tmp340 = 4*sO2*tmp49*tmp13;
double tmp341 = -(tmp49*tmp10);
double tmp342 = -(tmp53*tmp13);
double tmp343 = tmp191 + tmp341 + tmp192 + tmp342;
double tmp344 = 2*sO3*tmp343;
double tmp345 = tmp336 + tmp337 + tmp338 + tmp339 + tmp340 + tmp189 + tmp344;
double tmp346 = tmp200*tmp33;
double tmp347 = tmp202*tmp36;
double tmp348 = qOS1*tmp188;
double tmp349 = tmp122 + tmp101 + tmp348 + tmp314;
double tmp350 = 8*tmp7*tmp188;
double tmp351 = 8*tmp49*tmp13;
double tmp352 = tmp350 + tmp351;
double tmp353 = tmp138 + tmp139;
double tmp354 = -2*tmp73;
double tmp355 = 1 + tmp354 + tmp248;
double tmp356 = 4*tmp73;
double tmp357 = -2 + tmp207 + tmp356;
double tmp358 = tmp36*tmp45;
double tmp359 = tmp358 + tmp224;
double tmp360 = -(tmp16*tmp13);
double tmp361 = tmp259 + tmp360;
double tmp362 = 2*qOS2*qOS3*tmp361;
double tmp363 = -(tmp7*tmp10);
double tmp364 = tmp363 + tmp260;
double tmp365 = 2*qOS1*tmp25*tmp364;
double tmp366 = -2*tmp20*tmp353;
double tmp367 = -2*tmp0*tmp353;
double tmp368 = qOS1*qOS3*tmp355;
double tmp369 = qOS2*tmp25*tmp355;
double tmp370 = tmp138 + tmp139 + tmp362 + tmp365 + tmp366 + tmp367 + tmp368 + tmp369;
double tmp371 = tmp20*tmp357;
double tmp372 = tmp0*tmp357;
double tmp373 = tmp35 + tmp17;
double tmp374 = tmp16*tmp373;
double tmp375 = tmp30 + tmp31;
double tmp376 = tmp375*tmp13;
double tmp377 = tmp374 + tmp376;
double tmp378 = -4*qOS1*tmp377;
double tmp379 = -(tmp16*tmp10);
double tmp380 = tmp379 + tmp139;
double tmp381 = tmp25*tmp380;
double tmp382 = tmp112 + tmp157;
double tmp383 = qOS3*tmp382;
double tmp384 = tmp381 + tmp383;
double tmp385 = 4*qOS2*tmp384;
double tmp386 = 1 + tmp247 + tmp354 + tmp371 + tmp372 + tmp378 + tmp385;
double tmp387 = tmp7*tmp55;
double tmp388 = tmp16*tmp51;
double tmp389 = -4*tmp51*tmp13;
double tmp390 = -4*tmp10*tmp55;
double tmp391 = tmp390 + tmp389;
double tmp392 = -4*tmp49*tmp7;
double tmp393 = 8*tmp10*tmp55;
double tmp394 = tmp272 + tmp393;
double tmp395 = tmp109*tmp33;
double tmp396 = tmp104*tmp41;
double tmp397 = -4*tmp117*tmp13;
double tmp398 = -4*tmp49*tmp10;
double tmp399 = tmp398 + tmp397;
double tmp400 = tmp16*tmp117;
double tmp401 = tmp51*tmp13;
double tmp402 = 8*tmp49*tmp10;
double tmp403 = tmp402 + tmp311;
double tmp404 = -4*tmp7*tmp115;
double tmp405 = tmp170*tmp33;
double tmp406 = tmp167*tmp41;
double tmp407 = -4*tmp49*tmp13;
double tmp408 = -4*tmp53*tmp10;
double tmp409 = tmp408 + tmp407;
double tmp410 = -(tmp49*tmp16);
double tmp411 = tmp188*tmp10;
double tmp412 = -4*tmp7*tmp188;
double tmp413 = 8*tmp53*tmp10;
double tmp414 = tmp350 + tmp413;
double tmp415 = -(tmp10*tmp115);
double tmp416 = tmp206*tmp33;
double tmp417 = tmp202*tmp41;
J(1+_OFF,1+_OFF) = -0.001*tmp85;
J(1+_OFF,2+_OFF) = -0.002*tmp47;
J(1+_OFF,3+_OFF) = -0.002*tmp63;
J(1+_OFF,4+_OFF) = 2*tmp47*tmp246 + 2*tmp63*tmp235 + tmp222*tmp85 + (2*tmp4*tmp16*tmp53 + 2*tmp4*tmp49*tmp7 + 4*tmp16*(-(tmp25*tmp88) + qOS1*tmp91) + 4*tmp7*(qOS1*tmp88 + tmp25*tmp91) + tmp72*(2*tmp10*tmp55 + 2*tmp51*tmp13) + 4*tmp49*tmp79 + 4*tmp53*tmp83)*tmp144 + 2*(-((tmp145 + tmp197 - qOS3*tmp51 - qOS2*tmp55)*tmp33) + tmp109*tmp36 - tmp104*tmp60 + tmp99*tmp41)*tmp161 + 2*(tmp268 + tmp269 - tmp109*tmp45 - tmp271*tmp41)*tmp186;
J(1+_OFF,5+_OFF) = 2*tmp47*tmp306 + 2*tmp63*tmp285 + tmp296*tmp85 + (4*tmp16*(qOS1*tmp124 - tmp25*tmp126) + 4*(tmp25*tmp124 + qOS1*tmp126)*tmp7 + 2*tmp4*tmp16*tmp51 + 2*tmp4*tmp7*tmp115 + tmp72*(2*tmp49*tmp10 + 2*tmp117*tmp13) + 4*tmp115*tmp79 + 4*tmp51*tmp83)*tmp144 + 2*(-((tmp193 - qOS3*tmp117 + tmp107 - qOS1*tmp115)*tmp33) + tmp170*tmp36 - tmp167*tmp60 + tmp163*tmp41)*tmp161 + 2*(tmp307 + tmp308 - tmp170*tmp45 - tmp310*tmp41)*tmp186;
J(1+_OFF,6+_OFF) = 2*tmp47*tmp345 + 2*tmp63*tmp324 + tmp335*tmp85 + (4*tmp16*(-(tmp25*tmp194) + qOS1*tmp195) + 4*(qOS1*tmp194 + tmp25*tmp195)*tmp7 + 2*tmp4*tmp7*tmp188 + 2*tmp4*tmp16*tmp115 + tmp72*(2*tmp53*tmp10 + 2*tmp49*tmp13) + 4*tmp188*tmp79 + 4*tmp115*tmp83)*tmp144 + 2*(-((tmp100 - qOS2*tmp53 - qOS1*tmp188 + tmp162)*tmp33) + tmp206*tmp36 - tmp202*tmp60 + tmp200*tmp41)*tmp161 + 2*(tmp346 + tmp347 - tmp206*tmp45 - tmp349*tmp41)*tmp186;
J(2+_OFF,1+_OFF) = -0.002*tmp211;
J(2+_OFF,2+_OFF) = -0.001*tmp267;
J(2+_OFF,3+_OFF) = -0.002*tmp225;
J(2+_OFF,4+_OFF) = 2*tmp211*tmp222 + 2*tmp225*tmp235 + tmp246*tmp267 + 2*(tmp268 + tmp269 + tmp109*tmp45 + tmp271*tmp41)*tmp144 + 2*(tmp395 - tmp271*tmp36 - tmp99*tmp45 + tmp396)*tmp161 + (tmp392 + tmp389 + tmp20*tmp274 + tmp2*tmp274 + 4*qOS1*(tmp16*(-(tmp25*tmp49) + tmp165) + (tmp105 + tmp107)*tmp10 + tmp53*tmp253 + tmp55*tmp255) - 4*qOS3*(tmp25*(tmp388 + tmp275 + tmp387 + tmp276) + qOS2*tmp244))*tmp186;
J(2+_OFF,5+_OFF) = 2*tmp225*tmp285 + 2*tmp211*tmp296 + tmp306*tmp267 + 2*(tmp307 + tmp308 + tmp170*tmp45 + tmp310*tmp41)*tmp144 + 2*(tmp405 - tmp310*tmp36 - tmp163*tmp45 + tmp406)*tmp161 + (tmp404 + tmp397 + tmp20*tmp313 + tmp2*tmp313 + 4*qOS1*(tmp10*(tmp168 + tmp169) + tmp16*(qOS2*tmp117 + tmp314) + tmp51*tmp253 + tmp49*tmp255) - 4*qOS3*(qOS2*tmp304 + tmp25*(tmp400 + tmp315 + tmp316 + tmp401)))*tmp186;
J(2+_OFF,6+_OFF) = 2*tmp225*tmp324 + 2*tmp211*tmp335 + tmp345*tmp267 + 2*(tmp346 + tmp347 + tmp206*tmp45 + tmp349*tmp41)*tmp144 + 2*(tmp416 - tmp349*tmp36 - tmp200*tmp45 + tmp417)*tmp161 + (tmp412 + tmp407 + tmp20*tmp352 + tmp2*tmp352 + 4*qOS1*(tmp16*(tmp105 - tmp25*tmp188) + (tmp97 + tmp204)*tmp10 + tmp115*tmp253 + tmp53*tmp255) - 4*qOS3*(qOS2*tmp343 + tmp25*(tmp64 + tmp65 + tmp411 + tmp293)))*tmp186;
J(3+_OFF,1+_OFF) = -0.002*tmp370;
J(3+_OFF,2+_OFF) = -0.002*tmp359;
J(3+_OFF,3+_OFF) = -0.001*tmp386;
J(3+_OFF,4+_OFF) = 2*tmp359*tmp246 + 2*tmp222*tmp370 + tmp235*tmp386 + 2*(tmp118 + tmp218 + tmp219 + tmp120 - 2*tmp20*tmp220 - 2*tmp0*tmp220 + 2*qOS2*qOS3*(-(tmp16*tmp51) + tmp275 + tmp387 + tmp342) + 2*qOS1*tmp25*(tmp388 + tmp341 - tmp7*tmp55 + tmp276) + qOS1*qOS3*tmp391 + qOS2*tmp25*tmp391)*tmp144 + (tmp392 + tmp20*tmp394 + tmp0*tmp394 + tmp390 - 4*qOS1*(tmp53*tmp373 + tmp51*tmp375 + tmp16*(tmp97 + tmp90) + (tmp100 + tmp103)*tmp13) + 4*qOS2*(tmp25*(tmp118 - tmp53*tmp10 - tmp16*tmp55 + tmp120) + qOS3*tmp233))*tmp161 + 2*(tmp395 + tmp271*tmp36 + tmp99*tmp45 + tmp396)*tmp186;
J(3+_OFF,5+_OFF) = 2*tmp359*tmp306 + 2*tmp296*tmp370 + tmp285*tmp386 + 2*(tmp64 + tmp292 + tmp121 + tmp293 + qOS1*qOS3*tmp399 + qOS2*tmp25*tmp399 + 2*qOS2*qOS3*(-(tmp16*tmp117) + tmp315 + tmp316 - tmp51*tmp13) + 2*qOS1*tmp25*(tmp400 - tmp49*tmp7 + tmp415 + tmp401) - 2*tmp20*tmp294 - 2*tmp0*tmp294)*tmp144 + (tmp398 + tmp20*tmp403 + tmp0*tmp403 + tmp404 - 4*qOS1*(tmp51*tmp373 + tmp117*tmp375 + tmp16*(tmp122 + tmp162) + (tmp97 + tmp166)*tmp13) + 4*qOS2*(qOS3*tmp283 + tmp25*(tmp410 + tmp292 + tmp242 + tmp293)))*tmp161 + 2*(tmp405 + tmp310*tmp36 + tmp163*tmp45 + tmp406)*tmp186;
J(3+_OFF,6+_OFF) = 2*tmp359*tmp345 + 2*tmp335*tmp370 + tmp324*tmp386 + 2*(tmp331 + tmp315 + tmp316 + tmp332 + qOS1*qOS3*tmp409 + qOS2*tmp25*tmp409 - 2*tmp20*tmp333 - 2*tmp0*tmp333 + 2*qOS2*qOS3*(tmp410 + tmp65 + tmp411 - tmp115*tmp13) + 2*qOS1*tmp25*(tmp64 - tmp53*tmp7 - tmp188*tmp10 + tmp293))*tmp144 + (tmp412 + tmp408 + tmp20*tmp414 + tmp0*tmp414 - 4*qOS1*(tmp16*(tmp106 + tmp199) + tmp49*tmp375 + tmp373*tmp115 + (tmp197 + tmp201)*tmp13) + 4*qOS2*(qOS3*tmp322 + tmp25*(-(tmp16*tmp53) + tmp315 + tmp415 + tmp332)))*tmp161 + 2*(tmp416 + tmp349*tmp36 + tmp200*tmp45 + tmp417)*tmp186;
