double tmp0 = x(25+_OFF);
double tmp1 = z(2+_OFF);
double tmp2 = x(26+_OFF);
double tmp3 = z(3+_OFF);
double tmp4 = z(1+_OFF);
double tmp5 = x(23+_OFF);
double tmp6 = x(24+_OFF);
double tmp7 = tmp2*tmp1;
double tmp8 = -(tmp0*tmp3);
double tmp9 = -2*tmp2*tmp4;
double tmp10 = tmp0*tmp1;
J(1+_OFF,1+_OFF) = 2*(tmp7 + tmp8);
J(1+_OFF,2+_OFF) = -2*(tmp10 + tmp2*tmp3);
J(1+_OFF,3+_OFF) = 4*tmp0*tmp4 - 2*tmp6*tmp1 - 2*tmp5*tmp3;
J(1+_OFF,4+_OFF) = 4*tmp2*tmp4 + 2*tmp5*tmp1 - 2*tmp6*tmp3;
J(2+_OFF,1+_OFF) = tmp9 + 2*tmp6*tmp3;
J(2+_OFF,2+_OFF) = -2*tmp0*tmp4 + 4*tmp6*tmp1 + 2*tmp5*tmp3;
J(2+_OFF,3+_OFF) = -2*tmp6*tmp4 - 2*tmp2*tmp3;
J(2+_OFF,4+_OFF) = 2*tmp2*tmp1 + 2*(-(tmp5*tmp4) + tmp7 + tmp8);
J(3+_OFF,1+_OFF) = 2*(tmp0*tmp4 - tmp6*tmp1);
J(3+_OFF,2+_OFF) = tmp9 - 2*tmp5*tmp1 + 4*tmp6*tmp3;
J(3+_OFF,3+_OFF) = 2*tmp5*tmp4 - 2*tmp2*tmp1 + 4*tmp0*tmp3;
J(3+_OFF,4+_OFF) = -2*(tmp6*tmp4 + tmp10);
