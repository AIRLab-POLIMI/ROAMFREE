double tmp0 = ibd(3+_OFF);
double tmp1 = ibd(2+_OFF);
double tmp2 = ibod(1+_OFF);
double tmp3 = ibod(2+_OFF);
double tmp4 = ibod(3+_OFF);
double tmp5 = ibd(1+_OFF);
double tmp6 = airDensity(2+_OFF);
double tmp7 = 1/tmp6;
double tmp8 = x(4+_OFF);
double tmp9 = x(6+_OFF);
double tmp10 = x(5+_OFF);
double tmp11 = x(7+_OFF);
double tmp12 = wind(1+_OFF);
double tmp13 = tmp10*tmp9;
double tmp14 = wind(3+_OFF);
double tmp15 = wind(2+_OFF);
double tmp16 = std::pow(tmp8,2);
double tmp17 = std::pow(tmp10,2);
double tmp18 = std::pow(tmp9,2);
double tmp19 = std::pow(tmp11,2);
double tmp20 = -tmp19;
double tmp21 = tmp10*tmp11;
double tmp22 = tmp9*tmp11;
double tmp23 = -tmp17;
double tmp24 = -tmp18;
double tmp25 = airDensity(3+_OFF);
double tmp26 = cBar(1+_OFF);
double tmp27 = cp(2+_OFF);
double tmp28 = -(tmp0*tmp3);
double tmp29 = tmp2*tmp4;
double tmp30 = tmp28 + tmp29;
double tmp31 = tmp5*tmp1*tmp0;
double tmp32 = std::pow(tmp2,2);
double tmp33 = -(tmp1*tmp32);
double tmp34 = std::pow(tmp3,2);
double tmp35 = -(tmp0*tmp34);
double tmp36 = 2*tmp2*tmp3*tmp4;
double tmp37 = std::pow(tmp4,2);
double tmp38 = -(tmp5*tmp37);
double tmp39 = tmp31 + tmp33 + tmp35 + tmp36 + tmp38;
double tmp40 = 1/tmp39;
double tmp41 = airDensity(1+_OFF);
double tmp42 = x(3+_OFF);
double tmp43 = tmp41 + tmp42;
double tmp44 = -0.006500000000000001*tmp7*tmp43;
double tmp45 = 1 + tmp44;
double tmp46 = std::pow(tmp45,4.2561);
double tmp47 = tmp8*tmp11;
double tmp48 = tmp13 + tmp47;
double tmp49 = -2*tmp15*tmp48;
double tmp50 = -(tmp8*tmp9);
double tmp51 = tmp50 + tmp21;
double tmp52 = -2*tmp14*tmp51;
double tmp53 = tmp16 + tmp17 + tmp24 + tmp20;
double tmp54 = -(tmp12*tmp53);
double tmp55 = x(8+_OFF);
double tmp56 = tmp49 + tmp52 + tmp54 + tmp55;
double tmp57 = std::pow(tmp56,2);
double tmp58 = -(tmp8*tmp11);
double tmp59 = tmp13 + tmp58;
double tmp60 = -2*tmp12*tmp59;
double tmp61 = tmp8*tmp10;
double tmp62 = tmp61 + tmp22;
double tmp63 = -2*tmp14*tmp62;
double tmp64 = tmp16 + tmp23 + tmp18 + tmp20;
double tmp65 = -(tmp15*tmp64);
double tmp66 = x(9+_OFF);
double tmp67 = tmp60 + tmp63 + tmp65 + tmp66;
double tmp68 = std::pow(tmp67,2);
double tmp69 = tmp8*tmp9;
double tmp70 = tmp69 + tmp21;
double tmp71 = -2*tmp12*tmp70;
double tmp72 = -(tmp8*tmp10);
double tmp73 = tmp72 + tmp22;
double tmp74 = -2*tmp15*tmp73;
double tmp75 = tmp16 + tmp23 + tmp24 + tmp19;
double tmp76 = -(tmp14*tmp75);
double tmp77 = x(10+_OFF);
double tmp78 = tmp71 + tmp74 + tmp76 + tmp77;
double tmp79 = std::pow(tmp78,2);
double tmp80 = tmp57 + tmp68 + tmp79;
double tmp81 = tmp5*tmp0;
double tmp82 = -tmp32;
double tmp83 = tmp81 + tmp82;
double tmp84 = z(3+_OFF);
double tmp85 = 2*tmp12*tmp70;
double tmp86 = 2*tmp15*tmp73;
double tmp87 = tmp14*tmp75;
double tmp88 = -tmp77;
double tmp89 = tmp85 + tmp86 + tmp87 + tmp88;
double tmp90 = std::atan2(tmp89,tmp56);
double tmp91 = std::pow(tmp26,2);
double tmp92 = std::sqrt(tmp80);
double tmp93 = x(12+_OFF);
double tmp94 = tmp2*tmp3;
double tmp95 = -(tmp5*tmp4);
double tmp96 = tmp94 + tmp95;
J(1+_OFF,1+_OFF) = 0;
J(1+_OFF,2+_OFF) = 0;
J(1+_OFF,3+_OFF) = 0;
J(1+_OFF,4+_OFF) = 0;
J(2+_OFF,1+_OFF) = 0;
J(2+_OFF,2+_OFF) = 0;
J(2+_OFF,3+_OFF) = 0;
J(2+_OFF,4+_OFF) = 0;
J(3+_OFF,1+_OFF) = 0;
J(3+_OFF,2+_OFF) = 0;
J(3+_OFF,3+_OFF) = 0;
J(3+_OFF,4+_OFF) = 0;
J(4+_OFF,1+_OFF) = 0.001740341106856944*tmp7*tmp25*tmp26*tmp27*tmp30*tmp40*tmp46*tmp80;
J(4+_OFF,2+_OFF) = 0.001740341106856944*tmp7*tmp25*tmp26*tmp27*tmp30*tmp40*tmp46*tmp80*tmp84;
J(4+_OFF,3+_OFF) = 0.001740341106856944*tmp7*tmp25*tmp90*tmp26*tmp27*tmp30*tmp40*tmp46*tmp80;
J(4+_OFF,4+_OFF) = -0.000870170553428472*tmp7*tmp25*tmp91*tmp27*tmp30*tmp40*tmp46*tmp92*tmp93;
J(5+_OFF,1+_OFF) = 0.001740341106856944*tmp7*tmp25*tmp26*tmp27*tmp83*tmp40*tmp46*tmp80;
J(5+_OFF,2+_OFF) = 0.001740341106856944*tmp7*tmp25*tmp26*tmp27*tmp83*tmp40*tmp46*tmp80*tmp84;
J(5+_OFF,3+_OFF) = 0.001740341106856944*tmp7*tmp25*tmp90*tmp26*tmp27*tmp83*tmp40*tmp46*tmp80;
J(5+_OFF,4+_OFF) = -0.000870170553428472*tmp7*tmp25*tmp91*tmp27*tmp83*tmp40*tmp46*tmp92*tmp93;
J(6+_OFF,1+_OFF) = 0.001740341106856944*tmp7*tmp25*tmp26*tmp27*tmp96*tmp40*tmp46*tmp80;
J(6+_OFF,2+_OFF) = 0.001740341106856944*tmp7*tmp25*tmp26*tmp27*tmp96*tmp40*tmp46*tmp80*tmp84;
J(6+_OFF,3+_OFF) = 0.001740341106856944*tmp7*tmp25*tmp90*tmp26*tmp27*tmp96*tmp40*tmp46*tmp80;
J(6+_OFF,4+_OFF) = -0.000870170553428472*tmp7*tmp25*tmp91*tmp27*tmp96*tmp40*tmp46*tmp92*tmp93;
