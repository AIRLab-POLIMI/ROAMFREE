double tmp0 = x(4+_OFF);
double tmp1 = x(6+_OFF);
double tmp2 = x(5+_OFF);
double tmp3 = x(7+_OFF);
double tmp4 = x(30+_OFF);
double tmp5 = x(32+_OFF);
double tmp6 = x(31+_OFF);
double tmp7 = x(33+_OFF);
double tmp8 = cp(1+_OFF);
double tmp9 = tmp6*tmp5;
double tmp10 = tmp4*tmp7;
double tmp11 = tmp9 + tmp10;
double tmp12 = -(tmp4*tmp5);
double tmp13 = tmp6*tmp7;
double tmp14 = tmp12 + tmp13;
double tmp15 = std::pow(tmp4,2);
double tmp16 = std::pow(tmp6,2);
double tmp17 = std::pow(tmp5,2);
double tmp18 = -tmp17;
double tmp19 = std::pow(tmp7,2);
double tmp20 = -tmp19;
double tmp21 = tmp15 + tmp16 + tmp18 + tmp20;
double tmp22 = wind(1+_OFF);
double tmp23 = wind(3+_OFF);
double tmp24 = wind(2+_OFF);
double tmp25 = tmp5*tmp7;
double tmp26 = -tmp16;
double tmp27 = std::pow(tmp8,2);
double tmp28 = cp(4+_OFF);
double tmp29 = 1/tmp28;
double tmp30 = std::pow(tmp0,2);
double tmp31 = std::pow(tmp2,2);
double tmp32 = std::pow(tmp1,2);
double tmp33 = std::pow(tmp3,2);
double tmp34 = -tmp33;
double tmp35 = tmp2*tmp1;
double tmp36 = 1/M_PI;
double tmp37 = fThrust(2+_OFF);
double tmp38 = -2*tmp24*tmp11;
double tmp39 = -2*tmp23*tmp14;
double tmp40 = -(tmp22*tmp21);
double tmp41 = x(34+_OFF);
double tmp42 = tmp38 + tmp39 + tmp40 + tmp41;
double tmp43 = std::pow(tmp42,2);
double tmp44 = -(tmp4*tmp7);
double tmp45 = tmp9 + tmp44;
double tmp46 = -2*tmp22*tmp45;
double tmp47 = tmp4*tmp6;
double tmp48 = tmp47 + tmp25;
double tmp49 = -2*tmp23*tmp48;
double tmp50 = tmp15 + tmp26 + tmp17 + tmp20;
double tmp51 = -(tmp24*tmp50);
double tmp52 = x(35+_OFF);
double tmp53 = tmp46 + tmp49 + tmp51 + tmp52;
double tmp54 = std::pow(tmp53,2);
double tmp55 = tmp4*tmp5;
double tmp56 = tmp55 + tmp13;
double tmp57 = -2*tmp22*tmp56;
double tmp58 = -(tmp4*tmp6);
double tmp59 = tmp58 + tmp25;
double tmp60 = -2*tmp24*tmp59;
double tmp61 = tmp15 + tmp26 + tmp18 + tmp19;
double tmp62 = -(tmp23*tmp61);
double tmp63 = x(36+_OFF);
double tmp64 = tmp57 + tmp60 + tmp62 + tmp63;
double tmp65 = std::pow(tmp64,2);
double tmp66 = tmp43 + tmp54 + tmp65;
double tmp67 = std::sqrt(tmp66);
double tmp68 = tmp36*tmp8*tmp37*tmp67;
double tmp69 = fThrust(1+_OFF);
double tmp70 = z(1+_OFF);
double tmp71 = 2*tmp27*tmp69*tmp70;
double tmp72 = tmp68 + tmp71;
double tmp73 = tmp1*tmp3;
double tmp74 = -tmp31;
double tmp75 = -tmp32;
double tmp76 = tmp2*tmp3;
double tmp77 = ibd(2+_OFF);
double tmp78 = ibd(3+_OFF);
double tmp79 = ibod(1+_OFF);
double tmp80 = ibod(2+_OFF);
double tmp81 = ibod(3+_OFF);
double tmp82 = ibd(1+_OFF);
double tmp83 = std::pow(tmp81,2);
double tmp84 = tmp0*tmp3;
double tmp85 = tmp35 + tmp84;
double tmp86 = 4*tmp85*tmp11;
double tmp87 = -(tmp0*tmp1);
double tmp88 = tmp87 + tmp76;
double tmp89 = 4*tmp88*tmp14;
double tmp90 = tmp30 + tmp31 + tmp75 + tmp34;
double tmp91 = tmp90*tmp21;
double tmp92 = tmp86 + tmp89 + tmp91;
double tmp93 = cp(2+_OFF);
double tmp94 = cp(3+_OFF);
double tmp95 = tmp82*tmp77*tmp78;
double tmp96 = std::pow(tmp79,2);
double tmp97 = -(tmp77*tmp96);
double tmp98 = std::pow(tmp80,2);
double tmp99 = -(tmp78*tmp98);
double tmp100 = 2*tmp79*tmp80*tmp81;
double tmp101 = -(tmp82*tmp83);
double tmp102 = tmp95 + tmp97 + tmp99 + tmp100 + tmp101;
double tmp103 = 1/tmp102;
double tmp104 = mRoll(1+_OFF);
double tmp105 = -(tmp78*tmp80);
double tmp106 = tmp79*tmp81;
double tmp107 = tmp105 + tmp106;
double tmp108 = cBar(1+_OFF);
double tmp109 = mPitch(2+_OFF);
double tmp110 = 2*tmp90*tmp45;
double tmp111 = 4*tmp88*tmp48;
double tmp112 = 2*tmp85*tmp50;
double tmp113 = tmp110 + tmp111 + tmp112;
double tmp114 = 2*tmp90*tmp56;
double tmp115 = 4*tmp85*tmp59;
double tmp116 = 2*tmp88*tmp61;
double tmp117 = tmp114 + tmp115 + tmp116;
double tmp118 = -(tmp77*tmp79);
double tmp119 = tmp80*tmp81;
double tmp120 = tmp118 + tmp119;
double tmp121 = tmp79*tmp80;
double tmp122 = -(tmp82*tmp81);
double tmp123 = tmp121 + tmp122;
double tmp124 = mYaw(1+_OFF);
double tmp125 = tmp77*tmp78;
double tmp126 = -tmp83;
double tmp127 = tmp125 + tmp126;
double tmp128 = tmp30 + tmp74 + tmp32 + tmp34;
double tmp129 = 2*tmp128*tmp11;
double tmp130 = tmp0*tmp2;
double tmp131 = tmp130 + tmp73;
double tmp132 = 4*tmp131*tmp14;
double tmp133 = -(tmp0*tmp3);
double tmp134 = tmp35 + tmp133;
double tmp135 = 2*tmp134*tmp21;
double tmp136 = tmp129 + tmp132 + tmp135;
double tmp137 = tmp82*tmp78;
double tmp138 = -tmp96;
double tmp139 = tmp137 + tmp138;
double tmp140 = 4*tmp134*tmp45;
double tmp141 = 4*tmp131*tmp48;
double tmp142 = tmp128*tmp50;
double tmp143 = tmp140 + tmp141 + tmp142;
double tmp144 = 4*tmp134*tmp56;
double tmp145 = 2*tmp128*tmp59;
double tmp146 = 2*tmp131*tmp61;
double tmp147 = tmp144 + tmp145 + tmp146;
double tmp148 = tmp82*tmp77;
double tmp149 = -tmp98;
double tmp150 = tmp148 + tmp149;
double tmp151 = -(tmp0*tmp2);
double tmp152 = tmp151 + tmp73;
double tmp153 = 4*tmp152*tmp11;
double tmp154 = tmp30 + tmp74 + tmp75 + tmp33;
double tmp155 = 2*tmp154*tmp14;
double tmp156 = tmp0*tmp1;
double tmp157 = tmp156 + tmp76;
double tmp158 = 2*tmp157*tmp21;
double tmp159 = tmp153 + tmp155 + tmp158;
double tmp160 = 4*tmp157*tmp45;
double tmp161 = 2*tmp154*tmp48;
double tmp162 = 2*tmp152*tmp50;
double tmp163 = tmp160 + tmp161 + tmp162;
double tmp164 = 4*tmp157*tmp56;
double tmp165 = 4*tmp152*tmp59;
double tmp166 = tmp154*tmp61;
double tmp167 = tmp164 + tmp165 + tmp166;
J(1+_OFF,1+_OFF) = -1.268*tmp27*tmp29*tmp92*tmp72;
J(1+_OFF,2+_OFF) = 0;
J(1+_OFF,3+_OFF) = 0;
J(1+_OFF,4+_OFF) = 0;
J(1+_OFF,5+_OFF) = 0;
J(1+_OFF,6+_OFF) = 0;
J(2+_OFF,1+_OFF) = -1.268*tmp27*tmp29*tmp136*tmp72;
J(2+_OFF,2+_OFF) = 1;
J(2+_OFF,3+_OFF) = 0;
J(2+_OFF,4+_OFF) = 0;
J(2+_OFF,5+_OFF) = 0;
J(2+_OFF,6+_OFF) = 0;
J(3+_OFF,1+_OFF) = -1.268*tmp27*tmp29*tmp159*tmp72;
J(3+_OFF,2+_OFF) = 0;
J(3+_OFF,3+_OFF) = 1;
J(3+_OFF,4+_OFF) = 0;
J(3+_OFF,5+_OFF) = 0;
J(3+_OFF,6+_OFF) = 0;
J(4+_OFF,1+_OFF) = 0;
J(4+_OFF,2+_OFF) = 0;
J(4+_OFF,3+_OFF) = 0;
J(4+_OFF,4+_OFF) = -0.634*tmp93*tmp94*tmp127*tmp103*tmp104*tmp92*tmp66 - 0.634*tmp93*tmp94*tmp107*tmp103*tmp104*tmp113*tmp66 - 0.634*tmp93*tmp94*tmp120*tmp103*tmp104*tmp117*tmp66;
J(4+_OFF,5+_OFF) = 0.634*tmp108*tmp93*tmp107*tmp103*tmp109*tmp92*tmp66 + 0.634*tmp108*tmp93*tmp139*tmp103*tmp109*tmp113*tmp66 + 0.634*tmp108*tmp93*tmp123*tmp103*tmp109*tmp117*tmp66;
J(4+_OFF,6+_OFF) = 0.634*tmp93*tmp94*tmp120*tmp103*tmp124*tmp92*tmp66 + 0.634*tmp93*tmp94*tmp123*tmp103*tmp124*tmp113*tmp66 + 0.634*tmp93*tmp94*tmp150*tmp103*tmp124*tmp117*tmp66;
J(5+_OFF,1+_OFF) = 0;
J(5+_OFF,2+_OFF) = 0;
J(5+_OFF,3+_OFF) = 0;
J(5+_OFF,4+_OFF) = -0.634*tmp93*tmp94*tmp127*tmp103*tmp104*tmp136*tmp66 - 0.634*tmp93*tmp94*tmp107*tmp103*tmp104*tmp143*tmp66 - 0.634*tmp93*tmp94*tmp120*tmp103*tmp104*tmp147*tmp66;
J(5+_OFF,5+_OFF) = 0.634*tmp108*tmp93*tmp107*tmp103*tmp109*tmp136*tmp66 + 0.634*tmp108*tmp93*tmp139*tmp103*tmp109*tmp143*tmp66 + 0.634*tmp108*tmp93*tmp123*tmp103*tmp109*tmp147*tmp66;
J(5+_OFF,6+_OFF) = 0.634*tmp93*tmp94*tmp120*tmp103*tmp124*tmp136*tmp66 + 0.634*tmp93*tmp94*tmp123*tmp103*tmp124*tmp143*tmp66 + 0.634*tmp93*tmp94*tmp150*tmp103*tmp124*tmp147*tmp66;
J(6+_OFF,1+_OFF) = 0;
J(6+_OFF,2+_OFF) = 0;
J(6+_OFF,3+_OFF) = 0;
J(6+_OFF,4+_OFF) = -0.634*tmp93*tmp94*tmp127*tmp103*tmp104*tmp159*tmp66 - 0.634*tmp93*tmp94*tmp107*tmp103*tmp104*tmp163*tmp66 - 0.634*tmp93*tmp94*tmp120*tmp103*tmp104*tmp167*tmp66;
J(6+_OFF,5+_OFF) = 0.634*tmp108*tmp93*tmp107*tmp103*tmp109*tmp159*tmp66 + 0.634*tmp108*tmp93*tmp139*tmp103*tmp109*tmp163*tmp66 + 0.634*tmp108*tmp93*tmp123*tmp103*tmp109*tmp167*tmp66;
J(6+_OFF,6+_OFF) = 0.634*tmp93*tmp94*tmp120*tmp103*tmp124*tmp159*tmp66 + 0.634*tmp93*tmp94*tmp123*tmp103*tmp124*tmp163*tmp66 + 0.634*tmp93*tmp94*tmp150*tmp103*tmp124*tmp167*tmp66;
