double tmp0 = fq(2+_OFF);
double tmp1 = x(4+_OFF);
double tmp2 = fq(1+_OFF);
double tmp3 = x(5+_OFF);
double tmp4 = fq(4+_OFF);
double tmp5 = x(6+_OFF);
double tmp6 = fq(3+_OFF);
double tmp7 = x(7+_OFF);
double tmp8 = z(4+_OFF);
double tmp9 = -(tmp6*tmp1);
double tmp10 = -(tmp4*tmp3);
double tmp11 = tmp2*tmp5;
double tmp12 = tmp0*tmp7;
double tmp13 = tmp9 + tmp10 + tmp11 + tmp12;
double tmp14 = z(5+_OFF);
double tmp15 = z(6+_OFF);
double tmp16 = tmp2*tmp1;
double tmp17 = tmp0*tmp3;
double tmp18 = tmp6*tmp5;
double tmp19 = tmp4*tmp7;
double tmp20 = tmp16 + tmp17 + tmp18 + tmp19;
double tmp21 = z(7+_OFF);
double tmp22 = -(tmp4*tmp1);
double tmp23 = tmp6*tmp3;
double tmp24 = -(tmp0*tmp5);
double tmp25 = tmp2*tmp7;
double tmp26 = tmp22 + tmp23 + tmp24 + tmp25;
double tmp27 = -(tmp0*tmp1);
double tmp28 = tmp2*tmp3;
double tmp29 = tmp4*tmp5;
double tmp30 = -(tmp6*tmp7);
double tmp31 = tmp27 + tmp28 + tmp29 + tmp30;
double tmp32 = tmp4*tmp1;
double tmp33 = -(tmp6*tmp3);
double tmp34 = tmp0*tmp5;
double tmp35 = -(tmp2*tmp7);
double tmp36 = tmp32 + tmp33 + tmp34 + tmp35;
double tmp37 = tmp13*tmp14;
double tmp38 = tmp20*tmp8;
double tmp39 = tmp0*tmp1;
double tmp40 = -(tmp2*tmp3);
double tmp41 = -(tmp4*tmp5);
double tmp42 = tmp6*tmp7;
double tmp43 = tmp39 + tmp40 + tmp41 + tmp42;
double tmp44 = tmp6*tmp1;
double tmp45 = tmp4*tmp3;
double tmp46 = -(tmp2*tmp5);
double tmp47 = -(tmp0*tmp7);
double tmp48 = tmp44 + tmp45 + tmp46 + tmp47;
double tmp49 = tmp31*tmp21;
double tmp50 = tmp26*tmp15;
J(1+_OFF,1+_OFF) = 0;
J(1+_OFF,2+_OFF) = 0;
J(1+_OFF,3+_OFF) = 0;
J(2+_OFF,1+_OFF) = 0;
J(2+_OFF,2+_OFF) = 0;
J(2+_OFF,3+_OFF) = 0;
J(3+_OFF,1+_OFF) = 0;
J(3+_OFF,2+_OFF) = 0;
J(3+_OFF,3+_OFF) = 0;
J(4+_OFF,1+_OFF) = sign*(tmp38 + tmp31*tmp14 - tmp13*tmp15 + tmp36*tmp21);
J(4+_OFF,2+_OFF) = sign*(tmp26*tmp8 + tmp37 - tmp43*tmp15 + tmp20*tmp21);
J(4+_OFF,3+_OFF) = sign*(tmp48*tmp8 + tmp26*tmp14 - tmp20*tmp15 + tmp49);
J(5+_OFF,1+_OFF) = sign*(tmp36*tmp8 + tmp37 + tmp31*tmp15 - tmp20*tmp21);
J(5+_OFF,2+_OFF) = sign*(tmp38 + tmp43*tmp14 + tmp13*tmp15 - tmp26*tmp21);
J(5+_OFF,3+_OFF) = sign*(tmp31*tmp8 + tmp20*tmp14 + tmp50 - tmp48*tmp21);
J(6+_OFF,1+_OFF) = sign*(tmp13*tmp8 - tmp36*tmp14 + tmp20*tmp15 + tmp49);
J(6+_OFF,2+_OFF) = sign*(tmp43*tmp8 - tmp20*tmp14 + tmp50 + tmp13*tmp21);
J(6+_OFF,3+_OFF) = sign*(tmp38 - tmp31*tmp14 + tmp48*tmp15 + tmp26*tmp21);
