double tmp0 = x(4+_OFF);
double tmp1 = x(6+_OFF);
double tmp2 = x(7+_OFF);
double tmp3 = fpos(1+_OFF);
double tmp4 = x(1+_OFF);
double tmp5 = x(5+_OFF);
double tmp6 = fpos(2+_OFF);
double tmp7 = x(2+_OFF);
double tmp8 = fpos(3+_OFF);
double tmp9 = x(3+_OFF);
double tmp10 = 2*tmp6*tmp0;
double tmp11 = -2*tmp7*tmp0;
double tmp12 = 2*tmp8*tmp5;
double tmp13 = -2*tmp9*tmp5;
double tmp14 = -2*tmp3*tmp2;
double tmp15 = 2*tmp4*tmp2;
double tmp16 = tmp10 + tmp11 + tmp12 + tmp13 + tmp14 + tmp15;
double tmp17 = 2*tmp3*tmp5;
double tmp18 = -2*tmp4*tmp5;
double tmp19 = 2*tmp6*tmp1;
double tmp20 = -2*tmp7*tmp1;
double tmp21 = 2*tmp8*tmp2;
double tmp22 = -2*tmp9*tmp2;
double tmp23 = tmp17 + tmp18 + tmp19 + tmp20 + tmp21 + tmp22;
double tmp24 = 2*tmp8*tmp0;
double tmp25 = -2*tmp9*tmp0;
double tmp26 = -2*tmp6*tmp5;
double tmp27 = 2*tmp7*tmp5;
double tmp28 = 2*tmp3*tmp1;
double tmp29 = -2*tmp4*tmp1;
double tmp30 = tmp24 + tmp25 + tmp26 + tmp27 + tmp28 + tmp29;
double tmp31 = 2*tmp3*tmp0;
double tmp32 = -2*tmp4*tmp0;
double tmp33 = -2*tmp8*tmp1;
double tmp34 = 2*tmp9*tmp1;
double tmp35 = 2*tmp6*tmp2;
double tmp36 = -2*tmp7*tmp2;
double tmp37 = tmp31 + tmp32 + tmp33 + tmp34 + tmp35 + tmp36;
double tmp38 = fq(1+_OFF);
double tmp39 = z(4+_OFF);
double tmp40 = fq(2+_OFF);
double tmp41 = z(5+_OFF);
double tmp42 = fq(3+_OFF);
double tmp43 = z(6+_OFF);
double tmp44 = fq(4+_OFF);
double tmp45 = z(7+_OFF);
double tmp46 = tmp42*tmp39;
double tmp47 = tmp44*tmp41;
double tmp48 = tmp38*tmp43;
double tmp49 = -(tmp40*tmp45);
double tmp50 = tmp46 + tmp47 + tmp48 + tmp49;
double tmp51 = sign*tmp50;
double tmp52 = -(tmp38*tmp39);
double tmp53 = tmp40*tmp41;
double tmp54 = tmp42*tmp43;
double tmp55 = tmp44*tmp45;
double tmp56 = tmp52 + tmp53 + tmp54 + tmp55;
double tmp57 = sign*tmp56;
double tmp58 = tmp44*tmp39;
double tmp59 = -(tmp42*tmp41);
double tmp60 = tmp40*tmp43;
double tmp61 = tmp38*tmp45;
double tmp62 = tmp58 + tmp59 + tmp60 + tmp61;
double tmp63 = sign*tmp62;
double tmp64 = tmp40*tmp39;
double tmp65 = tmp38*tmp41;
double tmp66 = -(tmp44*tmp43);
double tmp67 = tmp42*tmp45;
double tmp68 = tmp64 + tmp65 + tmp66 + tmp67;
double tmp69 = sign*tmp68;
J(1+_OFF,1+_OFF) = tmp37;
J(1+_OFF,2+_OFF) = tmp23;
J(1+_OFF,3+_OFF) = -2*tmp8*tmp0 + 2*tmp9*tmp0 + 2*tmp6*tmp5 - 2*tmp7*tmp5 - 2*tmp3*tmp1 + 2*tmp4*tmp1;
J(1+_OFF,4+_OFF) = tmp16;
J(2+_OFF,1+_OFF) = tmp16;
J(2+_OFF,2+_OFF) = tmp30;
J(2+_OFF,3+_OFF) = tmp23;
J(2+_OFF,4+_OFF) = -2*tmp3*tmp0 + 2*tmp4*tmp0 + 2*tmp8*tmp1 - 2*tmp9*tmp1 - 2*tmp6*tmp2 + 2*tmp7*tmp2;
J(3+_OFF,1+_OFF) = tmp30;
J(3+_OFF,2+_OFF) = -2*tmp6*tmp0 + 2*tmp7*tmp0 - 2*tmp8*tmp5 + 2*tmp9*tmp5 + 2*tmp3*tmp2 - 2*tmp4*tmp2;
J(3+_OFF,3+_OFF) = tmp37;
J(3+_OFF,4+_OFF) = tmp23;
J(4+_OFF,1+_OFF) = tmp69;
J(4+_OFF,2+_OFF) = tmp57;
J(4+_OFF,3+_OFF) = sign*(-(tmp44*tmp39) + tmp42*tmp41 - tmp40*tmp43 - tmp38*tmp45);
J(4+_OFF,4+_OFF) = tmp51;
J(5+_OFF,1+_OFF) = tmp51;
J(5+_OFF,2+_OFF) = tmp63;
J(5+_OFF,3+_OFF) = tmp57;
J(5+_OFF,4+_OFF) = sign*(-(tmp40*tmp39) - tmp38*tmp41 + tmp44*tmp43 - tmp42*tmp45);
J(6+_OFF,1+_OFF) = tmp63;
J(6+_OFF,2+_OFF) = sign*(-(tmp42*tmp39) - tmp44*tmp41 - tmp38*tmp43 + tmp40*tmp45);
J(6+_OFF,3+_OFF) = tmp69;
J(6+_OFF,4+_OFF) = tmp57;
