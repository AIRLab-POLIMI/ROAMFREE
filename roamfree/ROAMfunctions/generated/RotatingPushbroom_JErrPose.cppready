double tmp0 = x(23+_OFF);
double tmp1 = x(24+_OFF);
double tmp2 = x(25+_OFF);
double tmp3 = x(26+_OFF);
double tmp4 = tmp1*tmp2;
double tmp5 = tmp0*tmp3;
double tmp6 = tmp4 + tmp5;
double tmp7 = x(6+_OFF);
double tmp8 = tmp0*tmp1;
double tmp9 = x(5+_OFF);
double tmp10 = tmp2*tmp3;
double tmp11 = x(4+_OFF);
double tmp12 = x(21+_OFF);
double tmp13 = x(7+_OFF);
double tmp14 = std::pow(tmp9,2);
double tmp15 = 2*tmp14*tmp6;
double tmp16 = std::pow(tmp7,2);
double tmp17 = 2*tmp16;
double tmp18 = -1 + tmp17;
double tmp19 = tmp18*tmp6;
double tmp20 = -(tmp2*tmp3);
double tmp21 = tmp8 + tmp20;
double tmp22 = 2*tmp11*tmp7*tmp21;
double tmp23 = -(tmp0*tmp1);
double tmp24 = tmp23 + tmp10;
double tmp25 = 2*tmp9*tmp13*tmp24;
double tmp26 = tmp15 + tmp19 + tmp22 + tmp25;
double tmp27 = 1/tmp26;
double tmp28 = x(22+_OFF);
double tmp29 = h(1+_OFF);
double tmp30 = x(3+_OFF);
double tmp31 = k(1+_OFF);
double tmp32 = tmp0*tmp2;
double tmp33 = -(tmp1*tmp3);
double tmp34 = tmp32 + tmp33;
double tmp35 = tmp12*tmp34;
double tmp36 = -(tmp11*tmp7*tmp12);
double tmp37 = tmp9*tmp13*tmp12;
double tmp38 = -tmp30;
double tmp39 = tmp29 + tmp38;
double tmp40 = tmp39*tmp6;
double tmp41 = tmp36 + tmp37 + tmp40;
double tmp42 = tmp41*tmp27;
double tmp43 = tmp28 + tmp42;
double tmp44 = tmp1*tmp2*tmp43;
double tmp45 = tmp11*tmp7*tmp12;
double tmp46 = -(tmp9*tmp13*tmp12);
double tmp47 = -tmp29;
double tmp48 = tmp47 + tmp30;
double tmp49 = tmp48*tmp6;
double tmp50 = tmp45 + tmp46 + tmp49;
double tmp51 = tmp50*tmp27;
double tmp52 = tmp28 + tmp51;
double tmp53 = tmp0*tmp3*tmp52;
double tmp54 = tmp35 + tmp44 + tmp53;
double tmp55 = tmp8 + tmp10;
double tmp56 = -(tmp1*tmp2);
double tmp57 = -(tmp0*tmp3);
double tmp58 = tmp56 + tmp57;
double tmp59 = k(2+_OFF);
J(1+_OFF,1+_OFF) = 0;
J(1+_OFF,2+_OFF) = 0;
J(1+_OFF,3+_OFF) = (tmp31*tmp6*tmp55*tmp27)/tmp54 - (tmp31*(tmp1*tmp2*tmp58*tmp27 + tmp0*tmp3*tmp6*tmp27)*(tmp12*(-1 + 2*std::pow(tmp2,2) + 2*std::pow(tmp3,2)) + 2*(x(20+_OFF)*tmp6 + tmp55*tmp50*tmp27)))/(2.*std::pow(tmp54,2));
J(2+_OFF,1+_OFF) = 0;
J(2+_OFF,2+_OFF) = 0;
J(2+_OFF,3+_OFF) = (-2*tmp59*tmp6 - 2*tmp31*tmp21)/(2.*tmp41) - (tmp58*(-2*tmp59*tmp50 + tmp31*((-1 + 2*tmp14 + tmp17)*tmp12 + 2*tmp39*tmp21)))/(2.*std::pow(tmp41,2));
