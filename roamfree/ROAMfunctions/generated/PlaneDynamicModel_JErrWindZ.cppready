double tmp0 = x(4+_OFF);
double tmp1 = x(6+_OFF);
double tmp2 = x(5+_OFF);
double tmp3 = x(7+_OFF);
double tmp4 = x(30+_OFF);
double tmp5 = x(31+_OFF);
double tmp6 = x(32+_OFF);
double tmp7 = x(33+_OFF);
double tmp8 = tmp5*tmp6;
double tmp9 = std::pow(tmp4,2);
double tmp10 = std::pow(tmp5,2);
double tmp11 = std::pow(tmp6,2);
double tmp12 = std::pow(tmp7,2);
double tmp13 = -tmp12;
double tmp14 = windxy(1+_OFF);
double tmp15 = tmp5*tmp7;
double tmp16 = windxy(2+_OFF);
double tmp17 = tmp6*tmp7;
double tmp18 = windz(1+_OFF);
double tmp19 = -tmp10;
double tmp20 = -tmp11;
double tmp21 = tmp4*tmp7;
double tmp22 = tmp8 + tmp21;
double tmp23 = -2*tmp16*tmp22;
double tmp24 = -(tmp4*tmp6);
double tmp25 = tmp24 + tmp15;
double tmp26 = -2*tmp18*tmp25;
double tmp27 = tmp9 + tmp10 + tmp20 + tmp13;
double tmp28 = -(tmp14*tmp27);
double tmp29 = x(34+_OFF);
double tmp30 = tmp23 + tmp26 + tmp28 + tmp29;
double tmp31 = tmp4*tmp6;
double tmp32 = tmp31 + tmp15;
double tmp33 = -2*tmp14*tmp32;
double tmp34 = -(tmp4*tmp5);
double tmp35 = tmp34 + tmp17;
double tmp36 = -2*tmp16*tmp35;
double tmp37 = tmp9 + tmp19 + tmp20 + tmp12;
double tmp38 = -(tmp18*tmp37);
double tmp39 = x(36+_OFF);
double tmp40 = tmp33 + tmp36 + tmp38 + tmp39;
double tmp41 = std::atan2(tmp40,tmp30);
double tmp42 = -(tmp4*tmp7);
double tmp43 = tmp8 + tmp42;
double tmp44 = tmp4*tmp5;
double tmp45 = tmp44 + tmp17;
double tmp46 = tmp9 + tmp19 + tmp11 + tmp13;
double tmp47 = -2*tmp14*tmp43;
double tmp48 = -2*tmp18*tmp45;
double tmp49 = -(tmp16*tmp46);
double tmp50 = x(35+_OFF);
double tmp51 = tmp47 + tmp48 + tmp49 + tmp50;
double tmp52 = std::pow(tmp30,2);
double tmp53 = std::pow(tmp51,2);
double tmp54 = std::pow(tmp40,2);
double tmp55 = tmp52 + tmp53 + tmp54;
double tmp56 = 1/std::sqrt(tmp55);
double tmp57 = cp(2+_OFF);
double tmp58 = fDrag(1+_OFF);
double tmp59 = fDrag(2+_OFF);
double tmp60 = -(tmp41*tmp59);
double tmp61 = std::pow(tmp41,2);
double tmp62 = fDrag(3+_OFF);
double tmp63 = tmp61*tmp62;
double tmp64 = tmp51*tmp56;
double tmp65 = std::asin(tmp64);
double tmp66 = std::pow(tmp65,2);
double tmp67 = fDrag(4+_OFF);
double tmp68 = tmp66*tmp67;
double tmp69 = tmp58 + tmp60 + tmp63 + tmp68;
double tmp70 = -4*tmp25*tmp30;
double tmp71 = -4*tmp45*tmp51;
double tmp72 = -tmp9;
double tmp73 = tmp72 + tmp10 + tmp11 + tmp13;
double tmp74 = 2*tmp73*tmp40;
double tmp75 = tmp70 + tmp71 + tmp74;
double tmp76 = 1/tmp55;
double tmp77 = fLat(1+_OFF);
double tmp78 = -(tmp53*tmp76);
double tmp79 = 1 + tmp78;
double tmp80 = std::sqrt(tmp55);
double tmp81 = tmp52 + tmp54;
double tmp82 = 1/tmp81;
double tmp83 = tmp73*tmp30*tmp82;
double tmp84 = 2*tmp14*tmp32;
double tmp85 = 2*tmp16*tmp35;
double tmp86 = tmp18*tmp37;
double tmp87 = -tmp39;
double tmp88 = tmp84 + tmp85 + tmp86 + tmp87;
double tmp89 = -2*tmp25*tmp88*tmp82;
double tmp90 = tmp83 + tmp89;
double tmp91 = 1/std::sqrt(tmp79);
double tmp92 = std::pow(tmp55,-1.5);
double tmp93 = -(tmp51*tmp75*tmp92)/2.;
double tmp94 = -2*tmp45*tmp56;
double tmp95 = tmp93 + tmp94;
double tmp96 = cp(4+_OFF);
double tmp97 = 1/tmp96;
double tmp98 = std::pow(tmp0,2);
double tmp99 = std::pow(tmp2,2);
double tmp100 = std::pow(tmp1,2);
double tmp101 = -tmp100;
double tmp102 = std::pow(tmp3,2);
double tmp103 = -tmp102;
double tmp104 = tmp98 + tmp99 + tmp101 + tmp103;
double tmp105 = tmp2*tmp1;
double tmp106 = tmp0*tmp3;
double tmp107 = tmp105 + tmp106;
double tmp108 = -(tmp0*tmp1);
double tmp109 = tmp2*tmp3;
double tmp110 = tmp108 + tmp109;
double tmp111 = 1/std::sqrt(tmp81);
double tmp112 = fLift(1+_OFF);
double tmp113 = -tmp112;
double tmp114 = fLift(2+_OFF);
double tmp115 = tmp41*tmp114;
double tmp116 = tmp113 + tmp115;
double tmp117 = tmp70 + tmp74;
double tmp118 = std::pow(tmp81,-1.5);
double tmp119 = std::pow(tmp55,-2);
double tmp120 = tmp53*tmp75*tmp119;
double tmp121 = 4*tmp45*tmp51*tmp76;
double tmp122 = tmp120 + tmp121;
double tmp123 = std::sqrt(tmp79);
double tmp124 = -(tmp59*tmp90);
double tmp125 = 2*tmp41*tmp62*tmp90;
double tmp126 = 2*tmp65*tmp67*tmp91*tmp95;
double tmp127 = tmp124 + tmp125 + tmp126;
double tmp128 = cp(1+_OFF);
double tmp129 = 0.317*tmp57*tmp69*tmp51*tmp75*tmp56;
double tmp130 = -1.268*tmp57*tmp69*tmp45*tmp80;
double tmp131 = 0.317*tmp65*tmp57*tmp77*tmp55*tmp122*tmp91;
double tmp132 = 0.634*tmp65*tmp57*tmp77*tmp75*tmp123;
double tmp133 = 0.634*tmp57*tmp77*tmp55*tmp95;
double tmp134 = 0.634*tmp57*tmp51*tmp80*tmp127;
double tmp135 = tmp129 + tmp130 + tmp131 + tmp132 + tmp133 + tmp134;
double tmp136 = -(tmp0*tmp3);
double tmp137 = tmp105 + tmp136;
double tmp138 = -tmp99;
double tmp139 = tmp98 + tmp138 + tmp100 + tmp103;
double tmp140 = tmp0*tmp2;
double tmp141 = tmp1*tmp3;
double tmp142 = tmp140 + tmp141;
double tmp143 = 0.634*tmp57*tmp116*tmp30*tmp75*tmp111;
double tmp144 = -0.317*tmp65*tmp57*tmp77*tmp51*tmp40*tmp75*tmp111*tmp56;
double tmp145 = 0.317*tmp65*tmp57*tmp77*tmp51*tmp40*tmp117*tmp118*tmp80;
double tmp146 = -0.634*tmp65*tmp57*tmp77*tmp73*tmp51*tmp111*tmp80;
double tmp147 = 1.268*tmp65*tmp57*tmp77*tmp45*tmp40*tmp111*tmp80;
double tmp148 = -0.317*tmp57*tmp116*tmp30*tmp117*tmp118*tmp55;
double tmp149 = -1.268*tmp57*tmp116*tmp25*tmp111*tmp55;
double tmp150 = 0.634*tmp57*tmp114*tmp30*tmp111*tmp55*tmp90;
double tmp151 = 0.317*tmp57*tmp69*tmp40*tmp111*tmp55*tmp122*tmp91;
double tmp152 = 0.634*tmp57*tmp69*tmp40*tmp75*tmp111*tmp123;
double tmp153 = -0.317*tmp57*tmp69*tmp40*tmp117*tmp118*tmp55*tmp123;
double tmp154 = 0.634*tmp57*tmp69*tmp73*tmp111*tmp55*tmp123;
double tmp155 = -0.634*tmp57*tmp77*tmp51*tmp40*tmp111*tmp80*tmp91*tmp95;
double tmp156 = 0.634*tmp57*tmp40*tmp111*tmp55*tmp123*tmp127;
double tmp157 = tmp143 + tmp144 + tmp145 + tmp146 + tmp147 + tmp148 + tmp149 + tmp150 + tmp151 + tmp152 + tmp153 + tmp154 + tmp155 + tmp156;
double tmp158 = -0.634*tmp57*tmp116*tmp40*tmp75*tmp111;
double tmp159 = -0.317*tmp65*tmp57*tmp77*tmp30*tmp51*tmp75*tmp111*tmp56;
double tmp160 = 0.317*tmp65*tmp57*tmp77*tmp30*tmp51*tmp117*tmp118*tmp80;
double tmp161 = 1.268*tmp65*tmp57*tmp77*tmp45*tmp30*tmp111*tmp80;
double tmp162 = 1.268*tmp65*tmp57*tmp77*tmp25*tmp51*tmp111*tmp80;
double tmp163 = 0.317*tmp57*tmp116*tmp40*tmp117*tmp118*tmp55;
double tmp164 = -0.634*tmp57*tmp116*tmp73*tmp111*tmp55;
double tmp165 = -0.634*tmp57*tmp114*tmp40*tmp111*tmp55*tmp90;
double tmp166 = 0.317*tmp57*tmp69*tmp30*tmp111*tmp55*tmp122*tmp91;
double tmp167 = 0.634*tmp57*tmp69*tmp30*tmp75*tmp111*tmp123;
double tmp168 = -0.317*tmp57*tmp69*tmp30*tmp117*tmp118*tmp55*tmp123;
double tmp169 = -1.268*tmp57*tmp69*tmp25*tmp111*tmp55*tmp123;
double tmp170 = -0.634*tmp57*tmp77*tmp30*tmp51*tmp111*tmp80*tmp91*tmp95;
double tmp171 = 0.634*tmp57*tmp30*tmp111*tmp55*tmp123*tmp127;
double tmp172 = std::pow(tmp128,2);
double tmp173 = std::pow(M_PI,-2);
double tmp174 = fThrust(3+_OFF);
double tmp175 = tmp173*tmp174*tmp75;
double tmp176 = 1/M_PI;
double tmp177 = fThrust(2+_OFF);
double tmp178 = z(1+_OFF);
double tmp179 = (tmp176*tmp128*tmp177*tmp75*tmp56*tmp178)/2.;
double tmp180 = tmp175 + tmp179;
double tmp181 = 1.268*tmp172*tmp180;
double tmp182 = tmp158 + tmp159 + tmp160 + tmp161 + tmp162 + tmp163 + tmp164 + tmp165 + tmp166 + tmp167 + tmp168 + tmp169 + tmp170 + tmp171 + tmp181;
double tmp183 = tmp0*tmp1;
double tmp184 = tmp183 + tmp109;
double tmp185 = -(tmp0*tmp2);
double tmp186 = tmp185 + tmp141;
double tmp187 = tmp98 + tmp138 + tmp101 + tmp102;
double tmp188 = 2*tmp104*tmp32;
double tmp189 = 4*tmp107*tmp35;
double tmp190 = 2*tmp110*tmp37;
double tmp191 = tmp188 + tmp189 + tmp190;
double tmp192 = ibd(2+_OFF);
double tmp193 = ibod(1+_OFF);
double tmp194 = ibd(3+_OFF);
double tmp195 = ibod(2+_OFF);
double tmp196 = ibod(3+_OFF);
double tmp197 = ibd(1+_OFF);
double tmp198 = cp(3+_OFF);
double tmp199 = mRoll(2+_OFF);
double tmp200 = mRoll(3+_OFF);
double tmp201 = x(37+_OFF);
double tmp202 = mRoll(4+_OFF);
double tmp203 = x(39+_OFF);
double tmp204 = tmp197*tmp192*tmp194;
double tmp205 = std::pow(tmp193,2);
double tmp206 = -(tmp192*tmp205);
double tmp207 = std::pow(tmp195,2);
double tmp208 = -(tmp194*tmp207);
double tmp209 = 2*tmp193*tmp195*tmp196;
double tmp210 = std::pow(tmp196,2);
double tmp211 = -(tmp197*tmp210);
double tmp212 = tmp204 + tmp206 + tmp208 + tmp209 + tmp211;
double tmp213 = 1/tmp212;
double tmp214 = cBar(1+_OFF);
double tmp215 = mPitch(3+_OFF);
double tmp216 = mPitch(4+_OFF);
double tmp217 = x(38+_OFF);
double tmp218 = mYaw(2+_OFF);
double tmp219 = mYaw(3+_OFF);
double tmp220 = 2*tmp104*tmp43;
double tmp221 = 4*tmp110*tmp45;
double tmp222 = 2*tmp107*tmp46;
double tmp223 = tmp220 + tmp221 + tmp222;
double tmp224 = -(tmp199*tmp91*tmp95);
double tmp225 = -(tmp198*tmp200*tmp75*tmp92*tmp201)/4.;
double tmp226 = (tmp198*tmp202*tmp75*tmp92*tmp203)/4.;
double tmp227 = tmp224 + tmp225 + tmp226;
double tmp228 = 0.634*tmp57*tmp198*tmp55*tmp227;
double tmp229 = -(tmp65*tmp199);
double tmp230 = (tmp198*tmp200*tmp56*tmp201)/2.;
double tmp231 = -(tmp198*tmp202*tmp56*tmp203)/2.;
double tmp232 = mRoll(1+_OFF);
double tmp233 = z(2+_OFF);
double tmp234 = tmp232*tmp233;
double tmp235 = tmp229 + tmp230 + tmp231 + tmp234;
double tmp236 = 0.634*tmp57*tmp198*tmp75*tmp235;
double tmp237 = tmp228 + tmp236;
double tmp238 = tmp215*tmp90;
double tmp239 = -(tmp214*tmp216*tmp75*tmp92*tmp217)/4.;
double tmp240 = tmp238 + tmp239;
double tmp241 = 0.634*tmp214*tmp57*tmp55*tmp240;
double tmp242 = mPitch(1+_OFF);
double tmp243 = -tmp242;
double tmp244 = tmp41*tmp215;
double tmp245 = (tmp214*tmp216*tmp56*tmp217)/2.;
double tmp246 = mPitch(2+_OFF);
double tmp247 = z(3+_OFF);
double tmp248 = -(tmp246*tmp247);
double tmp249 = tmp243 + tmp244 + tmp245 + tmp248;
double tmp250 = 0.634*tmp214*tmp57*tmp75*tmp249;
double tmp251 = tmp241 + tmp250;
double tmp252 = tmp193*tmp195;
double tmp253 = -(tmp197*tmp196);
double tmp254 = tmp252 + tmp253;
double tmp255 = tmp218*tmp91*tmp95;
double tmp256 = -(tmp198*tmp219*tmp75*tmp92*tmp203)/4.;
double tmp257 = tmp255 + tmp256;
double tmp258 = 0.634*tmp57*tmp198*tmp55*tmp257;
double tmp259 = tmp65*tmp218;
double tmp260 = (tmp198*tmp219*tmp56*tmp203)/2.;
double tmp261 = mYaw(1+_OFF);
double tmp262 = z(4+_OFF);
double tmp263 = -(tmp261*tmp262);
double tmp264 = tmp259 + tmp260 + tmp263;
double tmp265 = 0.634*tmp57*tmp198*tmp75*tmp264;
double tmp266 = tmp258 + tmp265;
double tmp267 = 4*tmp107*tmp22;
double tmp268 = 4*tmp110*tmp25;
double tmp269 = tmp104*tmp27;
double tmp270 = tmp267 + tmp268 + tmp269;
double tmp271 = -(tmp194*tmp195);
double tmp272 = tmp193*tmp196;
double tmp273 = tmp271 + tmp272;
double tmp274 = -(tmp192*tmp193);
double tmp275 = tmp195*tmp196;
double tmp276 = tmp274 + tmp275;
double tmp277 = 4*tmp137*tmp32;
double tmp278 = 2*tmp139*tmp35;
double tmp279 = 2*tmp142*tmp37;
double tmp280 = tmp277 + tmp278 + tmp279;
double tmp281 = tmp276*tmp213*tmp237;
double tmp282 = tmp254*tmp213*tmp251;
double tmp283 = tmp197*tmp192;
double tmp284 = -tmp207;
double tmp285 = tmp283 + tmp284;
double tmp286 = tmp285*tmp213*tmp266;
double tmp287 = tmp281 + tmp282 + tmp286;
double tmp288 = 4*tmp137*tmp43;
double tmp289 = 4*tmp142*tmp45;
double tmp290 = tmp139*tmp46;
double tmp291 = tmp288 + tmp289 + tmp290;
double tmp292 = tmp273*tmp213*tmp237;
double tmp293 = tmp197*tmp194;
double tmp294 = -tmp205;
double tmp295 = tmp293 + tmp294;
double tmp296 = tmp295*tmp213*tmp251;
double tmp297 = tmp254*tmp213*tmp266;
double tmp298 = tmp292 + tmp296 + tmp297;
double tmp299 = 2*tmp139*tmp22;
double tmp300 = 4*tmp142*tmp25;
double tmp301 = 2*tmp137*tmp27;
double tmp302 = tmp299 + tmp300 + tmp301;
double tmp303 = tmp192*tmp194;
double tmp304 = -tmp210;
double tmp305 = tmp303 + tmp304;
double tmp306 = tmp305*tmp213*tmp237;
double tmp307 = tmp273*tmp213*tmp251;
double tmp308 = tmp276*tmp213*tmp266;
double tmp309 = tmp306 + tmp307 + tmp308;
double tmp310 = 4*tmp184*tmp32;
double tmp311 = 4*tmp186*tmp35;
double tmp312 = tmp187*tmp37;
double tmp313 = tmp310 + tmp311 + tmp312;
double tmp314 = 4*tmp184*tmp43;
double tmp315 = 2*tmp187*tmp45;
double tmp316 = 2*tmp186*tmp46;
double tmp317 = tmp314 + tmp315 + tmp316;
double tmp318 = 4*tmp186*tmp22;
double tmp319 = 2*tmp187*tmp25;
double tmp320 = 2*tmp184*tmp27;
double tmp321 = tmp318 + tmp319 + tmp320;
J(1+_OFF,1+_OFF) = -(tmp97*tmp223*tmp135) - tmp97*tmp191*tmp157 - tmp97*tmp270*tmp182;
J(2+_OFF,1+_OFF) = -(tmp97*tmp291*tmp135) - tmp97*tmp280*tmp157 - tmp97*tmp302*tmp182;
J(3+_OFF,1+_OFF) = -(tmp97*tmp317*tmp135) - tmp97*tmp313*tmp157 - tmp97*tmp321*tmp182;
J(4+_OFF,1+_OFF) = -(tmp191*tmp287) - tmp223*tmp298 - tmp270*tmp309;
J(5+_OFF,1+_OFF) = -(tmp280*tmp287) - tmp291*tmp298 - tmp302*tmp309;
J(6+_OFF,1+_OFF) = -(tmp313*tmp287) - tmp317*tmp298 - tmp321*tmp309;
