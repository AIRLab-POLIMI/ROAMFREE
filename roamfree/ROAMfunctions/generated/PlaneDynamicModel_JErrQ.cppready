double tmp0 = x(30+_OFF);
double tmp1 = x(31+_OFF);
double tmp2 = x(32+_OFF);
double tmp3 = x(33+_OFF);
double tmp4 = tmp1*tmp2;
double tmp5 = std::pow(tmp0,2);
double tmp6 = std::pow(tmp1,2);
double tmp7 = std::pow(tmp2,2);
double tmp8 = std::pow(tmp3,2);
double tmp9 = -tmp8;
double tmp10 = wind(1+_OFF);
double tmp11 = tmp1*tmp3;
double tmp12 = wind(2+_OFF);
double tmp13 = tmp2*tmp3;
double tmp14 = wind(3+_OFF);
double tmp15 = -tmp6;
double tmp16 = -tmp7;
double tmp17 = tmp0*tmp3;
double tmp18 = tmp4 + tmp17;
double tmp19 = -2*tmp12*tmp18;
double tmp20 = -(tmp0*tmp2);
double tmp21 = tmp20 + tmp11;
double tmp22 = -2*tmp14*tmp21;
double tmp23 = tmp5 + tmp6 + tmp16 + tmp9;
double tmp24 = -(tmp10*tmp23);
double tmp25 = x(34+_OFF);
double tmp26 = tmp19 + tmp22 + tmp24 + tmp25;
double tmp27 = tmp0*tmp2;
double tmp28 = tmp27 + tmp11;
double tmp29 = -2*tmp10*tmp28;
double tmp30 = -(tmp0*tmp1);
double tmp31 = tmp30 + tmp13;
double tmp32 = -2*tmp12*tmp31;
double tmp33 = tmp5 + tmp15 + tmp16 + tmp8;
double tmp34 = -(tmp14*tmp33);
double tmp35 = x(36+_OFF);
double tmp36 = tmp29 + tmp32 + tmp34 + tmp35;
double tmp37 = std::atan2(tmp36,tmp26);
double tmp38 = -(tmp0*tmp3);
double tmp39 = tmp4 + tmp38;
double tmp40 = tmp0*tmp1;
double tmp41 = tmp40 + tmp13;
double tmp42 = tmp5 + tmp15 + tmp7 + tmp9;
double tmp43 = -2*tmp10*tmp39;
double tmp44 = -2*tmp14*tmp41;
double tmp45 = -(tmp12*tmp42);
double tmp46 = x(35+_OFF);
double tmp47 = tmp43 + tmp44 + tmp45 + tmp46;
double tmp48 = std::pow(tmp26,2);
double tmp49 = std::pow(tmp47,2);
double tmp50 = std::pow(tmp36,2);
double tmp51 = tmp48 + tmp49 + tmp50;
double tmp52 = 1/std::sqrt(tmp51);
double tmp53 = tmp47*tmp52;
double tmp54 = std::asin(tmp53);
double tmp55 = cp(2+_OFF);
double tmp56 = cp(4+_OFF);
double tmp57 = 1/tmp56;
double tmp58 = x(4+_OFF);
double tmp59 = x(7+_OFF);
double tmp60 = x(6+_OFF);
double tmp61 = fLat(1+_OFF);
double tmp62 = std::sqrt(tmp51);
double tmp63 = tmp48 + tmp50;
double tmp64 = 1/std::sqrt(tmp63);
double tmp65 = fDrag(1+_OFF);
double tmp66 = fDrag(2+_OFF);
double tmp67 = -(tmp37*tmp66);
double tmp68 = std::pow(tmp37,2);
double tmp69 = fDrag(3+_OFF);
double tmp70 = tmp68*tmp69;
double tmp71 = std::pow(tmp54,2);
double tmp72 = fDrag(4+_OFF);
double tmp73 = tmp71*tmp72;
double tmp74 = tmp65 + tmp67 + tmp70 + tmp73;
double tmp75 = 1/tmp51;
double tmp76 = -(tmp49*tmp75);
double tmp77 = 1 + tmp76;
double tmp78 = std::sqrt(tmp77);
double tmp79 = fLift(1+_OFF);
double tmp80 = -tmp79;
double tmp81 = fLift(2+_OFF);
double tmp82 = tmp37*tmp81;
double tmp83 = tmp80 + tmp82;
double tmp84 = cp(1+_OFF);
double tmp85 = std::pow(tmp84,2);
double tmp86 = z(1+_OFF);
double tmp87 = 0.634*tmp55*tmp74*tmp47*tmp62;
double tmp88 = 0.634*tmp54*tmp55*tmp61*tmp51*tmp78;
double tmp89 = 0. + tmp87 + tmp88;
double tmp90 = x(5+_OFF);
double tmp91 = -0.634*tmp54*tmp55*tmp61*tmp47*tmp36*tmp64*tmp62;
double tmp92 = 0.634*tmp55*tmp83*tmp26*tmp64*tmp51;
double tmp93 = 0.634*tmp55*tmp74*tmp36*tmp64*tmp51*tmp78;
double tmp94 = tmp91 + tmp92 + tmp93;
double tmp95 = -0.634*tmp54*tmp55*tmp61*tmp26*tmp47*tmp64*tmp62;
double tmp96 = -0.634*tmp55*tmp83*tmp36*tmp64*tmp51;
double tmp97 = 0.634*tmp55*tmp74*tmp26*tmp64*tmp51*tmp78;
double tmp98 = std::pow(M_PI,-2);
double tmp99 = fThrust(3+_OFF);
double tmp100 = tmp98*tmp99*tmp51;
double tmp101 = 1/M_PI;
double tmp102 = fThrust(2+_OFF);
double tmp103 = tmp101*tmp84*tmp102*tmp62*tmp86;
double tmp104 = fThrust(1+_OFF);
double tmp105 = std::pow(tmp86,2);
double tmp106 = tmp85*tmp104*tmp105;
double tmp107 = tmp100 + tmp103 + tmp106;
double tmp108 = 1.268*tmp85*tmp107;
double tmp109 = tmp95 + tmp96 + tmp97 + tmp108;
double tmp110 = -4*tmp59*tmp39;
double tmp111 = 4*tmp90*tmp41;
double tmp112 = 2*tmp58*tmp42;
double tmp113 = tmp110 + tmp111 + tmp112;
double tmp114 = -(tmp57*tmp113*tmp89);
double tmp115 = -4*tmp59*tmp28;
double tmp116 = 4*tmp58*tmp31;
double tmp117 = 2*tmp90*tmp33;
double tmp118 = tmp115 + tmp116 + tmp117;
double tmp119 = -(tmp57*tmp118*tmp94);
double tmp120 = 4*tmp58*tmp18;
double tmp121 = 4*tmp90*tmp21;
double tmp122 = -2*tmp59*tmp23;
double tmp123 = tmp120 + tmp121 + tmp122;
double tmp124 = -(tmp57*tmp123*tmp109);
double tmp125 = tmp114 + tmp119 + tmp124;
double tmp126 = 4*tmp90*tmp39;
double tmp127 = 4*tmp59*tmp41;
double tmp128 = 2*tmp60*tmp42;
double tmp129 = tmp126 + tmp127 + tmp128;
double tmp130 = -(tmp57*tmp129*tmp89);
double tmp131 = 4*tmp90*tmp28;
double tmp132 = 4*tmp60*tmp31;
double tmp133 = 2*tmp59*tmp33;
double tmp134 = tmp131 + tmp132 + tmp133;
double tmp135 = -(tmp57*tmp134*tmp94);
double tmp136 = 4*tmp60*tmp18;
double tmp137 = 4*tmp59*tmp21;
double tmp138 = 2*tmp90*tmp23;
double tmp139 = tmp136 + tmp137 + tmp138;
double tmp140 = -(tmp57*tmp139*tmp109);
double tmp141 = tmp130 + tmp135 + tmp140;
double tmp142 = 4*tmp60*tmp39;
double tmp143 = 4*tmp58*tmp41;
double tmp144 = -2*tmp90*tmp42;
double tmp145 = tmp142 + tmp143 + tmp144;
double tmp146 = -(tmp57*tmp145*tmp89);
double tmp147 = 4*tmp60*tmp28;
double tmp148 = -4*tmp90*tmp31;
double tmp149 = 2*tmp58*tmp33;
double tmp150 = tmp147 + tmp148 + tmp149;
double tmp151 = -(tmp57*tmp150*tmp94);
double tmp152 = -4*tmp90*tmp18;
double tmp153 = 4*tmp58*tmp21;
double tmp154 = 2*tmp60*tmp23;
double tmp155 = tmp152 + tmp153 + tmp154;
double tmp156 = -(tmp57*tmp155*tmp109);
double tmp157 = tmp146 + tmp151 + tmp156;
double tmp158 = 4*tmp58*tmp39;
double tmp159 = -4*tmp60*tmp41;
double tmp160 = 2*tmp59*tmp42;
double tmp161 = tmp158 + tmp159 + tmp160;
double tmp162 = -(tmp57*tmp161*tmp89);
double tmp163 = 4*tmp58*tmp28;
double tmp164 = 4*tmp59*tmp31;
double tmp165 = -2*tmp60*tmp33;
double tmp166 = tmp163 + tmp164 + tmp165;
double tmp167 = -(tmp57*tmp166*tmp94);
double tmp168 = 4*tmp59*tmp18;
double tmp169 = -4*tmp60*tmp21;
double tmp170 = 2*tmp58*tmp23;
double tmp171 = tmp168 + tmp169 + tmp170;
double tmp172 = -(tmp57*tmp171*tmp109);
double tmp173 = tmp162 + tmp167 + tmp172;
double tmp174 = ibd(2+_OFF);
double tmp175 = ibod(1+_OFF);
double tmp176 = ibd(3+_OFF);
double tmp177 = ibod(2+_OFF);
double tmp178 = ibod(3+_OFF);
double tmp179 = ibd(1+_OFF);
double tmp180 = x(38+_OFF);
double tmp181 = x(37+_OFF);
double tmp182 = x(39+_OFF);
double tmp183 = cp(3+_OFF);
double tmp184 = tmp179*tmp174*tmp176;
double tmp185 = std::pow(tmp175,2);
double tmp186 = -(tmp174*tmp185);
double tmp187 = std::pow(tmp177,2);
double tmp188 = -(tmp176*tmp187);
double tmp189 = 2*tmp175*tmp177*tmp178;
double tmp190 = std::pow(tmp178,2);
double tmp191 = -(tmp179*tmp190);
double tmp192 = tmp184 + tmp186 + tmp188 + tmp189 + tmp191;
double tmp193 = 1/tmp192;
double tmp194 = std::pow(tmp182,2);
double tmp195 = cBar(1+_OFF);
double tmp196 = std::pow(tmp181,2);
double tmp197 = std::pow(tmp180,2);
double tmp198 = -(tmp175*tmp181*tmp180);
double tmp199 = -(tmp178*tmp197);
double tmp200 = tmp177*tmp181*tmp182;
double tmp201 = tmp174*tmp180*tmp182;
double tmp202 = -(tmp176*tmp180*tmp182);
double tmp203 = tmp178*tmp194;
double tmp204 = mRoll(2+_OFF);
double tmp205 = -(tmp54*tmp204);
double tmp206 = mRoll(3+_OFF);
double tmp207 = (tmp183*tmp206*tmp52*tmp181)/2.;
double tmp208 = mRoll(4+_OFF);
double tmp209 = -(tmp183*tmp208*tmp52*tmp182)/2.;
double tmp210 = mRoll(1+_OFF);
double tmp211 = z(2+_OFF);
double tmp212 = tmp210*tmp211;
double tmp213 = tmp205 + tmp207 + tmp209 + tmp212;
double tmp214 = 0.634*tmp55*tmp183*tmp51*tmp213;
double tmp215 = tmp198 + tmp199 + tmp200 + tmp201 + tmp202 + tmp203 + tmp214;
double tmp216 = tmp175*tmp196;
double tmp217 = tmp178*tmp181*tmp180;
double tmp218 = -(tmp179*tmp181*tmp182);
double tmp219 = tmp176*tmp181*tmp182;
double tmp220 = -(tmp177*tmp180*tmp182);
double tmp221 = -(tmp175*tmp194);
double tmp222 = mPitch(1+_OFF);
double tmp223 = -tmp222;
double tmp224 = mPitch(3+_OFF);
double tmp225 = tmp37*tmp224;
double tmp226 = mPitch(4+_OFF);
double tmp227 = (tmp195*tmp226*tmp52*tmp180)/2.;
double tmp228 = mPitch(2+_OFF);
double tmp229 = z(3+_OFF);
double tmp230 = -(tmp228*tmp229);
double tmp231 = tmp223 + tmp225 + tmp227 + tmp230;
double tmp232 = 0.634*tmp195*tmp55*tmp51*tmp231;
double tmp233 = tmp216 + tmp217 + tmp218 + tmp219 + tmp220 + tmp221 + tmp232;
double tmp234 = tmp175*tmp177;
double tmp235 = -(tmp179*tmp178);
double tmp236 = tmp234 + tmp235;
double tmp237 = -(tmp177*tmp196);
double tmp238 = tmp179*tmp181*tmp180;
double tmp239 = -(tmp174*tmp181*tmp180);
double tmp240 = tmp177*tmp197;
double tmp241 = -(tmp178*tmp181*tmp182);
double tmp242 = tmp175*tmp180*tmp182;
double tmp243 = mYaw(2+_OFF);
double tmp244 = tmp54*tmp243;
double tmp245 = mYaw(3+_OFF);
double tmp246 = (tmp183*tmp245*tmp52*tmp182)/2.;
double tmp247 = mYaw(1+_OFF);
double tmp248 = z(4+_OFF);
double tmp249 = -(tmp247*tmp248);
double tmp250 = tmp244 + tmp246 + tmp249;
double tmp251 = 0.634*tmp55*tmp183*tmp51*tmp250;
double tmp252 = tmp237 + tmp238 + tmp239 + tmp240 + tmp241 + tmp242 + tmp251;
double tmp253 = -(tmp176*tmp177);
double tmp254 = tmp175*tmp178;
double tmp255 = tmp253 + tmp254;
double tmp256 = -(tmp174*tmp175);
double tmp257 = tmp177*tmp178;
double tmp258 = tmp256 + tmp257;
double tmp259 = tmp258*tmp193*tmp215;
double tmp260 = tmp236*tmp193*tmp233;
double tmp261 = tmp179*tmp174;
double tmp262 = -tmp187;
double tmp263 = tmp261 + tmp262;
double tmp264 = tmp263*tmp193*tmp252;
double tmp265 = tmp259 + tmp260 + tmp264;
double tmp266 = tmp255*tmp193*tmp215;
double tmp267 = tmp179*tmp176;
double tmp268 = -tmp185;
double tmp269 = tmp267 + tmp268;
double tmp270 = tmp269*tmp193*tmp233;
double tmp271 = tmp236*tmp193*tmp252;
double tmp272 = tmp266 + tmp270 + tmp271;
double tmp273 = tmp174*tmp176;
double tmp274 = -tmp190;
double tmp275 = tmp273 + tmp274;
double tmp276 = tmp275*tmp193*tmp215;
double tmp277 = tmp255*tmp193*tmp233;
double tmp278 = tmp258*tmp193*tmp252;
double tmp279 = tmp276 + tmp277 + tmp278;
double tmp280 = -4*tmp60*tmp28;
double tmp281 = 4*tmp90*tmp31;
double tmp282 = -2*tmp58*tmp33;
double tmp283 = tmp280 + tmp281 + tmp282;
double tmp284 = -4*tmp60*tmp39;
double tmp285 = -4*tmp58*tmp41;
double tmp286 = 2*tmp90*tmp42;
double tmp287 = tmp284 + tmp285 + tmp286;
double tmp288 = 4*tmp90*tmp18;
double tmp289 = -4*tmp58*tmp21;
double tmp290 = -2*tmp60*tmp23;
double tmp291 = tmp288 + tmp289 + tmp290;
double tmp292 = -(tmp118*tmp265);
double tmp293 = -(tmp113*tmp272);
double tmp294 = -(tmp123*tmp279);
double tmp295 = tmp292 + tmp293 + tmp294;
double tmp296 = -(tmp134*tmp265);
double tmp297 = -(tmp129*tmp272);
double tmp298 = -(tmp139*tmp279);
double tmp299 = tmp296 + tmp297 + tmp298;
double tmp300 = -4*tmp58*tmp28;
double tmp301 = -4*tmp59*tmp31;
double tmp302 = 2*tmp60*tmp33;
double tmp303 = tmp300 + tmp301 + tmp302;
double tmp304 = -4*tmp58*tmp39;
double tmp305 = 4*tmp60*tmp41;
double tmp306 = -2*tmp59*tmp42;
double tmp307 = tmp304 + tmp305 + tmp306;
double tmp308 = -4*tmp59*tmp18;
double tmp309 = 4*tmp60*tmp21;
double tmp310 = -2*tmp58*tmp23;
double tmp311 = tmp308 + tmp309 + tmp310;
double tmp312 = -(tmp150*tmp265);
double tmp313 = -(tmp145*tmp272);
double tmp314 = -(tmp155*tmp279);
double tmp315 = tmp312 + tmp313 + tmp314;
double tmp316 = 4*tmp59*tmp28;
double tmp317 = -4*tmp58*tmp31;
double tmp318 = -2*tmp90*tmp33;
double tmp319 = tmp316 + tmp317 + tmp318;
double tmp320 = 4*tmp59*tmp39;
double tmp321 = -4*tmp90*tmp41;
double tmp322 = -2*tmp58*tmp42;
double tmp323 = tmp320 + tmp321 + tmp322;
double tmp324 = -4*tmp58*tmp18;
double tmp325 = -4*tmp90*tmp21;
double tmp326 = 2*tmp59*tmp23;
double tmp327 = tmp324 + tmp325 + tmp326;
double tmp328 = -(tmp166*tmp265);
double tmp329 = -(tmp161*tmp272);
double tmp330 = -(tmp171*tmp279);
double tmp331 = tmp328 + tmp329 + tmp330;
J(1+_OFF,1+_OFF) = tmp173;
J(1+_OFF,2+_OFF) = tmp141;
J(1+_OFF,3+_OFF) = -(tmp57*tmp287*tmp89) - tmp57*tmp283*tmp94 - tmp57*tmp291*tmp109;
J(1+_OFF,4+_OFF) = tmp125;
J(2+_OFF,1+_OFF) = tmp125;
J(2+_OFF,2+_OFF) = tmp157;
J(2+_OFF,3+_OFF) = tmp141;
J(2+_OFF,4+_OFF) = -(tmp57*tmp307*tmp89) - tmp57*tmp303*tmp94 - tmp57*tmp311*tmp109;
J(3+_OFF,1+_OFF) = tmp157;
J(3+_OFF,2+_OFF) = -(tmp57*tmp323*tmp89) - tmp57*tmp319*tmp94 - tmp57*tmp327*tmp109;
J(3+_OFF,3+_OFF) = tmp173;
J(3+_OFF,4+_OFF) = tmp141;
J(4+_OFF,1+_OFF) = tmp331;
J(4+_OFF,2+_OFF) = tmp299;
J(4+_OFF,3+_OFF) = -(tmp283*tmp265) - tmp287*tmp272 - tmp291*tmp279;
J(4+_OFF,4+_OFF) = tmp295;
J(5+_OFF,1+_OFF) = tmp295;
J(5+_OFF,2+_OFF) = tmp315;
J(5+_OFF,3+_OFF) = tmp299;
J(5+_OFF,4+_OFF) = -(tmp303*tmp265) - tmp307*tmp272 - tmp311*tmp279;
J(6+_OFF,1+_OFF) = tmp315;
J(6+_OFF,2+_OFF) = -(tmp319*tmp265) - tmp323*tmp272 - tmp327*tmp279;
J(6+_OFF,3+_OFF) = tmp331;
J(6+_OFF,4+_OFF) = tmp299;
