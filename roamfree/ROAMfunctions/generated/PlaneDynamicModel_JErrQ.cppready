double tmp0 = x(30+_OFF);
double tmp1 = x(31+_OFF);
double tmp2 = x(32+_OFF);
double tmp3 = x(33+_OFF);
double tmp4 = tmp0*tmp1;
double tmp5 = tmp2*tmp3;
double tmp6 = tmp4 + tmp5;
double tmp7 = tmp1*tmp2;
double tmp8 = std::pow(tmp0,2);
double tmp9 = std::pow(tmp1,2);
double tmp10 = std::pow(tmp2,2);
double tmp11 = std::pow(tmp3,2);
double tmp12 = -tmp11;
double tmp13 = wind(1+_OFF);
double tmp14 = tmp1*tmp3;
double tmp15 = wind(2+_OFF);
double tmp16 = wind(3+_OFF);
double tmp17 = -tmp9;
double tmp18 = -tmp10;
double tmp19 = tmp0*tmp3;
double tmp20 = tmp7 + tmp19;
double tmp21 = -2*tmp15*tmp20;
double tmp22 = -(tmp0*tmp2);
double tmp23 = tmp22 + tmp14;
double tmp24 = -2*tmp16*tmp23;
double tmp25 = tmp8 + tmp9 + tmp18 + tmp12;
double tmp26 = -(tmp13*tmp25);
double tmp27 = x(34+_OFF);
double tmp28 = tmp21 + tmp24 + tmp26 + tmp27;
double tmp29 = tmp0*tmp2;
double tmp30 = tmp29 + tmp14;
double tmp31 = -2*tmp13*tmp30;
double tmp32 = -(tmp0*tmp1);
double tmp33 = tmp32 + tmp5;
double tmp34 = -2*tmp15*tmp33;
double tmp35 = tmp8 + tmp17 + tmp18 + tmp11;
double tmp36 = -(tmp16*tmp35);
double tmp37 = x(36+_OFF);
double tmp38 = tmp31 + tmp34 + tmp36 + tmp37;
double tmp39 = std::atan2(tmp38,tmp28);
double tmp40 = -(tmp0*tmp3);
double tmp41 = tmp7 + tmp40;
double tmp42 = tmp8 + tmp17 + tmp10 + tmp12;
double tmp43 = -2*tmp13*tmp41;
double tmp44 = -2*tmp16*tmp6;
double tmp45 = -(tmp15*tmp42);
double tmp46 = x(35+_OFF);
double tmp47 = tmp43 + tmp44 + tmp45 + tmp46;
double tmp48 = std::pow(tmp28,2);
double tmp49 = std::pow(tmp47,2);
double tmp50 = std::pow(tmp38,2);
double tmp51 = tmp48 + tmp49 + tmp50;
double tmp52 = 1/std::sqrt(tmp51);
double tmp53 = tmp47*tmp52;
double tmp54 = std::asin(tmp53);
double tmp55 = cp(2+_OFF);
double tmp56 = x(4+_OFF);
double tmp57 = x(7+_OFF);
double tmp58 = x(6+_OFF);
double tmp59 = gravity(1+_OFF);
double tmp60 = cp(4+_OFF);
double tmp61 = 1/tmp60;
double tmp62 = fLat(1+_OFF);
double tmp63 = std::sqrt(tmp51);
double tmp64 = tmp48 + tmp50;
double tmp65 = 1/std::sqrt(tmp64);
double tmp66 = fDrag(1+_OFF);
double tmp67 = fDrag(2+_OFF);
double tmp68 = -(tmp39*tmp67);
double tmp69 = std::pow(tmp39,2);
double tmp70 = fDrag(3+_OFF);
double tmp71 = tmp69*tmp70;
double tmp72 = std::pow(tmp54,2);
double tmp73 = fDrag(4+_OFF);
double tmp74 = tmp72*tmp73;
double tmp75 = tmp66 + tmp68 + tmp71 + tmp74;
double tmp76 = 1/tmp51;
double tmp77 = -(tmp49*tmp76);
double tmp78 = 1 + tmp77;
double tmp79 = std::sqrt(tmp78);
double tmp80 = fLift(1+_OFF);
double tmp81 = -tmp80;
double tmp82 = fLift(2+_OFF);
double tmp83 = tmp39*tmp82;
double tmp84 = tmp81 + tmp83;
double tmp85 = cp(1+_OFF);
double tmp86 = std::pow(tmp85,2);
double tmp87 = z(1+_OFF);
double tmp88 = -2*tmp59*tmp6;
double tmp89 = 0.634*tmp55*tmp75*tmp47*tmp63;
double tmp90 = 0.634*tmp54*tmp55*tmp62*tmp51*tmp79;
double tmp91 = 0. + tmp89 + tmp90;
double tmp92 = tmp61*tmp91;
double tmp93 = tmp88 + tmp92;
double tmp94 = x(5+_OFF);
double tmp95 = -(tmp59*tmp35);
double tmp96 = -0.634*tmp54*tmp55*tmp62*tmp47*tmp38*tmp65*tmp63;
double tmp97 = 0.634*tmp55*tmp84*tmp28*tmp65*tmp51;
double tmp98 = 0.634*tmp55*tmp75*tmp38*tmp65*tmp51*tmp79;
double tmp99 = tmp96 + tmp97 + tmp98;
double tmp100 = tmp61*tmp99;
double tmp101 = tmp95 + tmp100;
double tmp102 = -2*tmp59*tmp23;
double tmp103 = -0.634*tmp54*tmp55*tmp62*tmp28*tmp47*tmp65*tmp63;
double tmp104 = -0.634*tmp55*tmp84*tmp38*tmp65*tmp51;
double tmp105 = 0.634*tmp55*tmp75*tmp28*tmp65*tmp51*tmp79;
double tmp106 = std::pow(M_PI,-2);
double tmp107 = fThrust(3+_OFF);
double tmp108 = tmp106*tmp107*tmp51;
double tmp109 = 1/M_PI;
double tmp110 = fThrust(2+_OFF);
double tmp111 = tmp109*tmp85*tmp110*tmp63*tmp87;
double tmp112 = fThrust(1+_OFF);
double tmp113 = std::pow(tmp87,2);
double tmp114 = tmp86*tmp112*tmp113;
double tmp115 = tmp108 + tmp111 + tmp114;
double tmp116 = 1.268*tmp86*tmp115;
double tmp117 = tmp103 + tmp104 + tmp105 + tmp116;
double tmp118 = tmp61*tmp117;
double tmp119 = tmp102 + tmp118;
double tmp120 = -4*tmp57*tmp41;
double tmp121 = 4*tmp94*tmp6;
double tmp122 = 2*tmp56*tmp42;
double tmp123 = tmp120 + tmp121 + tmp122;
double tmp124 = -(tmp123*tmp93);
double tmp125 = -4*tmp57*tmp30;
double tmp126 = 4*tmp56*tmp33;
double tmp127 = 2*tmp94*tmp35;
double tmp128 = tmp125 + tmp126 + tmp127;
double tmp129 = -(tmp128*tmp101);
double tmp130 = 4*tmp56*tmp20;
double tmp131 = 4*tmp94*tmp23;
double tmp132 = -2*tmp57*tmp25;
double tmp133 = tmp130 + tmp131 + tmp132;
double tmp134 = -(tmp133*tmp119);
double tmp135 = tmp124 + tmp129 + tmp134;
double tmp136 = 4*tmp94*tmp41;
double tmp137 = 4*tmp57*tmp6;
double tmp138 = 2*tmp58*tmp42;
double tmp139 = tmp136 + tmp137 + tmp138;
double tmp140 = -(tmp139*tmp93);
double tmp141 = 4*tmp94*tmp30;
double tmp142 = 4*tmp58*tmp33;
double tmp143 = 2*tmp57*tmp35;
double tmp144 = tmp141 + tmp142 + tmp143;
double tmp145 = -(tmp144*tmp101);
double tmp146 = 4*tmp58*tmp20;
double tmp147 = 4*tmp57*tmp23;
double tmp148 = 2*tmp94*tmp25;
double tmp149 = tmp146 + tmp147 + tmp148;
double tmp150 = -(tmp149*tmp119);
double tmp151 = tmp140 + tmp145 + tmp150;
double tmp152 = 4*tmp58*tmp41;
double tmp153 = 4*tmp56*tmp6;
double tmp154 = -2*tmp94*tmp42;
double tmp155 = tmp152 + tmp153 + tmp154;
double tmp156 = -(tmp155*tmp93);
double tmp157 = 4*tmp58*tmp30;
double tmp158 = -4*tmp94*tmp33;
double tmp159 = 2*tmp56*tmp35;
double tmp160 = tmp157 + tmp158 + tmp159;
double tmp161 = -(tmp160*tmp101);
double tmp162 = -4*tmp94*tmp20;
double tmp163 = 4*tmp56*tmp23;
double tmp164 = 2*tmp58*tmp25;
double tmp165 = tmp162 + tmp163 + tmp164;
double tmp166 = -(tmp165*tmp119);
double tmp167 = tmp156 + tmp161 + tmp166;
double tmp168 = 4*tmp56*tmp41;
double tmp169 = -4*tmp58*tmp6;
double tmp170 = 2*tmp57*tmp42;
double tmp171 = tmp168 + tmp169 + tmp170;
double tmp172 = -(tmp171*tmp93);
double tmp173 = 4*tmp56*tmp30;
double tmp174 = 4*tmp57*tmp33;
double tmp175 = -2*tmp58*tmp35;
double tmp176 = tmp173 + tmp174 + tmp175;
double tmp177 = -(tmp176*tmp101);
double tmp178 = 4*tmp57*tmp20;
double tmp179 = -4*tmp58*tmp23;
double tmp180 = 2*tmp56*tmp25;
double tmp181 = tmp178 + tmp179 + tmp180;
double tmp182 = -(tmp181*tmp119);
double tmp183 = tmp172 + tmp177 + tmp182;
double tmp184 = ibd(2+_OFF);
double tmp185 = ibod(1+_OFF);
double tmp186 = ibd(3+_OFF);
double tmp187 = ibod(2+_OFF);
double tmp188 = ibod(3+_OFF);
double tmp189 = ibd(1+_OFF);
double tmp190 = x(38+_OFF);
double tmp191 = x(37+_OFF);
double tmp192 = x(39+_OFF);
double tmp193 = cp(3+_OFF);
double tmp194 = tmp189*tmp184*tmp186;
double tmp195 = std::pow(tmp185,2);
double tmp196 = -(tmp184*tmp195);
double tmp197 = std::pow(tmp187,2);
double tmp198 = -(tmp186*tmp197);
double tmp199 = 2*tmp185*tmp187*tmp188;
double tmp200 = std::pow(tmp188,2);
double tmp201 = -(tmp189*tmp200);
double tmp202 = tmp194 + tmp196 + tmp198 + tmp199 + tmp201;
double tmp203 = 1/tmp202;
double tmp204 = std::pow(tmp192,2);
double tmp205 = cBar(1+_OFF);
double tmp206 = std::pow(tmp191,2);
double tmp207 = std::pow(tmp190,2);
double tmp208 = -(tmp185*tmp191*tmp190);
double tmp209 = -(tmp188*tmp207);
double tmp210 = tmp187*tmp191*tmp192;
double tmp211 = tmp184*tmp190*tmp192;
double tmp212 = -(tmp186*tmp190*tmp192);
double tmp213 = tmp188*tmp204;
double tmp214 = mRoll(2+_OFF);
double tmp215 = -(tmp54*tmp214);
double tmp216 = mRoll(3+_OFF);
double tmp217 = (tmp193*tmp216*tmp52*tmp191)/2.;
double tmp218 = mRoll(4+_OFF);
double tmp219 = -0.5*(tmp193*tmp218*tmp52*tmp192);
double tmp220 = mRoll(1+_OFF);
double tmp221 = z(2+_OFF);
double tmp222 = tmp220*tmp221;
double tmp223 = tmp215 + tmp217 + tmp219 + tmp222;
double tmp224 = 0.634*tmp55*tmp193*tmp51*tmp223;
double tmp225 = tmp208 + tmp209 + tmp210 + tmp211 + tmp212 + tmp213 + tmp224;
double tmp226 = tmp185*tmp206;
double tmp227 = tmp188*tmp191*tmp190;
double tmp228 = -(tmp189*tmp191*tmp192);
double tmp229 = tmp186*tmp191*tmp192;
double tmp230 = -(tmp187*tmp190*tmp192);
double tmp231 = -(tmp185*tmp204);
double tmp232 = mPitch(1+_OFF);
double tmp233 = -tmp232;
double tmp234 = mPitch(3+_OFF);
double tmp235 = tmp39*tmp234;
double tmp236 = mPitch(4+_OFF);
double tmp237 = (tmp205*tmp236*tmp52*tmp190)/2.;
double tmp238 = mPitch(2+_OFF);
double tmp239 = z(3+_OFF);
double tmp240 = -(tmp238*tmp239);
double tmp241 = tmp233 + tmp235 + tmp237 + tmp240;
double tmp242 = 0.634*tmp205*tmp55*tmp51*tmp241;
double tmp243 = tmp226 + tmp227 + tmp228 + tmp229 + tmp230 + tmp231 + tmp242;
double tmp244 = tmp185*tmp187;
double tmp245 = -(tmp189*tmp188);
double tmp246 = tmp244 + tmp245;
double tmp247 = -(tmp187*tmp206);
double tmp248 = tmp189*tmp191*tmp190;
double tmp249 = -(tmp184*tmp191*tmp190);
double tmp250 = tmp187*tmp207;
double tmp251 = -(tmp188*tmp191*tmp192);
double tmp252 = tmp185*tmp190*tmp192;
double tmp253 = mYaw(2+_OFF);
double tmp254 = tmp54*tmp253;
double tmp255 = mYaw(3+_OFF);
double tmp256 = (tmp193*tmp255*tmp52*tmp192)/2.;
double tmp257 = mYaw(1+_OFF);
double tmp258 = z(4+_OFF);
double tmp259 = -(tmp257*tmp258);
double tmp260 = tmp254 + tmp256 + tmp259;
double tmp261 = 0.634*tmp55*tmp193*tmp51*tmp260;
double tmp262 = tmp247 + tmp248 + tmp249 + tmp250 + tmp251 + tmp252 + tmp261;
double tmp263 = -(tmp186*tmp187);
double tmp264 = tmp185*tmp188;
double tmp265 = tmp263 + tmp264;
double tmp266 = -(tmp184*tmp185);
double tmp267 = tmp187*tmp188;
double tmp268 = tmp266 + tmp267;
double tmp269 = tmp268*tmp203*tmp225;
double tmp270 = tmp246*tmp203*tmp243;
double tmp271 = tmp189*tmp184;
double tmp272 = -tmp197;
double tmp273 = tmp271 + tmp272;
double tmp274 = tmp273*tmp203*tmp262;
double tmp275 = tmp269 + tmp270 + tmp274;
double tmp276 = tmp265*tmp203*tmp225;
double tmp277 = tmp189*tmp186;
double tmp278 = -tmp195;
double tmp279 = tmp277 + tmp278;
double tmp280 = tmp279*tmp203*tmp243;
double tmp281 = tmp246*tmp203*tmp262;
double tmp282 = tmp276 + tmp280 + tmp281;
double tmp283 = tmp184*tmp186;
double tmp284 = -tmp200;
double tmp285 = tmp283 + tmp284;
double tmp286 = tmp285*tmp203*tmp225;
double tmp287 = tmp265*tmp203*tmp243;
double tmp288 = tmp268*tmp203*tmp262;
double tmp289 = tmp286 + tmp287 + tmp288;
double tmp290 = -4*tmp58*tmp30;
double tmp291 = 4*tmp94*tmp33;
double tmp292 = -2*tmp56*tmp35;
double tmp293 = tmp290 + tmp291 + tmp292;
double tmp294 = -4*tmp58*tmp41;
double tmp295 = -4*tmp56*tmp6;
double tmp296 = 2*tmp94*tmp42;
double tmp297 = tmp294 + tmp295 + tmp296;
double tmp298 = 4*tmp94*tmp20;
double tmp299 = -4*tmp56*tmp23;
double tmp300 = -2*tmp58*tmp25;
double tmp301 = tmp298 + tmp299 + tmp300;
double tmp302 = -(tmp128*tmp275);
double tmp303 = -(tmp123*tmp282);
double tmp304 = -(tmp133*tmp289);
double tmp305 = tmp302 + tmp303 + tmp304;
double tmp306 = -(tmp144*tmp275);
double tmp307 = -(tmp139*tmp282);
double tmp308 = -(tmp149*tmp289);
double tmp309 = tmp306 + tmp307 + tmp308;
double tmp310 = -4*tmp56*tmp30;
double tmp311 = -4*tmp57*tmp33;
double tmp312 = 2*tmp58*tmp35;
double tmp313 = tmp310 + tmp311 + tmp312;
double tmp314 = -4*tmp56*tmp41;
double tmp315 = 4*tmp58*tmp6;
double tmp316 = -2*tmp57*tmp42;
double tmp317 = tmp314 + tmp315 + tmp316;
double tmp318 = -4*tmp57*tmp20;
double tmp319 = 4*tmp58*tmp23;
double tmp320 = -2*tmp56*tmp25;
double tmp321 = tmp318 + tmp319 + tmp320;
double tmp322 = -(tmp160*tmp275);
double tmp323 = -(tmp155*tmp282);
double tmp324 = -(tmp165*tmp289);
double tmp325 = tmp322 + tmp323 + tmp324;
double tmp326 = 4*tmp57*tmp30;
double tmp327 = -4*tmp56*tmp33;
double tmp328 = -2*tmp94*tmp35;
double tmp329 = tmp326 + tmp327 + tmp328;
double tmp330 = 4*tmp57*tmp41;
double tmp331 = -4*tmp94*tmp6;
double tmp332 = -2*tmp56*tmp42;
double tmp333 = tmp330 + tmp331 + tmp332;
double tmp334 = -4*tmp56*tmp20;
double tmp335 = -4*tmp94*tmp23;
double tmp336 = 2*tmp57*tmp25;
double tmp337 = tmp334 + tmp335 + tmp336;
double tmp338 = -(tmp176*tmp275);
double tmp339 = -(tmp171*tmp282);
double tmp340 = -(tmp181*tmp289);
double tmp341 = tmp338 + tmp339 + tmp340;
J(1+_OFF,1+_OFF) = tmp183;
J(1+_OFF,2+_OFF) = tmp151;
J(1+_OFF,3+_OFF) = -(tmp297*tmp93) - tmp293*tmp101 - tmp301*tmp119;
J(1+_OFF,4+_OFF) = tmp135;
J(2+_OFF,1+_OFF) = tmp135;
J(2+_OFF,2+_OFF) = tmp167;
J(2+_OFF,3+_OFF) = tmp151;
J(2+_OFF,4+_OFF) = -(tmp317*tmp93) - tmp313*tmp101 - tmp321*tmp119;
J(3+_OFF,1+_OFF) = tmp167;
J(3+_OFF,2+_OFF) = -(tmp333*tmp93) - tmp329*tmp101 - tmp337*tmp119;
J(3+_OFF,3+_OFF) = tmp183;
J(3+_OFF,4+_OFF) = tmp151;
J(4+_OFF,1+_OFF) = tmp341;
J(4+_OFF,2+_OFF) = tmp309;
J(4+_OFF,3+_OFF) = -(tmp293*tmp275) - tmp297*tmp282 - tmp301*tmp289;
J(4+_OFF,4+_OFF) = tmp305;
J(5+_OFF,1+_OFF) = tmp305;
J(5+_OFF,2+_OFF) = tmp325;
J(5+_OFF,3+_OFF) = tmp309;
J(5+_OFF,4+_OFF) = -(tmp313*tmp275) - tmp317*tmp282 - tmp321*tmp289;
J(6+_OFF,1+_OFF) = tmp325;
J(6+_OFF,2+_OFF) = -(tmp329*tmp275) - tmp333*tmp282 - tmp337*tmp289;
J(6+_OFF,3+_OFF) = tmp341;
J(6+_OFF,4+_OFF) = tmp309;
