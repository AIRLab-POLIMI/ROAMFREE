double tmp0 = x(6+_OFF);
double tmp1 = x(4+_OFF);
double tmp2 = x(5+_OFF);
double tmp3 = x(7+_OFF);
double tmp4 = wind(1+_OFF);
double tmp5 = tmp2*tmp3;
double tmp6 = wind(2+_OFF);
double tmp7 = wind(3+_OFF);
double tmp8 = std::pow(tmp1,2);
double tmp9 = std::pow(tmp2,2);
double tmp10 = std::pow(tmp0,2);
double tmp11 = -tmp10;
double tmp12 = std::pow(tmp3,2);
double tmp13 = tmp2*tmp0;
double tmp14 = tmp1*tmp3;
double tmp15 = tmp13 + tmp14;
double tmp16 = -2*tmp6*tmp15;
double tmp17 = -(tmp1*tmp0);
double tmp18 = tmp17 + tmp5;
double tmp19 = -2*tmp7*tmp18;
double tmp20 = -tmp12;
double tmp21 = tmp8 + tmp9 + tmp11 + tmp20;
double tmp22 = -(tmp4*tmp21);
double tmp23 = x(8+_OFF);
double tmp24 = tmp16 + tmp19 + tmp22 + tmp23;
double tmp25 = tmp1*tmp0;
double tmp26 = tmp25 + tmp5;
double tmp27 = 2*tmp4*tmp26;
double tmp28 = -(tmp1*tmp2);
double tmp29 = tmp0*tmp3;
double tmp30 = tmp28 + tmp29;
double tmp31 = 2*tmp6*tmp30;
double tmp32 = -tmp9;
double tmp33 = tmp8 + tmp32 + tmp11 + tmp12;
double tmp34 = tmp7*tmp33;
double tmp35 = x(10+_OFF);
double tmp36 = -tmp35;
double tmp37 = tmp27 + tmp31 + tmp34 + tmp36;
double tmp38 = -(tmp1*tmp3);
double tmp39 = tmp13 + tmp38;
double tmp40 = -2*tmp4*tmp39;
double tmp41 = tmp1*tmp2;
double tmp42 = tmp41 + tmp29;
double tmp43 = -2*tmp7*tmp42;
double tmp44 = tmp8 + tmp32 + tmp10 + tmp20;
double tmp45 = -(tmp6*tmp44);
double tmp46 = x(9+_OFF);
double tmp47 = tmp40 + tmp43 + tmp45 + tmp46;
double tmp48 = std::pow(tmp24,2);
double tmp49 = -2*tmp4*tmp26;
double tmp50 = -2*tmp6*tmp30;
double tmp51 = -(tmp7*tmp33);
double tmp52 = tmp49 + tmp50 + tmp51 + tmp35;
double tmp53 = cp(2+_OFF);
double tmp54 = std::pow(tmp37,2);
double tmp55 = tmp48 + tmp54;
double tmp56 = 1/std::sqrt(tmp55);
double tmp57 = -2*tmp4*tmp1;
double tmp58 = 2*tmp7*tmp0;
double tmp59 = -2*tmp6*tmp3;
double tmp60 = tmp57 + tmp58 + tmp59;
double tmp61 = 2*tmp60*tmp24;
double tmp62 = -2*tmp6*tmp1;
double tmp63 = -2*tmp7*tmp2;
double tmp64 = 2*tmp4*tmp3;
double tmp65 = tmp62 + tmp63 + tmp64;
double tmp66 = 2*tmp65*tmp47;
double tmp67 = -2*tmp7*tmp1;
double tmp68 = 2*tmp6*tmp2;
double tmp69 = -2*tmp4*tmp0;
double tmp70 = tmp67 + tmp68 + tmp69;
double tmp71 = 2*tmp70*tmp52;
double tmp72 = tmp61 + tmp66 + tmp71;
double tmp73 = std::pow(tmp47,2);
double tmp74 = std::pow(tmp52,2);
double tmp75 = tmp48 + tmp73 + tmp74;
double tmp76 = 1/std::sqrt(tmp75);
double tmp77 = tmp47*tmp76;
double tmp78 = std::asin(tmp77);
double tmp79 = fLat(1+_OFF);
double tmp80 = -(tmp4*tmp8);
double tmp81 = -(tmp4*tmp9);
double tmp82 = 2*tmp7*tmp1*tmp0;
double tmp83 = -2*tmp6*tmp2*tmp0;
double tmp84 = tmp4*tmp10;
double tmp85 = -2*tmp6*tmp1*tmp3;
double tmp86 = -2*tmp7*tmp2*tmp3;
double tmp87 = tmp4*tmp12;
double tmp88 = tmp80 + tmp81 + tmp82 + tmp83 + tmp84 + tmp85 + tmp86 + tmp87 + tmp23;
double tmp89 = tmp6*tmp8;
double tmp90 = 2*tmp7*tmp1*tmp2;
double tmp91 = -(tmp6*tmp9);
double tmp92 = 2*tmp4*tmp2*tmp0;
double tmp93 = tmp6*tmp10;
double tmp94 = -2*tmp4*tmp1*tmp3;
double tmp95 = 2*tmp7*tmp0*tmp3;
double tmp96 = -(tmp6*tmp12);
double tmp97 = -tmp46;
double tmp98 = tmp89 + tmp90 + tmp91 + tmp92 + tmp93 + tmp94 + tmp95 + tmp96 + tmp97;
double tmp99 = std::sqrt(tmp75);
double tmp100 = fLift(1+_OFF);
double tmp101 = std::atan2(tmp37,tmp24);
double tmp102 = fLift(2+_OFF);
double tmp103 = tmp101*tmp102;
double tmp104 = tmp100 + tmp103;
double tmp105 = 2*tmp7*tmp1;
double tmp106 = -2*tmp6*tmp2;
double tmp107 = 2*tmp4*tmp0;
double tmp108 = tmp105 + tmp106 + tmp107;
double tmp109 = 2*tmp108*tmp37;
double tmp110 = tmp61 + tmp109;
double tmp111 = std::pow(tmp55,-1.5);
double tmp112 = tmp7*tmp8;
double tmp113 = -2*tmp6*tmp1*tmp2;
double tmp114 = -(tmp7*tmp9);
double tmp115 = 2*tmp4*tmp1*tmp0;
double tmp116 = -(tmp7*tmp10);
double tmp117 = 2*tmp4*tmp2*tmp3;
double tmp118 = 2*tmp6*tmp0*tmp3;
double tmp119 = tmp7*tmp12;
double tmp120 = tmp112 + tmp113 + tmp114 + tmp115 + tmp116 + tmp117 + tmp118 + tmp119 + tmp36;
double tmp121 = 1/tmp55;
double tmp122 = 1/tmp75;
double tmp123 = fDrag(1+_OFF);
double tmp124 = fDrag(2+_OFF);
double tmp125 = tmp101*tmp124;
double tmp126 = std::pow(tmp101,2);
double tmp127 = fDrag(3+_OFF);
double tmp128 = tmp126*tmp127;
double tmp129 = std::pow(tmp78,2);
double tmp130 = fDrag(4+_OFF);
double tmp131 = tmp129*tmp130;
double tmp132 = tmp123 + tmp125 + tmp128 + tmp131;
double tmp133 = -(tmp73*tmp122);
double tmp134 = 1 + tmp133;
double tmp135 = std::sqrt(tmp134);
double tmp136 = 1/std::sqrt(tmp134);
double tmp137 = tmp108*tmp24*tmp121;
double tmp138 = tmp60*tmp121*tmp52;
double tmp139 = tmp137 + tmp138;
double tmp140 = std::pow(tmp75,-1.5);
double tmp141 = -(tmp47*tmp72*tmp140)/2.;
double tmp142 = tmp65*tmp76;
double tmp143 = tmp141 + tmp142;
double tmp144 = cp(1+_OFF);
double tmp145 = gravity(1+_OFF);
double tmp146 = cp(4+_OFF);
double tmp147 = 1/tmp146;
double tmp148 = 2*tmp6*tmp1;
double tmp149 = 2*tmp7*tmp2;
double tmp150 = -2*tmp4*tmp3;
double tmp151 = tmp148 + tmp149 + tmp150;
double tmp152 = -2*tmp4*tmp2;
double tmp153 = -2*tmp6*tmp0;
double tmp154 = -2*tmp7*tmp3;
double tmp155 = tmp152 + tmp153 + tmp154;
double tmp156 = 2*tmp155*tmp24;
double tmp157 = 2*tmp70*tmp47;
double tmp158 = 2*tmp151*tmp52;
double tmp159 = tmp156 + tmp157 + tmp158;
double tmp160 = 2*tmp65*tmp37;
double tmp161 = tmp156 + tmp160;
double tmp162 = std::pow(tmp75,-2);
double tmp163 = tmp65*tmp24*tmp121;
double tmp164 = tmp155*tmp121*tmp52;
double tmp165 = tmp163 + tmp164;
double tmp166 = -(tmp47*tmp159*tmp140)/2.;
double tmp167 = tmp70*tmp76;
double tmp168 = tmp166 + tmp167;
double tmp169 = std::pow(tmp144,2);
double tmp170 = std::pow(M_PI,-2);
double tmp171 = fThrust(3+_OFF);
double tmp172 = 1/M_PI;
double tmp173 = fThrust(2+_OFF);
double tmp174 = z(1+_OFF);
double tmp175 = 2*tmp108*tmp24;
double tmp176 = 2*tmp155*tmp47;
double tmp177 = 2*tmp60*tmp52;
double tmp178 = tmp175 + tmp176 + tmp177;
double tmp179 = 2*tmp4*tmp1;
double tmp180 = -2*tmp7*tmp0;
double tmp181 = 2*tmp6*tmp3;
double tmp182 = tmp179 + tmp180 + tmp181;
double tmp183 = 2*tmp182*tmp37;
double tmp184 = tmp175 + tmp183;
double tmp185 = tmp182*tmp24*tmp121;
double tmp186 = tmp108*tmp121*tmp52;
double tmp187 = tmp185 + tmp186;
double tmp188 = -(tmp47*tmp178*tmp140)/2.;
double tmp189 = tmp155*tmp76;
double tmp190 = tmp188 + tmp189;
double tmp191 = 2*tmp65*tmp24;
double tmp192 = 2*tmp182*tmp47;
double tmp193 = 2*tmp155*tmp52;
double tmp194 = tmp191 + tmp192 + tmp193;
double tmp195 = 2*tmp4*tmp2;
double tmp196 = 2*tmp6*tmp0;
double tmp197 = 2*tmp7*tmp3;
double tmp198 = tmp195 + tmp196 + tmp197;
double tmp199 = 2*tmp198*tmp37;
double tmp200 = tmp191 + tmp199;
double tmp201 = tmp198*tmp24*tmp121;
double tmp202 = tmp65*tmp121*tmp52;
double tmp203 = tmp201 + tmp202;
double tmp204 = -(tmp47*tmp194*tmp140)/2.;
double tmp205 = tmp182*tmp76;
double tmp206 = tmp204 + tmp205;
double tmp207 = 2*tmp145*tmp2;
double tmp208 = tmp73*tmp72*tmp162;
double tmp209 = -2*tmp65*tmp47*tmp122;
double tmp210 = tmp208 + tmp209;
double tmp211 = -(tmp6*tmp8);
double tmp212 = -2*tmp7*tmp1*tmp2;
double tmp213 = tmp6*tmp9;
double tmp214 = -2*tmp4*tmp2*tmp0;
double tmp215 = -(tmp6*tmp10);
double tmp216 = 2*tmp4*tmp1*tmp3;
double tmp217 = -2*tmp7*tmp0*tmp3;
double tmp218 = tmp6*tmp12;
double tmp219 = tmp211 + tmp212 + tmp213 + tmp214 + tmp215 + tmp216 + tmp217 + tmp218 + tmp46;
double tmp220 = tmp124*tmp139;
double tmp221 = 2*tmp101*tmp127*tmp139;
double tmp222 = 2*tmp78*tmp130*tmp136*tmp143;
double tmp223 = tmp220 + tmp221 + tmp222;
double tmp224 = tmp73*tmp159*tmp162;
double tmp225 = -2*tmp70*tmp47*tmp122;
double tmp226 = tmp224 + tmp225;
double tmp227 = tmp124*tmp165;
double tmp228 = 2*tmp101*tmp127*tmp165;
double tmp229 = 2*tmp78*tmp130*tmp136*tmp168;
double tmp230 = tmp227 + tmp228 + tmp229;
double tmp231 = 2*tmp145*tmp3;
double tmp232 = tmp73*tmp178*tmp162;
double tmp233 = -2*tmp155*tmp47*tmp122;
double tmp234 = tmp232 + tmp233;
double tmp235 = tmp124*tmp187;
double tmp236 = 2*tmp101*tmp127*tmp187;
double tmp237 = 2*tmp78*tmp130*tmp136*tmp190;
double tmp238 = tmp235 + tmp236 + tmp237;
double tmp239 = tmp73*tmp194*tmp162;
double tmp240 = -2*tmp182*tmp47*tmp122;
double tmp241 = tmp239 + tmp240;
double tmp242 = tmp124*tmp203;
double tmp243 = 2*tmp101*tmp127*tmp203;
double tmp244 = 2*tmp78*tmp130*tmp136*tmp206;
double tmp245 = tmp242 + tmp243 + tmp244;
double tmp246 = 2*tmp145*tmp1;
double tmp247 = -(tmp7*tmp8);
double tmp248 = 2*tmp6*tmp1*tmp2;
double tmp249 = tmp7*tmp9;
double tmp250 = -2*tmp4*tmp1*tmp0;
double tmp251 = tmp7*tmp10;
double tmp252 = -2*tmp4*tmp2*tmp3;
double tmp253 = -2*tmp6*tmp0*tmp3;
double tmp254 = -(tmp7*tmp12);
double tmp255 = tmp247 + tmp248 + tmp249 + tmp250 + tmp251 + tmp252 + tmp253 + tmp254 + tmp35;
double tmp256 = -2*tmp145*tmp0;
double tmp257 = 0.5*tmp78*tmp53*tmp79*tmp60*tmp98*tmp56*tmp99;
double tmp258 = -0.5*tmp53*tmp104*tmp108*tmp56*tmp75;
double tmp259 = 0.5*tmp53*tmp132*tmp60*tmp56*tmp75*tmp135;
double tmp260 = 0.5*tmp78*tmp53*tmp79*tmp155*tmp98*tmp56*tmp99;
double tmp261 = -0.5*tmp53*tmp104*tmp65*tmp56*tmp75;
double tmp262 = 0.5*tmp53*tmp132*tmp155*tmp56*tmp75*tmp135;
double tmp263 = ibd(2+_OFF);
double tmp264 = ibd(3+_OFF);
double tmp265 = ibod(1+_OFF);
double tmp266 = ibod(2+_OFF);
double tmp267 = ibod(3+_OFF);
double tmp268 = ibd(1+_OFF);
double tmp269 = std::pow(tmp267,2);
double tmp270 = cp(3+_OFF);
double tmp271 = mRoll(2+_OFF);
double tmp272 = mRoll(3+_OFF);
double tmp273 = x(11+_OFF);
double tmp274 = mRoll(4+_OFF);
double tmp275 = x(13+_OFF);
double tmp276 = tmp268*tmp263*tmp264;
double tmp277 = std::pow(tmp265,2);
double tmp278 = -(tmp263*tmp277);
double tmp279 = std::pow(tmp266,2);
double tmp280 = -(tmp264*tmp279);
double tmp281 = 2*tmp265*tmp266*tmp267;
double tmp282 = -(tmp268*tmp269);
double tmp283 = tmp276 + tmp278 + tmp280 + tmp281 + tmp282;
double tmp284 = 1/tmp283;
double tmp285 = cBar(1+_OFF);
double tmp286 = mPitch(3+_OFF);
double tmp287 = mPitch(4+_OFF);
double tmp288 = x(12+_OFF);
double tmp289 = mYaw(2+_OFF);
double tmp290 = mYaw(3+_OFF);
double tmp291 = tmp263*tmp264;
double tmp292 = -tmp269;
double tmp293 = tmp291 + tmp292;
double tmp294 = -(tmp78*tmp271);
double tmp295 = (tmp270*tmp272*tmp76*tmp273)/2.;
double tmp296 = -(tmp270*tmp274*tmp76*tmp275)/2.;
double tmp297 = mRoll(1+_OFF);
double tmp298 = z(2+_OFF);
double tmp299 = -(tmp297*tmp298);
double tmp300 = tmp294 + tmp295 + tmp296 + tmp299;
double tmp301 = -(tmp264*tmp266);
double tmp302 = tmp265*tmp267;
double tmp303 = tmp301 + tmp302;
double tmp304 = mPitch(1+_OFF);
double tmp305 = -tmp304;
double tmp306 = -(tmp101*tmp286);
double tmp307 = (tmp285*tmp287*tmp76*tmp288)/2.;
double tmp308 = mPitch(2+_OFF);
double tmp309 = z(3+_OFF);
double tmp310 = -(tmp308*tmp309);
double tmp311 = tmp305 + tmp306 + tmp307 + tmp310;
double tmp312 = -(tmp263*tmp265);
double tmp313 = tmp266*tmp267;
double tmp314 = tmp312 + tmp313;
double tmp315 = tmp78*tmp289;
double tmp316 = (tmp270*tmp290*tmp76*tmp275)/2.;
double tmp317 = mYaw(1+_OFF);
double tmp318 = z(4+_OFF);
double tmp319 = tmp317*tmp318;
double tmp320 = tmp315 + tmp316 + tmp319;
double tmp321 = -(tmp271*tmp136*tmp143);
double tmp322 = -(tmp270*tmp272*tmp72*tmp140*tmp273)/4.;
double tmp323 = (tmp270*tmp274*tmp72*tmp140*tmp275)/4.;
double tmp324 = tmp321 + tmp322 + tmp323;
double tmp325 = 0.5*tmp53*tmp270*tmp75*tmp324;
double tmp326 = 0.5*tmp53*tmp270*tmp72*tmp300;
double tmp327 = tmp325 + tmp326;
double tmp328 = -(tmp286*tmp139);
double tmp329 = -(tmp285*tmp287*tmp72*tmp140*tmp288)/4.;
double tmp330 = tmp328 + tmp329;
double tmp331 = 0.5*tmp285*tmp53*tmp75*tmp330;
double tmp332 = 0.5*tmp285*tmp53*tmp72*tmp311;
double tmp333 = tmp331 + tmp332;
double tmp334 = tmp289*tmp136*tmp143;
double tmp335 = -(tmp270*tmp290*tmp72*tmp140*tmp275)/4.;
double tmp336 = tmp334 + tmp335;
double tmp337 = 0.5*tmp53*tmp270*tmp75*tmp336;
double tmp338 = 0.5*tmp53*tmp270*tmp72*tmp320;
double tmp339 = tmp337 + tmp338;
double tmp340 = -(tmp271*tmp136*tmp168);
double tmp341 = -(tmp270*tmp272*tmp159*tmp140*tmp273)/4.;
double tmp342 = (tmp270*tmp274*tmp159*tmp140*tmp275)/4.;
double tmp343 = tmp340 + tmp341 + tmp342;
double tmp344 = 0.5*tmp53*tmp270*tmp75*tmp343;
double tmp345 = 0.5*tmp53*tmp270*tmp159*tmp300;
double tmp346 = tmp344 + tmp345;
double tmp347 = tmp268*tmp264;
double tmp348 = -tmp277;
double tmp349 = tmp347 + tmp348;
double tmp350 = -(tmp286*tmp165);
double tmp351 = -(tmp285*tmp287*tmp159*tmp140*tmp288)/4.;
double tmp352 = tmp350 + tmp351;
double tmp353 = 0.5*tmp285*tmp53*tmp75*tmp352;
double tmp354 = 0.5*tmp285*tmp53*tmp159*tmp311;
double tmp355 = tmp353 + tmp354;
double tmp356 = tmp265*tmp266;
double tmp357 = -(tmp268*tmp267);
double tmp358 = tmp356 + tmp357;
double tmp359 = tmp289*tmp136*tmp168;
double tmp360 = -(tmp270*tmp290*tmp159*tmp140*tmp275)/4.;
double tmp361 = tmp359 + tmp360;
double tmp362 = 0.5*tmp53*tmp270*tmp75*tmp361;
double tmp363 = 0.5*tmp53*tmp270*tmp159*tmp320;
double tmp364 = tmp362 + tmp363;
double tmp365 = -(tmp271*tmp136*tmp190);
double tmp366 = -(tmp270*tmp272*tmp178*tmp140*tmp273)/4.;
double tmp367 = (tmp270*tmp274*tmp178*tmp140*tmp275)/4.;
double tmp368 = tmp365 + tmp366 + tmp367;
double tmp369 = 0.5*tmp53*tmp270*tmp75*tmp368;
double tmp370 = 0.5*tmp53*tmp270*tmp178*tmp300;
double tmp371 = tmp369 + tmp370;
double tmp372 = -(tmp286*tmp187);
double tmp373 = -(tmp285*tmp287*tmp178*tmp140*tmp288)/4.;
double tmp374 = tmp372 + tmp373;
double tmp375 = 0.5*tmp285*tmp53*tmp75*tmp374;
double tmp376 = 0.5*tmp285*tmp53*tmp178*tmp311;
double tmp377 = tmp375 + tmp376;
double tmp378 = tmp289*tmp136*tmp190;
double tmp379 = -(tmp270*tmp290*tmp178*tmp140*tmp275)/4.;
double tmp380 = tmp378 + tmp379;
double tmp381 = 0.5*tmp53*tmp270*tmp75*tmp380;
double tmp382 = 0.5*tmp53*tmp270*tmp178*tmp320;
double tmp383 = tmp381 + tmp382;
double tmp384 = -(tmp271*tmp136*tmp206);
double tmp385 = -(tmp270*tmp272*tmp194*tmp140*tmp273)/4.;
double tmp386 = (tmp270*tmp274*tmp194*tmp140*tmp275)/4.;
double tmp387 = tmp384 + tmp385 + tmp386;
double tmp388 = 0.5*tmp53*tmp270*tmp75*tmp387;
double tmp389 = 0.5*tmp53*tmp270*tmp194*tmp300;
double tmp390 = tmp388 + tmp389;
double tmp391 = -(tmp286*tmp203);
double tmp392 = -(tmp285*tmp287*tmp194*tmp140*tmp288)/4.;
double tmp393 = tmp391 + tmp392;
double tmp394 = 0.5*tmp285*tmp53*tmp75*tmp393;
double tmp395 = 0.5*tmp285*tmp53*tmp194*tmp311;
double tmp396 = tmp394 + tmp395;
double tmp397 = tmp289*tmp136*tmp206;
double tmp398 = -(tmp270*tmp290*tmp194*tmp140*tmp275)/4.;
double tmp399 = tmp397 + tmp398;
double tmp400 = 0.5*tmp53*tmp270*tmp75*tmp399;
double tmp401 = 0.5*tmp53*tmp270*tmp194*tmp320;
double tmp402 = tmp400 + tmp401;
double tmp403 = tmp268*tmp263;
double tmp404 = -tmp279;
double tmp405 = tmp403 + tmp404;
J(1+_OFF,1+_OFF) = tmp256 - tmp147*(-0.5*tmp53*tmp104*tmp56*tmp120*tmp72 + 0.25*tmp78*tmp53*tmp79*tmp88*tmp98*tmp56*tmp72*tmp76 - 0.25*tmp78*tmp53*tmp79*tmp88*tmp98*tmp110*tmp111*tmp99 + 0.5*tmp78*tmp53*tmp79*tmp151*tmp88*tmp56*tmp99 + tmp257 + tmp258 + 0.25*tmp53*tmp104*tmp110*tmp111*tmp120*tmp75 - 0.5*tmp53*tmp102*tmp56*tmp120*tmp139*tmp75 + 0.25*tmp53*tmp132*tmp88*tmp56*tmp75*tmp210*tmp136 + 0.5*tmp53*tmp132*tmp88*tmp56*tmp72*tmp135 - 0.25*tmp53*tmp132*tmp88*tmp110*tmp111*tmp75*tmp135 + tmp259 + 0.5*tmp53*tmp79*tmp88*tmp98*tmp56*tmp99*tmp136*tmp143 + 0.5*tmp53*tmp88*tmp56*tmp75*tmp135*tmp223 + 1.*tmp169*(tmp170*tmp171*tmp72 + (tmp172*tmp144*tmp173*tmp72*tmp76*tmp174)/2.));
J(1+_OFF,2+_OFF) = tmp231 - tmp147*(-0.5*tmp53*tmp104*tmp56*tmp120*tmp159 + 0.25*tmp78*tmp53*tmp79*tmp88*tmp98*tmp56*tmp159*tmp76 - 0.25*tmp78*tmp53*tmp79*tmp88*tmp98*tmp161*tmp111*tmp99 + 0.5*tmp78*tmp53*tmp79*tmp108*tmp88*tmp56*tmp99 + tmp260 + tmp261 + 0.25*tmp53*tmp104*tmp161*tmp111*tmp120*tmp75 - 0.5*tmp53*tmp102*tmp56*tmp120*tmp165*tmp75 + 0.25*tmp53*tmp132*tmp88*tmp56*tmp75*tmp226*tmp136 + 0.5*tmp53*tmp132*tmp88*tmp56*tmp159*tmp135 - 0.25*tmp53*tmp132*tmp88*tmp161*tmp111*tmp75*tmp135 + tmp262 + 0.5*tmp53*tmp79*tmp88*tmp98*tmp56*tmp99*tmp136*tmp168 + 0.5*tmp53*tmp88*tmp56*tmp75*tmp135*tmp230 + 1.*tmp169*(tmp170*tmp171*tmp159 + (tmp172*tmp144*tmp173*tmp159*tmp76*tmp174)/2.));
J(1+_OFF,3+_OFF) = -2*tmp145*tmp1 - tmp147*(-0.5*tmp53*tmp104*tmp56*tmp120*tmp178 + 0.25*tmp78*tmp53*tmp79*tmp88*tmp98*tmp56*tmp178*tmp76 - 0.25*tmp78*tmp53*tmp79*tmp88*tmp98*tmp184*tmp111*tmp99 + 0.5*tmp78*tmp53*tmp79*tmp198*tmp88*tmp56*tmp99 + 0.5*tmp78*tmp53*tmp79*tmp108*tmp98*tmp56*tmp99 - 0.5*tmp53*tmp104*tmp182*tmp56*tmp75 + 0.25*tmp53*tmp104*tmp184*tmp111*tmp120*tmp75 - 0.5*tmp53*tmp102*tmp56*tmp120*tmp187*tmp75 + 0.25*tmp53*tmp132*tmp88*tmp56*tmp75*tmp234*tmp136 + 0.5*tmp53*tmp132*tmp88*tmp56*tmp178*tmp135 - 0.25*tmp53*tmp132*tmp88*tmp184*tmp111*tmp75*tmp135 + 0.5*tmp53*tmp132*tmp108*tmp56*tmp75*tmp135 + 0.5*tmp53*tmp79*tmp88*tmp98*tmp56*tmp99*tmp136*tmp190 + 0.5*tmp53*tmp88*tmp56*tmp75*tmp135*tmp238 + 1.*tmp169*(tmp170*tmp171*tmp178 + (tmp172*tmp144*tmp173*tmp178*tmp76*tmp174)/2.));
J(1+_OFF,4+_OFF) = tmp207 - tmp147*(-0.5*tmp53*tmp104*tmp56*tmp120*tmp194 + 0.25*tmp78*tmp53*tmp79*tmp88*tmp98*tmp56*tmp194*tmp76 - 0.25*tmp78*tmp53*tmp79*tmp88*tmp98*tmp200*tmp111*tmp99 + 0.5*tmp78*tmp53*tmp79*tmp60*tmp88*tmp56*tmp99 + 0.5*tmp78*tmp53*tmp79*tmp65*tmp98*tmp56*tmp99 - 0.5*tmp53*tmp104*tmp198*tmp56*tmp75 + 0.25*tmp53*tmp104*tmp200*tmp111*tmp120*tmp75 - 0.5*tmp53*tmp102*tmp56*tmp120*tmp203*tmp75 + 0.25*tmp53*tmp132*tmp88*tmp56*tmp75*tmp241*tmp136 + 0.5*tmp53*tmp132*tmp88*tmp56*tmp194*tmp135 - 0.25*tmp53*tmp132*tmp88*tmp200*tmp111*tmp75*tmp135 + 0.5*tmp53*tmp132*tmp65*tmp56*tmp75*tmp135 + 0.5*tmp53*tmp79*tmp88*tmp98*tmp56*tmp99*tmp136*tmp206 + 0.5*tmp53*tmp88*tmp56*tmp75*tmp135*tmp245 + 1.*tmp169*(tmp170*tmp171*tmp194 + (tmp172*tmp144*tmp173*tmp194*tmp76*tmp174)/2.));
J(2+_OFF,1+_OFF) = tmp207 - tmp147*(0.25*tmp53*tmp132*tmp219*tmp72*tmp76 + 0.5*tmp53*tmp132*tmp65*tmp99 + 0.25*tmp78*tmp53*tmp79*tmp75*tmp210*tmp136 + 0.5*tmp78*tmp53*tmp79*tmp72*tmp135 + 0.5*tmp53*tmp79*tmp75*tmp143 + 0.5*tmp53*tmp219*tmp99*tmp223);
J(2+_OFF,2+_OFF) = tmp246 - tmp147*(0.25*tmp53*tmp132*tmp219*tmp159*tmp76 + 0.5*tmp53*tmp132*tmp70*tmp99 + 0.25*tmp78*tmp53*tmp79*tmp75*tmp226*tmp136 + 0.5*tmp78*tmp53*tmp79*tmp159*tmp135 + 0.5*tmp53*tmp79*tmp75*tmp168 + 0.5*tmp53*tmp219*tmp99*tmp230);
J(2+_OFF,3+_OFF) = tmp231 - tmp147*(0.25*tmp53*tmp132*tmp219*tmp178*tmp76 + 0.5*tmp53*tmp132*tmp155*tmp99 + 0.25*tmp78*tmp53*tmp79*tmp75*tmp234*tmp136 + 0.5*tmp78*tmp53*tmp79*tmp178*tmp135 + 0.5*tmp53*tmp79*tmp75*tmp190 + 0.5*tmp53*tmp219*tmp99*tmp238);
J(2+_OFF,4+_OFF) = 2*tmp145*tmp0 - tmp147*(0.25*tmp53*tmp132*tmp219*tmp194*tmp76 + 0.5*tmp53*tmp132*tmp182*tmp99 + 0.25*tmp78*tmp53*tmp79*tmp75*tmp241*tmp136 + 0.5*tmp78*tmp53*tmp79*tmp194*tmp135 + 0.5*tmp53*tmp79*tmp75*tmp206 + 0.5*tmp53*tmp219*tmp99*tmp245);
J(3+_OFF,1+_OFF) = tmp246 - tmp147*(-0.5*tmp53*tmp104*tmp88*tmp56*tmp72 + 0.25*tmp78*tmp53*tmp79*tmp98*tmp56*tmp255*tmp72*tmp76 + 0.5*tmp78*tmp53*tmp79*tmp70*tmp98*tmp56*tmp99 - 0.25*tmp78*tmp53*tmp79*tmp98*tmp110*tmp111*tmp255*tmp99 + 0.5*tmp78*tmp53*tmp79*tmp151*tmp56*tmp255*tmp99 + 0.25*tmp53*tmp104*tmp88*tmp110*tmp111*tmp75 - 0.5*tmp53*tmp104*tmp60*tmp56*tmp75 - 0.5*tmp53*tmp102*tmp88*tmp56*tmp139*tmp75 + 0.25*tmp53*tmp132*tmp56*tmp255*tmp75*tmp210*tmp136 + 0.5*tmp53*tmp132*tmp56*tmp255*tmp72*tmp135 + 0.5*tmp53*tmp132*tmp70*tmp56*tmp75*tmp135 - 0.25*tmp53*tmp132*tmp110*tmp111*tmp255*tmp75*tmp135 + 0.5*tmp53*tmp79*tmp98*tmp56*tmp255*tmp99*tmp136*tmp143 + 0.5*tmp53*tmp56*tmp255*tmp75*tmp135*tmp223);
J(3+_OFF,2+_OFF) = -2*tmp145*tmp2 - tmp147*(-0.5*tmp53*tmp104*tmp88*tmp56*tmp159 + 0.25*tmp78*tmp53*tmp79*tmp98*tmp56*tmp255*tmp159*tmp76 + 0.5*tmp78*tmp53*tmp79*tmp151*tmp98*tmp56*tmp99 - 0.25*tmp78*tmp53*tmp79*tmp98*tmp161*tmp111*tmp255*tmp99 + 0.5*tmp78*tmp53*tmp79*tmp108*tmp56*tmp255*tmp99 + 0.25*tmp53*tmp104*tmp88*tmp161*tmp111*tmp75 - 0.5*tmp53*tmp104*tmp155*tmp56*tmp75 - 0.5*tmp53*tmp102*tmp88*tmp56*tmp165*tmp75 + 0.25*tmp53*tmp132*tmp56*tmp255*tmp75*tmp226*tmp136 + 0.5*tmp53*tmp132*tmp56*tmp255*tmp159*tmp135 + 0.5*tmp53*tmp132*tmp151*tmp56*tmp75*tmp135 - 0.25*tmp53*tmp132*tmp161*tmp111*tmp255*tmp75*tmp135 + 0.5*tmp53*tmp79*tmp98*tmp56*tmp255*tmp99*tmp136*tmp168 + 0.5*tmp53*tmp56*tmp255*tmp75*tmp135*tmp230);
J(3+_OFF,3+_OFF) = tmp256 - tmp147*(-0.5*tmp53*tmp104*tmp88*tmp56*tmp178 + 0.25*tmp78*tmp53*tmp79*tmp98*tmp56*tmp255*tmp178*tmp76 + tmp257 - 0.25*tmp78*tmp53*tmp79*tmp98*tmp184*tmp111*tmp255*tmp99 + 0.5*tmp78*tmp53*tmp79*tmp198*tmp56*tmp255*tmp99 + 0.25*tmp53*tmp104*tmp88*tmp184*tmp111*tmp75 + tmp258 - 0.5*tmp53*tmp102*tmp88*tmp56*tmp187*tmp75 + 0.25*tmp53*tmp132*tmp56*tmp255*tmp75*tmp234*tmp136 + 0.5*tmp53*tmp132*tmp56*tmp255*tmp178*tmp135 + tmp259 - 0.25*tmp53*tmp132*tmp184*tmp111*tmp255*tmp75*tmp135 + 0.5*tmp53*tmp79*tmp98*tmp56*tmp255*tmp99*tmp136*tmp190 + 0.5*tmp53*tmp56*tmp255*tmp75*tmp135*tmp238);
J(3+_OFF,4+_OFF) = tmp231 - tmp147*(-0.5*tmp53*tmp104*tmp88*tmp56*tmp194 + 0.25*tmp78*tmp53*tmp79*tmp98*tmp56*tmp255*tmp194*tmp76 + tmp260 - 0.25*tmp78*tmp53*tmp79*tmp98*tmp200*tmp111*tmp255*tmp99 + 0.5*tmp78*tmp53*tmp79*tmp60*tmp56*tmp255*tmp99 + 0.25*tmp53*tmp104*tmp88*tmp200*tmp111*tmp75 + tmp261 - 0.5*tmp53*tmp102*tmp88*tmp56*tmp203*tmp75 + 0.25*tmp53*tmp132*tmp56*tmp255*tmp75*tmp241*tmp136 + 0.5*tmp53*tmp132*tmp56*tmp255*tmp194*tmp135 + tmp262 - 0.25*tmp53*tmp132*tmp200*tmp111*tmp255*tmp75*tmp135 + 0.5*tmp53*tmp79*tmp98*tmp56*tmp255*tmp99*tmp136*tmp206 + 0.5*tmp53*tmp56*tmp255*tmp75*tmp135*tmp245);
J(4+_OFF,1+_OFF) = -(tmp293*tmp284*tmp327) - tmp303*tmp284*tmp333 - tmp314*tmp284*tmp339;
J(4+_OFF,2+_OFF) = -(tmp293*tmp284*tmp346) - tmp303*tmp284*tmp355 - tmp314*tmp284*tmp364;
J(4+_OFF,3+_OFF) = -(tmp293*tmp284*tmp371) - tmp303*tmp284*tmp377 - tmp314*tmp284*tmp383;
J(4+_OFF,4+_OFF) = -(tmp293*tmp284*tmp390) - tmp303*tmp284*tmp396 - tmp314*tmp284*tmp402;
J(5+_OFF,1+_OFF) = -(tmp303*tmp284*tmp327) - tmp349*tmp284*tmp333 - tmp358*tmp284*tmp339;
J(5+_OFF,2+_OFF) = -(tmp303*tmp284*tmp346) - tmp349*tmp284*tmp355 - tmp358*tmp284*tmp364;
J(5+_OFF,3+_OFF) = -(tmp303*tmp284*tmp371) - tmp349*tmp284*tmp377 - tmp358*tmp284*tmp383;
J(5+_OFF,4+_OFF) = -(tmp303*tmp284*tmp390) - tmp349*tmp284*tmp396 - tmp358*tmp284*tmp402;
J(6+_OFF,1+_OFF) = -(tmp314*tmp284*tmp327) - tmp358*tmp284*tmp333 - tmp405*tmp284*tmp339;
J(6+_OFF,2+_OFF) = -(tmp314*tmp284*tmp346) - tmp358*tmp284*tmp355 - tmp405*tmp284*tmp364;
J(6+_OFF,3+_OFF) = -(tmp314*tmp284*tmp371) - tmp358*tmp284*tmp377 - tmp405*tmp284*tmp383;
J(6+_OFF,4+_OFF) = -(tmp314*tmp284*tmp390) - tmp358*tmp284*tmp396 - tmp405*tmp284*tmp402;
