double tmp0 = x(6+_OFF);
double tmp1 = x(4+_OFF);
double tmp2 = x(5+_OFF);
double tmp3 = x(7+_OFF);
double tmp4 = wind(1+_OFF);
double tmp5 = tmp2*tmp3;
double tmp6 = wind(2+_OFF);
double tmp7 = wind(3+_OFF);
double tmp8 = std::pow(tmp1,2);
double tmp9 = std::pow(tmp2,2);
double tmp10 = std::pow(tmp0,2);
double tmp11 = -tmp10;
double tmp12 = std::pow(tmp3,2);
double tmp13 = airDensity(2+_OFF);
double tmp14 = 1/tmp13;
double tmp15 = tmp2*tmp0;
double tmp16 = tmp1*tmp3;
double tmp17 = tmp15 + tmp16;
double tmp18 = -2*tmp6*tmp17;
double tmp19 = -(tmp1*tmp0);
double tmp20 = tmp19 + tmp5;
double tmp21 = -2*tmp7*tmp20;
double tmp22 = -tmp12;
double tmp23 = tmp8 + tmp9 + tmp11 + tmp22;
double tmp24 = -(tmp4*tmp23);
double tmp25 = x(8+_OFF);
double tmp26 = tmp18 + tmp21 + tmp24 + tmp25;
double tmp27 = tmp1*tmp0;
double tmp28 = tmp27 + tmp5;
double tmp29 = 2*tmp4*tmp28;
double tmp30 = -(tmp1*tmp2);
double tmp31 = tmp0*tmp3;
double tmp32 = tmp30 + tmp31;
double tmp33 = 2*tmp6*tmp32;
double tmp34 = -tmp9;
double tmp35 = tmp8 + tmp34 + tmp11 + tmp12;
double tmp36 = tmp7*tmp35;
double tmp37 = x(10+_OFF);
double tmp38 = -tmp37;
double tmp39 = tmp29 + tmp33 + tmp36 + tmp38;
double tmp40 = airDensity(3+_OFF);
double tmp41 = -(tmp1*tmp3);
double tmp42 = tmp15 + tmp41;
double tmp43 = tmp1*tmp2;
double tmp44 = tmp43 + tmp31;
double tmp45 = tmp8 + tmp34 + tmp10 + tmp22;
double tmp46 = x(9+_OFF);
double tmp47 = std::pow(tmp26,2);
double tmp48 = -2*tmp4*tmp42;
double tmp49 = -2*tmp7*tmp44;
double tmp50 = -(tmp6*tmp45);
double tmp51 = tmp48 + tmp49 + tmp50 + tmp46;
double tmp52 = -2*tmp4*tmp28;
double tmp53 = -2*tmp6*tmp32;
double tmp54 = -(tmp7*tmp35);
double tmp55 = tmp52 + tmp53 + tmp54 + tmp37;
double tmp56 = cp(2+_OFF);
double tmp57 = airDensity(1+_OFF);
double tmp58 = x(3+_OFF);
double tmp59 = tmp57 + tmp58;
double tmp60 = -0.006500000000000001*tmp14*tmp59;
double tmp61 = 1 + tmp60;
double tmp62 = std::pow(tmp61,4.2561);
double tmp63 = -tmp46;
double tmp64 = std::pow(tmp39,2);
double tmp65 = tmp47 + tmp64;
double tmp66 = 1/std::sqrt(tmp65);
double tmp67 = -2*tmp4*tmp1;
double tmp68 = 2*tmp7*tmp0;
double tmp69 = -2*tmp6*tmp3;
double tmp70 = tmp67 + tmp68 + tmp69;
double tmp71 = 2*tmp70*tmp26;
double tmp72 = -2*tmp6*tmp1;
double tmp73 = -2*tmp7*tmp2;
double tmp74 = 2*tmp4*tmp3;
double tmp75 = tmp72 + tmp73 + tmp74;
double tmp76 = 2*tmp75*tmp51;
double tmp77 = -2*tmp7*tmp1;
double tmp78 = 2*tmp6*tmp2;
double tmp79 = -2*tmp4*tmp0;
double tmp80 = tmp77 + tmp78 + tmp79;
double tmp81 = 2*tmp80*tmp55;
double tmp82 = tmp71 + tmp76 + tmp81;
double tmp83 = std::pow(tmp51,2);
double tmp84 = std::pow(tmp55,2);
double tmp85 = tmp47 + tmp83 + tmp84;
double tmp86 = 1/std::sqrt(tmp85);
double tmp87 = 2*tmp4*tmp42;
double tmp88 = 2*tmp7*tmp44;
double tmp89 = tmp6*tmp45;
double tmp90 = tmp87 + tmp88 + tmp89 + tmp63;
double tmp91 = tmp90*tmp86;
double tmp92 = std::asin(tmp91);
double tmp93 = fLat(1+_OFF);
double tmp94 = -(tmp4*tmp8);
double tmp95 = -(tmp4*tmp9);
double tmp96 = 2*tmp7*tmp1*tmp0;
double tmp97 = -2*tmp6*tmp2*tmp0;
double tmp98 = tmp4*tmp10;
double tmp99 = -2*tmp6*tmp1*tmp3;
double tmp100 = -2*tmp7*tmp2*tmp3;
double tmp101 = tmp4*tmp12;
double tmp102 = tmp94 + tmp95 + tmp96 + tmp97 + tmp98 + tmp99 + tmp100 + tmp101 + tmp25;
double tmp103 = tmp6*tmp8;
double tmp104 = 2*tmp7*tmp1*tmp2;
double tmp105 = -(tmp6*tmp9);
double tmp106 = 2*tmp4*tmp2*tmp0;
double tmp107 = tmp6*tmp10;
double tmp108 = -2*tmp4*tmp1*tmp3;
double tmp109 = 2*tmp7*tmp0*tmp3;
double tmp110 = -(tmp6*tmp12);
double tmp111 = tmp103 + tmp104 + tmp105 + tmp106 + tmp107 + tmp108 + tmp109 + tmp110 + tmp63;
double tmp112 = std::sqrt(tmp85);
double tmp113 = fLift(1+_OFF);
double tmp114 = std::atan2(tmp39,tmp26);
double tmp115 = fLift(2+_OFF);
double tmp116 = tmp114*tmp115;
double tmp117 = tmp113 + tmp116;
double tmp118 = 2*tmp7*tmp1;
double tmp119 = -2*tmp6*tmp2;
double tmp120 = 2*tmp4*tmp0;
double tmp121 = tmp118 + tmp119 + tmp120;
double tmp122 = 2*tmp121*tmp39;
double tmp123 = tmp71 + tmp122;
double tmp124 = std::pow(tmp65,-1.5);
double tmp125 = tmp7*tmp8;
double tmp126 = -2*tmp6*tmp1*tmp2;
double tmp127 = -(tmp7*tmp9);
double tmp128 = 2*tmp4*tmp1*tmp0;
double tmp129 = -(tmp7*tmp10);
double tmp130 = 2*tmp4*tmp2*tmp3;
double tmp131 = 2*tmp6*tmp0*tmp3;
double tmp132 = tmp7*tmp12;
double tmp133 = tmp125 + tmp126 + tmp127 + tmp128 + tmp129 + tmp130 + tmp131 + tmp132 + tmp38;
double tmp134 = 1/tmp65;
double tmp135 = 2*tmp6*tmp1;
double tmp136 = 2*tmp7*tmp2;
double tmp137 = -2*tmp4*tmp3;
double tmp138 = tmp135 + tmp136 + tmp137;
double tmp139 = std::pow(tmp90,2);
double tmp140 = 1/tmp85;
double tmp141 = fDrag(1+_OFF);
double tmp142 = fDrag(2+_OFF);
double tmp143 = tmp114*tmp142;
double tmp144 = std::pow(tmp114,2);
double tmp145 = fDrag(3+_OFF);
double tmp146 = tmp144*tmp145;
double tmp147 = std::pow(tmp92,2);
double tmp148 = fDrag(4+_OFF);
double tmp149 = tmp147*tmp148;
double tmp150 = tmp141 + tmp143 + tmp146 + tmp149;
double tmp151 = -(tmp139*tmp140);
double tmp152 = 1 + tmp151;
double tmp153 = std::sqrt(tmp152);
double tmp154 = 1/std::sqrt(tmp152);
double tmp155 = tmp121*tmp26*tmp134;
double tmp156 = tmp70*tmp134*tmp55;
double tmp157 = tmp155 + tmp156;
double tmp158 = std::pow(tmp85,-1.5);
double tmp159 = -(tmp90*tmp82*tmp158)/2.;
double tmp160 = tmp138*tmp86;
double tmp161 = tmp159 + tmp160;
double tmp162 = cp(1+_OFF);
double tmp163 = gravity(1+_OFF);
double tmp164 = cp(4+_OFF);
double tmp165 = 1/tmp164;
double tmp166 = -2*tmp4*tmp2;
double tmp167 = -2*tmp6*tmp0;
double tmp168 = -2*tmp7*tmp3;
double tmp169 = tmp166 + tmp167 + tmp168;
double tmp170 = 2*tmp169*tmp26;
double tmp171 = 2*tmp80*tmp51;
double tmp172 = 2*tmp138*tmp55;
double tmp173 = tmp170 + tmp171 + tmp172;
double tmp174 = 2*tmp75*tmp39;
double tmp175 = tmp170 + tmp174;
double tmp176 = std::pow(tmp85,-2);
double tmp177 = tmp75*tmp26*tmp134;
double tmp178 = tmp169*tmp134*tmp55;
double tmp179 = tmp177 + tmp178;
double tmp180 = -(tmp90*tmp173*tmp158)/2.;
double tmp181 = tmp121*tmp86;
double tmp182 = tmp180 + tmp181;
double tmp183 = std::pow(tmp162,2);
double tmp184 = std::pow(M_PI,-2);
double tmp185 = fThrust(3+_OFF);
double tmp186 = 1/M_PI;
double tmp187 = fThrust(2+_OFF);
double tmp188 = z(1+_OFF);
double tmp189 = 2*tmp121*tmp26;
double tmp190 = 2*tmp169*tmp51;
double tmp191 = 2*tmp70*tmp55;
double tmp192 = tmp189 + tmp190 + tmp191;
double tmp193 = 2*tmp4*tmp1;
double tmp194 = -2*tmp7*tmp0;
double tmp195 = 2*tmp6*tmp3;
double tmp196 = tmp193 + tmp194 + tmp195;
double tmp197 = 2*tmp196*tmp39;
double tmp198 = tmp189 + tmp197;
double tmp199 = 2*tmp4*tmp2;
double tmp200 = 2*tmp6*tmp0;
double tmp201 = 2*tmp7*tmp3;
double tmp202 = tmp199 + tmp200 + tmp201;
double tmp203 = tmp196*tmp26*tmp134;
double tmp204 = tmp121*tmp134*tmp55;
double tmp205 = tmp203 + tmp204;
double tmp206 = -(tmp90*tmp192*tmp158)/2.;
double tmp207 = tmp202*tmp86;
double tmp208 = tmp206 + tmp207;
double tmp209 = 2*tmp75*tmp26;
double tmp210 = 2*tmp196*tmp51;
double tmp211 = 2*tmp169*tmp55;
double tmp212 = tmp209 + tmp210 + tmp211;
double tmp213 = 2*tmp202*tmp39;
double tmp214 = tmp209 + tmp213;
double tmp215 = tmp202*tmp26*tmp134;
double tmp216 = tmp75*tmp134*tmp55;
double tmp217 = tmp215 + tmp216;
double tmp218 = -(tmp90*tmp212*tmp158)/2.;
double tmp219 = tmp70*tmp86;
double tmp220 = tmp218 + tmp219;
double tmp221 = 2*tmp163*tmp2;
double tmp222 = tmp139*tmp82*tmp176;
double tmp223 = -2*tmp138*tmp90*tmp140;
double tmp224 = tmp222 + tmp223;
double tmp225 = -(tmp6*tmp8);
double tmp226 = -2*tmp7*tmp1*tmp2;
double tmp227 = tmp6*tmp9;
double tmp228 = -2*tmp4*tmp2*tmp0;
double tmp229 = -(tmp6*tmp10);
double tmp230 = 2*tmp4*tmp1*tmp3;
double tmp231 = -2*tmp7*tmp0*tmp3;
double tmp232 = tmp6*tmp12;
double tmp233 = tmp225 + tmp226 + tmp227 + tmp228 + tmp229 + tmp230 + tmp231 + tmp232 + tmp46;
double tmp234 = tmp142*tmp157;
double tmp235 = 2*tmp114*tmp145*tmp157;
double tmp236 = 2*tmp92*tmp148*tmp154*tmp161;
double tmp237 = tmp234 + tmp235 + tmp236;
double tmp238 = tmp139*tmp173*tmp176;
double tmp239 = -2*tmp121*tmp90*tmp140;
double tmp240 = tmp238 + tmp239;
double tmp241 = tmp142*tmp179;
double tmp242 = 2*tmp114*tmp145*tmp179;
double tmp243 = 2*tmp92*tmp148*tmp154*tmp182;
double tmp244 = tmp241 + tmp242 + tmp243;
double tmp245 = 2*tmp163*tmp3;
double tmp246 = tmp139*tmp192*tmp176;
double tmp247 = -2*tmp202*tmp90*tmp140;
double tmp248 = tmp246 + tmp247;
double tmp249 = tmp142*tmp205;
double tmp250 = 2*tmp114*tmp145*tmp205;
double tmp251 = 2*tmp92*tmp148*tmp154*tmp208;
double tmp252 = tmp249 + tmp250 + tmp251;
double tmp253 = tmp139*tmp212*tmp176;
double tmp254 = -2*tmp70*tmp90*tmp140;
double tmp255 = tmp253 + tmp254;
double tmp256 = tmp142*tmp217;
double tmp257 = 2*tmp114*tmp145*tmp217;
double tmp258 = 2*tmp92*tmp148*tmp154*tmp220;
double tmp259 = tmp256 + tmp257 + tmp258;
double tmp260 = 2*tmp163*tmp1;
double tmp261 = -(tmp7*tmp8);
double tmp262 = 2*tmp6*tmp1*tmp2;
double tmp263 = tmp7*tmp9;
double tmp264 = -2*tmp4*tmp1*tmp0;
double tmp265 = tmp7*tmp10;
double tmp266 = -2*tmp4*tmp2*tmp3;
double tmp267 = -2*tmp6*tmp0*tmp3;
double tmp268 = -(tmp7*tmp12);
double tmp269 = tmp261 + tmp262 + tmp263 + tmp264 + tmp265 + tmp266 + tmp267 + tmp268 + tmp37;
double tmp270 = -2*tmp163*tmp0;
double tmp271 = -0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp70*tmp111*tmp66*tmp112;
double tmp272 = -0.001740341106856944*tmp14*tmp40*tmp56*tmp117*tmp62*tmp121*tmp66*tmp85;
double tmp273 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp70*tmp66*tmp85*tmp153;
double tmp274 = -0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp169*tmp111*tmp66*tmp112;
double tmp275 = -0.001740341106856944*tmp14*tmp40*tmp56*tmp117*tmp62*tmp75*tmp66*tmp85;
double tmp276 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp169*tmp66*tmp85*tmp153;
double tmp277 = ibd(2+_OFF);
double tmp278 = ibd(3+_OFF);
double tmp279 = ibod(1+_OFF);
double tmp280 = ibod(2+_OFF);
double tmp281 = ibod(3+_OFF);
double tmp282 = ibd(1+_OFF);
double tmp283 = std::pow(tmp281,2);
double tmp284 = cp(3+_OFF);
double tmp285 = mRoll(2+_OFF);
double tmp286 = mRoll(3+_OFF);
double tmp287 = x(11+_OFF);
double tmp288 = mRoll(4+_OFF);
double tmp289 = x(13+_OFF);
double tmp290 = tmp282*tmp277*tmp278;
double tmp291 = std::pow(tmp279,2);
double tmp292 = -(tmp277*tmp291);
double tmp293 = std::pow(tmp280,2);
double tmp294 = -(tmp278*tmp293);
double tmp295 = 2*tmp279*tmp280*tmp281;
double tmp296 = -(tmp282*tmp283);
double tmp297 = tmp290 + tmp292 + tmp294 + tmp295 + tmp296;
double tmp298 = 1/tmp297;
double tmp299 = cBar(1+_OFF);
double tmp300 = mPitch(3+_OFF);
double tmp301 = mPitch(4+_OFF);
double tmp302 = x(12+_OFF);
double tmp303 = mYaw(2+_OFF);
double tmp304 = mYaw(3+_OFF);
double tmp305 = tmp277*tmp278;
double tmp306 = -tmp283;
double tmp307 = tmp305 + tmp306;
double tmp308 = tmp92*tmp285;
double tmp309 = (tmp284*tmp286*tmp86*tmp287)/2.;
double tmp310 = -(tmp284*tmp288*tmp86*tmp289)/2.;
double tmp311 = mRoll(1+_OFF);
double tmp312 = z(2+_OFF);
double tmp313 = -(tmp311*tmp312);
double tmp314 = tmp308 + tmp309 + tmp310 + tmp313;
double tmp315 = -(tmp278*tmp280);
double tmp316 = tmp279*tmp281;
double tmp317 = tmp315 + tmp316;
double tmp318 = mPitch(1+_OFF);
double tmp319 = -tmp318;
double tmp320 = -(tmp114*tmp300);
double tmp321 = (tmp299*tmp301*tmp86*tmp302)/2.;
double tmp322 = mPitch(2+_OFF);
double tmp323 = z(3+_OFF);
double tmp324 = -(tmp322*tmp323);
double tmp325 = tmp319 + tmp320 + tmp321 + tmp324;
double tmp326 = -(tmp277*tmp279);
double tmp327 = tmp280*tmp281;
double tmp328 = tmp326 + tmp327;
double tmp329 = -(tmp92*tmp303);
double tmp330 = (tmp284*tmp304*tmp86*tmp289)/2.;
double tmp331 = mYaw(1+_OFF);
double tmp332 = z(4+_OFF);
double tmp333 = tmp331*tmp332;
double tmp334 = tmp329 + tmp330 + tmp333;
double tmp335 = tmp285*tmp154*tmp161;
double tmp336 = -(tmp284*tmp286*tmp82*tmp158*tmp287)/4.;
double tmp337 = (tmp284*tmp288*tmp82*tmp158*tmp289)/4.;
double tmp338 = tmp335 + tmp336 + tmp337;
double tmp339 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp284*tmp62*tmp85*tmp338;
double tmp340 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp284*tmp62*tmp82*tmp314;
double tmp341 = tmp339 + tmp340;
double tmp342 = -(tmp300*tmp157);
double tmp343 = -(tmp299*tmp301*tmp82*tmp158*tmp302)/4.;
double tmp344 = tmp342 + tmp343;
double tmp345 = 0.001740341106856944*tmp14*tmp40*tmp299*tmp56*tmp62*tmp85*tmp344;
double tmp346 = 0.001740341106856944*tmp14*tmp40*tmp299*tmp56*tmp62*tmp82*tmp325;
double tmp347 = tmp345 + tmp346;
double tmp348 = -(tmp303*tmp154*tmp161);
double tmp349 = -(tmp284*tmp304*tmp82*tmp158*tmp289)/4.;
double tmp350 = tmp348 + tmp349;
double tmp351 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp284*tmp62*tmp85*tmp350;
double tmp352 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp284*tmp62*tmp82*tmp334;
double tmp353 = tmp351 + tmp352;
double tmp354 = tmp285*tmp154*tmp182;
double tmp355 = -(tmp284*tmp286*tmp173*tmp158*tmp287)/4.;
double tmp356 = (tmp284*tmp288*tmp173*tmp158*tmp289)/4.;
double tmp357 = tmp354 + tmp355 + tmp356;
double tmp358 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp284*tmp62*tmp85*tmp357;
double tmp359 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp284*tmp62*tmp173*tmp314;
double tmp360 = tmp358 + tmp359;
double tmp361 = tmp282*tmp278;
double tmp362 = -tmp291;
double tmp363 = tmp361 + tmp362;
double tmp364 = -(tmp300*tmp179);
double tmp365 = -(tmp299*tmp301*tmp173*tmp158*tmp302)/4.;
double tmp366 = tmp364 + tmp365;
double tmp367 = 0.001740341106856944*tmp14*tmp40*tmp299*tmp56*tmp62*tmp85*tmp366;
double tmp368 = 0.001740341106856944*tmp14*tmp40*tmp299*tmp56*tmp62*tmp173*tmp325;
double tmp369 = tmp367 + tmp368;
double tmp370 = tmp279*tmp280;
double tmp371 = -(tmp282*tmp281);
double tmp372 = tmp370 + tmp371;
double tmp373 = -(tmp303*tmp154*tmp182);
double tmp374 = -(tmp284*tmp304*tmp173*tmp158*tmp289)/4.;
double tmp375 = tmp373 + tmp374;
double tmp376 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp284*tmp62*tmp85*tmp375;
double tmp377 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp284*tmp62*tmp173*tmp334;
double tmp378 = tmp376 + tmp377;
double tmp379 = tmp285*tmp154*tmp208;
double tmp380 = -(tmp284*tmp286*tmp192*tmp158*tmp287)/4.;
double tmp381 = (tmp284*tmp288*tmp192*tmp158*tmp289)/4.;
double tmp382 = tmp379 + tmp380 + tmp381;
double tmp383 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp284*tmp62*tmp85*tmp382;
double tmp384 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp284*tmp62*tmp192*tmp314;
double tmp385 = tmp383 + tmp384;
double tmp386 = -(tmp300*tmp205);
double tmp387 = -(tmp299*tmp301*tmp192*tmp158*tmp302)/4.;
double tmp388 = tmp386 + tmp387;
double tmp389 = 0.001740341106856944*tmp14*tmp40*tmp299*tmp56*tmp62*tmp85*tmp388;
double tmp390 = 0.001740341106856944*tmp14*tmp40*tmp299*tmp56*tmp62*tmp192*tmp325;
double tmp391 = tmp389 + tmp390;
double tmp392 = -(tmp303*tmp154*tmp208);
double tmp393 = -(tmp284*tmp304*tmp192*tmp158*tmp289)/4.;
double tmp394 = tmp392 + tmp393;
double tmp395 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp284*tmp62*tmp85*tmp394;
double tmp396 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp284*tmp62*tmp192*tmp334;
double tmp397 = tmp395 + tmp396;
double tmp398 = tmp285*tmp154*tmp220;
double tmp399 = -(tmp284*tmp286*tmp212*tmp158*tmp287)/4.;
double tmp400 = (tmp284*tmp288*tmp212*tmp158*tmp289)/4.;
double tmp401 = tmp398 + tmp399 + tmp400;
double tmp402 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp284*tmp62*tmp85*tmp401;
double tmp403 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp284*tmp62*tmp212*tmp314;
double tmp404 = tmp402 + tmp403;
double tmp405 = -(tmp300*tmp217);
double tmp406 = -(tmp299*tmp301*tmp212*tmp158*tmp302)/4.;
double tmp407 = tmp405 + tmp406;
double tmp408 = 0.001740341106856944*tmp14*tmp40*tmp299*tmp56*tmp62*tmp85*tmp407;
double tmp409 = 0.001740341106856944*tmp14*tmp40*tmp299*tmp56*tmp62*tmp212*tmp325;
double tmp410 = tmp408 + tmp409;
double tmp411 = -(tmp303*tmp154*tmp220);
double tmp412 = -(tmp284*tmp304*tmp212*tmp158*tmp289)/4.;
double tmp413 = tmp411 + tmp412;
double tmp414 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp284*tmp62*tmp85*tmp413;
double tmp415 = 0.001740341106856944*tmp14*tmp40*tmp56*tmp284*tmp62*tmp212*tmp334;
double tmp416 = tmp414 + tmp415;
double tmp417 = tmp282*tmp277;
double tmp418 = -tmp293;
double tmp419 = tmp417 + tmp418;
J(1+_OFF,1+_OFF) = tmp270 - tmp165*(-0.001740341106856944*tmp14*tmp40*tmp56*tmp117*tmp62*tmp66*tmp133*tmp82 - 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp102*tmp111*tmp66*tmp82*tmp86 + 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp102*tmp111*tmp123*tmp124*tmp112 - 0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp138*tmp102*tmp66*tmp112 + tmp271 + tmp272 + 0.000870170553428472*tmp14*tmp40*tmp56*tmp117*tmp62*tmp123*tmp124*tmp133*tmp85 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp115*tmp62*tmp66*tmp133*tmp157*tmp85 + 0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp102*tmp66*tmp85*tmp224*tmp154 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp102*tmp66*tmp82*tmp153 - 0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp102*tmp123*tmp124*tmp85*tmp153 + tmp273 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp93*tmp62*tmp102*tmp111*tmp66*tmp112*tmp154*tmp161 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp62*tmp102*tmp66*tmp85*tmp153*tmp237 + 0.003480682213713888*tmp14*tmp40*tmp183*tmp62*(tmp184*tmp185*tmp82 + (tmp186*tmp162*tmp187*tmp82*tmp86*tmp188)/2.));
J(1+_OFF,2+_OFF) = tmp245 - tmp165*(-0.001740341106856944*tmp14*tmp40*tmp56*tmp117*tmp62*tmp66*tmp133*tmp173 - 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp102*tmp111*tmp66*tmp173*tmp86 + 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp102*tmp111*tmp175*tmp124*tmp112 - 0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp121*tmp102*tmp66*tmp112 + tmp274 + tmp275 + 0.000870170553428472*tmp14*tmp40*tmp56*tmp117*tmp62*tmp175*tmp124*tmp133*tmp85 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp115*tmp62*tmp66*tmp133*tmp179*tmp85 + 0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp102*tmp66*tmp85*tmp240*tmp154 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp102*tmp66*tmp173*tmp153 - 0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp102*tmp175*tmp124*tmp85*tmp153 + tmp276 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp93*tmp62*tmp102*tmp111*tmp66*tmp112*tmp154*tmp182 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp62*tmp102*tmp66*tmp85*tmp153*tmp244 + 0.003480682213713888*tmp14*tmp40*tmp183*tmp62*(tmp184*tmp185*tmp173 + (tmp186*tmp162*tmp187*tmp173*tmp86*tmp188)/2.));
J(1+_OFF,3+_OFF) = -2*tmp163*tmp1 - tmp165*(-0.001740341106856944*tmp14*tmp40*tmp56*tmp117*tmp62*tmp66*tmp133*tmp192 - 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp102*tmp111*tmp66*tmp192*tmp86 + 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp102*tmp111*tmp198*tmp124*tmp112 - 0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp202*tmp102*tmp66*tmp112 - 0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp121*tmp111*tmp66*tmp112 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp117*tmp62*tmp196*tmp66*tmp85 + 0.000870170553428472*tmp14*tmp40*tmp56*tmp117*tmp62*tmp198*tmp124*tmp133*tmp85 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp115*tmp62*tmp66*tmp133*tmp205*tmp85 + 0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp102*tmp66*tmp85*tmp248*tmp154 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp102*tmp66*tmp192*tmp153 - 0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp102*tmp198*tmp124*tmp85*tmp153 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp121*tmp66*tmp85*tmp153 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp93*tmp62*tmp102*tmp111*tmp66*tmp112*tmp154*tmp208 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp62*tmp102*tmp66*tmp85*tmp153*tmp252 + 0.003480682213713888*tmp14*tmp40*tmp183*tmp62*(tmp184*tmp185*tmp192 + (tmp186*tmp162*tmp187*tmp192*tmp86*tmp188)/2.));
J(1+_OFF,4+_OFF) = tmp221 - tmp165*(-0.001740341106856944*tmp14*tmp40*tmp56*tmp117*tmp62*tmp66*tmp133*tmp212 - 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp102*tmp111*tmp66*tmp212*tmp86 + 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp102*tmp111*tmp214*tmp124*tmp112 - 0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp70*tmp102*tmp66*tmp112 - 0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp75*tmp111*tmp66*tmp112 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp117*tmp62*tmp202*tmp66*tmp85 + 0.000870170553428472*tmp14*tmp40*tmp56*tmp117*tmp62*tmp214*tmp124*tmp133*tmp85 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp115*tmp62*tmp66*tmp133*tmp217*tmp85 + 0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp102*tmp66*tmp85*tmp255*tmp154 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp102*tmp66*tmp212*tmp153 - 0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp102*tmp214*tmp124*tmp85*tmp153 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp75*tmp66*tmp85*tmp153 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp93*tmp62*tmp102*tmp111*tmp66*tmp112*tmp154*tmp220 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp62*tmp102*tmp66*tmp85*tmp153*tmp259 + 0.003480682213713888*tmp14*tmp40*tmp183*tmp62*(tmp184*tmp185*tmp212 + (tmp186*tmp162*tmp187*tmp212*tmp86*tmp188)/2.));
J(2+_OFF,1+_OFF) = tmp221 - tmp165*(0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp233*tmp82*tmp86 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp75*tmp112 - 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp85*tmp224*tmp154 - 0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp82*tmp153 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp93*tmp62*tmp85*tmp161 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp62*tmp233*tmp112*tmp237);
J(2+_OFF,2+_OFF) = tmp260 - tmp165*(0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp233*tmp173*tmp86 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp80*tmp112 - 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp85*tmp240*tmp154 - 0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp173*tmp153 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp93*tmp62*tmp85*tmp182 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp62*tmp233*tmp112*tmp244);
J(2+_OFF,3+_OFF) = tmp245 - tmp165*(0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp233*tmp192*tmp86 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp169*tmp112 - 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp85*tmp248*tmp154 - 0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp192*tmp153 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp93*tmp62*tmp85*tmp208 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp62*tmp233*tmp112*tmp252);
J(2+_OFF,4+_OFF) = 2*tmp163*tmp0 - tmp165*(0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp233*tmp212*tmp86 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp196*tmp112 - 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp85*tmp255*tmp154 - 0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp212*tmp153 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp93*tmp62*tmp85*tmp220 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp62*tmp233*tmp112*tmp259);
J(3+_OFF,1+_OFF) = tmp260 - tmp165*(-0.001740341106856944*tmp14*tmp40*tmp56*tmp117*tmp62*tmp102*tmp66*tmp82 - 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp111*tmp66*tmp269*tmp82*tmp86 - 0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp80*tmp111*tmp66*tmp112 + 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp111*tmp123*tmp124*tmp269*tmp112 - 0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp138*tmp66*tmp269*tmp112 + 0.000870170553428472*tmp14*tmp40*tmp56*tmp117*tmp62*tmp102*tmp123*tmp124*tmp85 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp117*tmp62*tmp70*tmp66*tmp85 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp115*tmp62*tmp102*tmp66*tmp157*tmp85 + 0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp66*tmp269*tmp85*tmp224*tmp154 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp66*tmp269*tmp82*tmp153 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp80*tmp66*tmp85*tmp153 - 0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp123*tmp124*tmp269*tmp85*tmp153 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp93*tmp62*tmp111*tmp66*tmp269*tmp112*tmp154*tmp161 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp62*tmp66*tmp269*tmp85*tmp153*tmp237);
J(3+_OFF,2+_OFF) = -2*tmp163*tmp2 - tmp165*(-0.001740341106856944*tmp14*tmp40*tmp56*tmp117*tmp62*tmp102*tmp66*tmp173 - 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp111*tmp66*tmp269*tmp173*tmp86 - 0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp138*tmp111*tmp66*tmp112 + 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp111*tmp175*tmp124*tmp269*tmp112 - 0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp121*tmp66*tmp269*tmp112 + 0.000870170553428472*tmp14*tmp40*tmp56*tmp117*tmp62*tmp102*tmp175*tmp124*tmp85 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp117*tmp62*tmp169*tmp66*tmp85 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp115*tmp62*tmp102*tmp66*tmp179*tmp85 + 0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp66*tmp269*tmp85*tmp240*tmp154 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp66*tmp269*tmp173*tmp153 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp138*tmp66*tmp85*tmp153 - 0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp175*tmp124*tmp269*tmp85*tmp153 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp93*tmp62*tmp111*tmp66*tmp269*tmp112*tmp154*tmp182 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp62*tmp66*tmp269*tmp85*tmp153*tmp244);
J(3+_OFF,3+_OFF) = tmp270 - tmp165*(-0.001740341106856944*tmp14*tmp40*tmp56*tmp117*tmp62*tmp102*tmp66*tmp192 - 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp111*tmp66*tmp269*tmp192*tmp86 + tmp271 + 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp111*tmp198*tmp124*tmp269*tmp112 - 0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp202*tmp66*tmp269*tmp112 + 0.000870170553428472*tmp14*tmp40*tmp56*tmp117*tmp62*tmp102*tmp198*tmp124*tmp85 + tmp272 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp115*tmp62*tmp102*tmp66*tmp205*tmp85 + 0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp66*tmp269*tmp85*tmp248*tmp154 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp66*tmp269*tmp192*tmp153 + tmp273 - 0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp198*tmp124*tmp269*tmp85*tmp153 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp93*tmp62*tmp111*tmp66*tmp269*tmp112*tmp154*tmp208 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp62*tmp66*tmp269*tmp85*tmp153*tmp252);
J(3+_OFF,4+_OFF) = tmp245 - tmp165*(-0.001740341106856944*tmp14*tmp40*tmp56*tmp117*tmp62*tmp102*tmp66*tmp212 - 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp111*tmp66*tmp269*tmp212*tmp86 + tmp274 + 0.000870170553428472*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp111*tmp214*tmp124*tmp269*tmp112 - 0.001740341106856944*tmp14*tmp40*tmp92*tmp56*tmp93*tmp62*tmp70*tmp66*tmp269*tmp112 + 0.000870170553428472*tmp14*tmp40*tmp56*tmp117*tmp62*tmp102*tmp214*tmp124*tmp85 + tmp275 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp115*tmp62*tmp102*tmp66*tmp217*tmp85 + 0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp66*tmp269*tmp85*tmp255*tmp154 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp150*tmp62*tmp66*tmp269*tmp212*tmp153 + tmp276 - 0.000870170553428472*tmp14*tmp40*tmp56*tmp150*tmp62*tmp214*tmp124*tmp269*tmp85*tmp153 - 0.001740341106856944*tmp14*tmp40*tmp56*tmp93*tmp62*tmp111*tmp66*tmp269*tmp112*tmp154*tmp220 + 0.001740341106856944*tmp14*tmp40*tmp56*tmp62*tmp66*tmp269*tmp85*tmp153*tmp259);
J(4+_OFF,1+_OFF) = -(tmp307*tmp298*tmp341) - tmp317*tmp298*tmp347 - tmp328*tmp298*tmp353;
J(4+_OFF,2+_OFF) = -(tmp307*tmp298*tmp360) - tmp317*tmp298*tmp369 - tmp328*tmp298*tmp378;
J(4+_OFF,3+_OFF) = -(tmp307*tmp298*tmp385) - tmp317*tmp298*tmp391 - tmp328*tmp298*tmp397;
J(4+_OFF,4+_OFF) = -(tmp307*tmp298*tmp404) - tmp317*tmp298*tmp410 - tmp328*tmp298*tmp416;
J(5+_OFF,1+_OFF) = -(tmp317*tmp298*tmp341) - tmp363*tmp298*tmp347 - tmp372*tmp298*tmp353;
J(5+_OFF,2+_OFF) = -(tmp317*tmp298*tmp360) - tmp363*tmp298*tmp369 - tmp372*tmp298*tmp378;
J(5+_OFF,3+_OFF) = -(tmp317*tmp298*tmp385) - tmp363*tmp298*tmp391 - tmp372*tmp298*tmp397;
J(5+_OFF,4+_OFF) = -(tmp317*tmp298*tmp404) - tmp363*tmp298*tmp410 - tmp372*tmp298*tmp416;
J(6+_OFF,1+_OFF) = -(tmp328*tmp298*tmp341) - tmp372*tmp298*tmp347 - tmp419*tmp298*tmp353;
J(6+_OFF,2+_OFF) = -(tmp328*tmp298*tmp360) - tmp372*tmp298*tmp369 - tmp419*tmp298*tmp378;
J(6+_OFF,3+_OFF) = -(tmp328*tmp298*tmp385) - tmp372*tmp298*tmp391 - tmp419*tmp298*tmp397;
J(6+_OFF,4+_OFF) = -(tmp328*tmp298*tmp404) - tmp372*tmp298*tmp410 - tmp419*tmp298*tmp416;
