double tmp0 = x(5+_OFF);
double tmp1 = x(6+_OFF);
double tmp2 = tmp0*tmp1;
double tmp3 = x(4+_OFF);
double tmp4 = x(7+_OFF);
double tmp5 = tmp3*tmp4;
double tmp6 = tmp2 + tmp5;
double tmp7 = -(tmp3*tmp1);
double tmp8 = tmp0*tmp4;
double tmp9 = tmp7 + tmp8;
double tmp10 = std::pow(tmp3,2);
double tmp11 = std::pow(tmp0,2);
double tmp12 = std::pow(tmp1,2);
double tmp13 = -tmp12;
double tmp14 = std::pow(tmp4,2);
double tmp15 = -tmp14;
double tmp16 = tmp10 + tmp11 + tmp13 + tmp15;
double tmp17 = lw(1+_OFF);
double tmp18 = x(1+_OFF);
double tmp19 = tmp3*tmp1;
double tmp20 = tmp19 + tmp8;
double tmp21 = lw(2+_OFF);
double tmp22 = x(2+_OFF);
double tmp23 = -(tmp3*tmp0);
double tmp24 = tmp1*tmp4;
double tmp25 = tmp23 + tmp24;
double tmp26 = lw(3+_OFF);
double tmp27 = x(3+_OFF);
double tmp28 = -tmp11;
double tmp29 = tmp10 + tmp28 + tmp13 + tmp14;
double tmp30 = 2*tmp21*tmp6;
double tmp31 = -2*tmp22*tmp6;
double tmp32 = 2*tmp26*tmp9;
double tmp33 = -2*tmp27*tmp9;
double tmp34 = tmp17*tmp16;
double tmp35 = -(tmp18*tmp16);
double tmp36 = tmp30 + tmp31 + tmp32 + tmp33 + tmp34 + tmp35;
double tmp37 = 2*tmp17*tmp20;
double tmp38 = -2*tmp18*tmp20;
double tmp39 = 2*tmp21*tmp25;
double tmp40 = -2*tmp22*tmp25;
double tmp41 = tmp26*tmp29;
double tmp42 = -(tmp27*tmp29);
double tmp43 = tmp37 + tmp38 + tmp39 + tmp40 + tmp41 + tmp42;
double tmp44 = -(tmp3*tmp4);
double tmp45 = tmp2 + tmp44;
double tmp46 = tmp3*tmp0;
double tmp47 = tmp46 + tmp24;
double tmp48 = tmp10 + tmp28 + tmp12 + tmp15;
double tmp49 = std::pow(tmp43,-2);
double tmp50 = cm(1+_OFF);
double tmp51 = 1/tmp43;
double tmp52 = std::pow(tmp36,2);
double tmp53 = tmp52*tmp49;
double tmp54 = 2*tmp17*tmp45;
double tmp55 = -2*tmp18*tmp45;
double tmp56 = 2*tmp26*tmp47;
double tmp57 = -2*tmp27*tmp47;
double tmp58 = tmp21*tmp48;
double tmp59 = -(tmp22*tmp48);
double tmp60 = tmp54 + tmp55 + tmp56 + tmp57 + tmp58 + tmp59;
double tmp61 = std::pow(tmp60,2);
double tmp62 = tmp61*tmp49;
double tmp63 = tmp53 + tmp62;
double tmp64 = std::pow(tmp63,2);
double tmp65 = std::pow(tmp63,3);
J(1+_OFF,1+_OFF) = tmp50*tmp36*tmp51*tmp63;
J(1+_OFF,2+_OFF) = tmp50*tmp36*tmp51*tmp64;
J(1+_OFF,3+_OFF) = tmp50*tmp36*tmp51*tmp65;
J(2+_OFF,1+_OFF) = tmp50*tmp60*tmp51*tmp63;
J(2+_OFF,2+_OFF) = tmp50*tmp60*tmp51*tmp64;
J(2+_OFF,3+_OFF) = tmp50*tmp60*tmp51*tmp65;
