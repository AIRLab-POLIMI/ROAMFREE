double tmp0 = x(4+_OFF);
double tmp1 = x(6+_OFF);
double tmp2 = x(5+_OFF);
double tmp3 = x(7+_OFF);
double tmp4 = x(30+_OFF);
double tmp5 = x(32+_OFF);
double tmp6 = x(31+_OFF);
double tmp7 = x(33+_OFF);
double tmp8 = tmp6*tmp5;
double tmp9 = tmp4*tmp7;
double tmp10 = tmp8 + tmp9;
double tmp11 = -(tmp4*tmp5);
double tmp12 = tmp6*tmp7;
double tmp13 = tmp11 + tmp12;
double tmp14 = std::pow(tmp4,2);
double tmp15 = std::pow(tmp6,2);
double tmp16 = std::pow(tmp5,2);
double tmp17 = -tmp16;
double tmp18 = std::pow(tmp7,2);
double tmp19 = -tmp18;
double tmp20 = tmp14 + tmp15 + tmp17 + tmp19;
double tmp21 = cp(1+_OFF);
double tmp22 = 1/tmp21;
double tmp23 = dragmodel(1+_OFF);
double tmp24 = std::pow(tmp0,2);
double tmp25 = std::pow(tmp2,2);
double tmp26 = std::pow(tmp1,2);
double tmp27 = -tmp26;
double tmp28 = std::pow(tmp3,2);
double tmp29 = -tmp28;
double tmp30 = tmp24 + tmp25 + tmp27 + tmp29;
double tmp31 = -(tmp0*tmp1);
double tmp32 = tmp2*tmp3;
double tmp33 = tmp31 + tmp32;
double tmp34 = tmp2*tmp1;
double tmp35 = tmp0*tmp3;
double tmp36 = tmp34 + tmp35;
double tmp37 = windxy(1+_OFF);
double tmp38 = -(tmp4*tmp7);
double tmp39 = tmp8 + tmp38;
double tmp40 = windz(1+_OFF);
double tmp41 = tmp4*tmp6;
double tmp42 = tmp5*tmp7;
double tmp43 = tmp41 + tmp42;
double tmp44 = windxy(2+_OFF);
double tmp45 = -tmp15;
double tmp46 = tmp14 + tmp45 + tmp16 + tmp19;
double tmp47 = tmp4*tmp5;
double tmp48 = tmp47 + tmp12;
double tmp49 = -(tmp4*tmp6);
double tmp50 = tmp49 + tmp42;
double tmp51 = tmp14 + tmp45 + tmp17 + tmp18;
double tmp52 = -2*tmp44*tmp10;
double tmp53 = -2*tmp40*tmp13;
double tmp54 = -(tmp37*tmp20);
double tmp55 = x(34+_OFF);
double tmp56 = tmp52 + tmp53 + tmp54 + tmp55;
double tmp57 = -(tmp0*tmp3);
double tmp58 = tmp34 + tmp57;
double tmp59 = tmp0*tmp2;
double tmp60 = tmp1*tmp3;
double tmp61 = tmp59 + tmp60;
double tmp62 = -tmp25;
double tmp63 = tmp24 + tmp62 + tmp26 + tmp29;
double tmp64 = -2*tmp37*tmp39;
double tmp65 = -2*tmp40*tmp43;
double tmp66 = -(tmp44*tmp46);
double tmp67 = x(35+_OFF);
double tmp68 = tmp64 + tmp65 + tmp66 + tmp67;
double tmp69 = -2*tmp37*tmp48;
double tmp70 = -2*tmp44*tmp50;
double tmp71 = -(tmp40*tmp51);
double tmp72 = x(36+_OFF);
double tmp73 = tmp69 + tmp70 + tmp71 + tmp72;
double tmp74 = tmp0*tmp1;
double tmp75 = tmp74 + tmp32;
double tmp76 = tmp24 + tmp62 + tmp27 + tmp28;
double tmp77 = -(tmp0*tmp2);
double tmp78 = tmp77 + tmp60;
J(1+_OFF,1+_OFF) = tmp22*tmp23*(4*tmp36*tmp10 + 4*tmp33*tmp13 + tmp30*tmp20)*tmp56;
J(1+_OFF,2+_OFF) = tmp22*tmp23*(2*tmp30*tmp39 + 4*tmp33*tmp43 + 2*tmp36*tmp46)*tmp68;
J(1+_OFF,3+_OFF) = tmp22*tmp23*(2*tmp30*tmp48 + 4*tmp36*tmp50 + 2*tmp33*tmp51)*tmp73;
J(2+_OFF,1+_OFF) = tmp22*tmp23*(2*tmp63*tmp10 + 4*tmp61*tmp13 + 2*tmp58*tmp20)*tmp56;
J(2+_OFF,2+_OFF) = tmp22*tmp23*(4*tmp58*tmp39 + 4*tmp61*tmp43 + tmp63*tmp46)*tmp68;
J(2+_OFF,3+_OFF) = tmp22*tmp23*(4*tmp58*tmp48 + 2*tmp63*tmp50 + 2*tmp61*tmp51)*tmp73;
J(3+_OFF,1+_OFF) = tmp22*tmp23*(4*tmp78*tmp10 + 2*tmp76*tmp13 + 2*tmp75*tmp20)*tmp56;
J(3+_OFF,2+_OFF) = tmp22*tmp23*(4*tmp75*tmp39 + 2*tmp76*tmp43 + 2*tmp78*tmp46)*tmp68;
J(3+_OFF,3+_OFF) = tmp22*tmp23*(4*tmp75*tmp48 + 4*tmp78*tmp50 + tmp76*tmp51)*tmp73;
J(4+_OFF,1+_OFF) = 0;
J(4+_OFF,2+_OFF) = 0;
J(4+_OFF,3+_OFF) = 0;
J(5+_OFF,1+_OFF) = 0;
J(5+_OFF,2+_OFF) = 0;
J(5+_OFF,3+_OFF) = 0;
J(6+_OFF,1+_OFF) = 0;
J(6+_OFF,2+_OFF) = 0;
J(6+_OFF,3+_OFF) = 0;
