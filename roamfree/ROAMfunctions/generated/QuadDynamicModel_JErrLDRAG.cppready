double tmp0 = x(4+_OFF);
double tmp1 = x(6+_OFF);
double tmp2 = x(5+_OFF);
double tmp3 = x(7+_OFF);
double tmp4 = cp(1+_OFF);
double tmp5 = 1/tmp4;
double tmp6 = dragmodel(1+_OFF);
double tmp7 = windxy(1+_OFF);
double tmp8 = windz(1+_OFF);
double tmp9 = windxy(2+_OFF);
double tmp10 = std::pow(tmp3,2);
double tmp11 = -2*tmp10;
double tmp12 = std::pow(tmp2,2);
double tmp13 = std::pow(tmp1,2);
double tmp14 = tmp0*tmp2;
J(1+_OFF,1+_OFF) = -(tmp5*tmp6*(2*tmp9*(tmp2*tmp1 + tmp0*tmp3) + tmp8*(-2*tmp0*tmp1 + 2*tmp2*tmp3) + tmp7*(1 - 2*tmp13 + tmp11) - x(8+_OFF)));
J(1+_OFF,2+_OFF) = 0;
J(1+_OFF,3+_OFF) = 0;
J(2+_OFF,1+_OFF) = 0;
J(2+_OFF,2+_OFF) = -(tmp5*tmp6*(2*tmp7*tmp2*tmp1 - 2*tmp7*tmp0*tmp3 + 2*tmp8*(tmp14 + tmp1*tmp3) + tmp9*(1 - 2*tmp12 + tmp11) - x(9+_OFF)));
J(2+_OFF,3+_OFF) = 0;
J(3+_OFF,1+_OFF) = 0;
J(3+_OFF,2+_OFF) = 0;
J(3+_OFF,3+_OFF) = tmp5*tmp6*(tmp8*(-1 + 2*tmp12 + 2*tmp13) - 2*tmp7*(tmp0*tmp1 + tmp2*tmp3) + 2*tmp9*(tmp14 - tmp1*tmp3) + x(10+_OFF));
J(4+_OFF,1+_OFF) = 0;
J(4+_OFF,2+_OFF) = 0;
J(4+_OFF,3+_OFF) = 0;
J(5+_OFF,1+_OFF) = 0;
J(5+_OFF,2+_OFF) = 0;
J(5+_OFF,3+_OFF) = 0;
J(6+_OFF,1+_OFF) = 0;
J(6+_OFF,2+_OFF) = 0;
J(6+_OFF,3+_OFF) = 0;
