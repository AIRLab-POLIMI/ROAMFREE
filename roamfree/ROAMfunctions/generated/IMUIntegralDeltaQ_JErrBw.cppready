double tmp0 = z(5+_OFF);
double tmp1 = z(8+_OFF);
double tmp2 = bw(1+_OFF);
double tmp3 = z(14+_OFF);
double tmp4 = -tmp3;
double tmp5 = tmp2 + tmp4;
double tmp6 = bw(2+_OFF);
double tmp7 = z(15+_OFF);
double tmp8 = -tmp7;
double tmp9 = tmp6 + tmp8;
double tmp10 = bw(3+_OFF);
double tmp11 = z(16+_OFF);
double tmp12 = -tmp11;
double tmp13 = tmp10 + tmp12;
double tmp14 = z(11+_OFF);
double tmp15 = tmp0*tmp5;
double tmp16 = z(6+_OFF);
double tmp17 = tmp16*tmp9;
double tmp18 = z(7+_OFF);
double tmp19 = tmp18*tmp13;
double tmp20 = tmp15 + tmp17 + tmp19;
double tmp21 = tmp1*tmp5;
double tmp22 = z(9+_OFF);
double tmp23 = tmp22*tmp9;
double tmp24 = z(10+_OFF);
double tmp25 = tmp24*tmp13;
double tmp26 = tmp21 + tmp23 + tmp25;
double tmp27 = tmp14*tmp5;
double tmp28 = z(12+_OFF);
double tmp29 = tmp28*tmp9;
double tmp30 = z(13+_OFF);
double tmp31 = tmp30*tmp13;
double tmp32 = tmp27 + tmp29 + tmp31;
double tmp33 = z(1+_OFF);
double tmp34 = z(4+_OFF);
double tmp35 = z(3+_OFF);
double tmp36 = z(2+_OFF);
double tmp37 = -2*tmp0*tmp20;
double tmp38 = -2*tmp1*tmp26;
double tmp39 = -2*tmp14*tmp32;
double tmp40 = tmp37 + tmp38 + tmp39;
double tmp41 = std::pow(tmp20,2);
double tmp42 = -tmp41;
double tmp43 = std::pow(tmp26,2);
double tmp44 = -tmp43;
double tmp45 = std::pow(tmp32,2);
double tmp46 = -tmp45;
double tmp47 = 1 + tmp42 + tmp44 + tmp46;
double tmp48 = 1/std::sqrt(tmp47);
double tmp49 = x(24+_OFF);
double tmp50 = x(23+_OFF);
double tmp51 = -2*tmp16*tmp20;
double tmp52 = -2*tmp22*tmp26;
double tmp53 = -2*tmp28*tmp32;
double tmp54 = tmp51 + tmp52 + tmp53;
double tmp55 = x(26+_OFF);
double tmp56 = x(25+_OFF);
double tmp57 = -2*tmp18*tmp20;
double tmp58 = -2*tmp24*tmp26;
double tmp59 = -2*tmp30*tmp32;
double tmp60 = tmp57 + tmp58 + tmp59;
double tmp61 = -(tmp36*tmp0);
double tmp62 = -(tmp35*tmp1);
double tmp63 = -(tmp34*tmp14);
double tmp64 = (tmp33*tmp40*tmp48)/2.;
double tmp65 = tmp61 + tmp62 + tmp63 + tmp64;
double tmp66 = tmp33*tmp0;
double tmp67 = -(tmp34*tmp1);
double tmp68 = tmp35*tmp14;
double tmp69 = (tmp36*tmp40*tmp48)/2.;
double tmp70 = tmp66 + tmp67 + tmp68 + tmp69;
double tmp71 = tmp34*tmp0;
double tmp72 = tmp33*tmp1;
double tmp73 = -(tmp36*tmp14);
double tmp74 = (tmp35*tmp40*tmp48)/2.;
double tmp75 = tmp71 + tmp72 + tmp73 + tmp74;
double tmp76 = -(tmp35*tmp0);
double tmp77 = tmp36*tmp1;
double tmp78 = tmp33*tmp14;
double tmp79 = (tmp34*tmp40*tmp48)/2.;
double tmp80 = tmp76 + tmp77 + tmp78 + tmp79;
double tmp81 = -(tmp36*tmp16);
double tmp82 = -(tmp35*tmp22);
double tmp83 = -(tmp34*tmp28);
double tmp84 = (tmp33*tmp54*tmp48)/2.;
double tmp85 = tmp81 + tmp82 + tmp83 + tmp84;
double tmp86 = tmp33*tmp16;
double tmp87 = -(tmp34*tmp22);
double tmp88 = tmp35*tmp28;
double tmp89 = (tmp36*tmp54*tmp48)/2.;
double tmp90 = tmp86 + tmp87 + tmp88 + tmp89;
double tmp91 = tmp34*tmp16;
double tmp92 = tmp33*tmp22;
double tmp93 = -(tmp36*tmp28);
double tmp94 = (tmp35*tmp54*tmp48)/2.;
double tmp95 = tmp91 + tmp92 + tmp93 + tmp94;
double tmp96 = -(tmp35*tmp16);
double tmp97 = tmp36*tmp22;
double tmp98 = tmp33*tmp28;
double tmp99 = (tmp34*tmp54*tmp48)/2.;
double tmp100 = tmp96 + tmp97 + tmp98 + tmp99;
double tmp101 = -(tmp36*tmp18);
double tmp102 = -(tmp35*tmp24);
double tmp103 = -(tmp34*tmp30);
double tmp104 = (tmp33*tmp60*tmp48)/2.;
double tmp105 = tmp101 + tmp102 + tmp103 + tmp104;
double tmp106 = tmp33*tmp18;
double tmp107 = -(tmp34*tmp24);
double tmp108 = tmp35*tmp30;
double tmp109 = (tmp36*tmp60*tmp48)/2.;
double tmp110 = tmp106 + tmp107 + tmp108 + tmp109;
double tmp111 = tmp34*tmp18;
double tmp112 = tmp33*tmp24;
double tmp113 = -(tmp36*tmp30);
double tmp114 = (tmp35*tmp60*tmp48)/2.;
double tmp115 = tmp111 + tmp112 + tmp113 + tmp114;
double tmp116 = -(tmp35*tmp18);
double tmp117 = tmp36*tmp24;
double tmp118 = tmp33*tmp30;
double tmp119 = (tmp34*tmp60*tmp48)/2.;
double tmp120 = tmp116 + tmp117 + tmp118 + tmp119;
J(1+_OFF,1+_OFF) = sign*(-(tmp49*tmp65) + tmp50*tmp70 + tmp55*tmp75 - tmp56*tmp80);
J(1+_OFF,2+_OFF) = sign*(-(tmp49*tmp85) + tmp50*tmp90 + tmp55*tmp95 - tmp56*tmp100);
J(1+_OFF,3+_OFF) = sign*(-(tmp49*tmp105) + tmp50*tmp110 + tmp55*tmp115 - tmp56*tmp120);
J(2+_OFF,1+_OFF) = sign*(-(tmp56*tmp65) - tmp55*tmp70 + tmp50*tmp75 + tmp49*tmp80);
J(2+_OFF,2+_OFF) = sign*(-(tmp56*tmp85) - tmp55*tmp90 + tmp50*tmp95 + tmp49*tmp100);
J(2+_OFF,3+_OFF) = sign*(-(tmp56*tmp105) - tmp55*tmp110 + tmp50*tmp115 + tmp49*tmp120);
J(3+_OFF,1+_OFF) = sign*(-(tmp55*tmp65) + tmp56*tmp70 - tmp49*tmp75 + tmp50*tmp80);
J(3+_OFF,2+_OFF) = sign*(-(tmp55*tmp85) + tmp56*tmp90 - tmp49*tmp95 + tmp50*tmp100);
J(3+_OFF,3+_OFF) = sign*(-(tmp55*tmp105) + tmp56*tmp110 - tmp49*tmp115 + tmp50*tmp120);
