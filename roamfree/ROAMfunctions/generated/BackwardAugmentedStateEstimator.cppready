double tmp0 = x2(4+_OFF);
double tmp1 = x2(6+_OFF);
double tmp2 = x2(5+_OFF);
double tmp3 = x2(7+_OFF);
double tmp4 = tmp2*tmp1;
double tmp5 = std::pow(tmp0,2);
double tmp6 = std::pow(tmp2,2);
double tmp7 = std::pow(tmp1,2);
double tmp8 = std::pow(tmp3,2);
double tmp9 = -tmp8;
double tmp10 = tmp2*tmp3;
double tmp11 = tmp1*tmp3;
double tmp12 = -tmp6;
double tmp13 = -tmp7;
double tmp14 = std::pow(qOS1,2);
double tmp15 = -tmp14;
double tmp16 = std::pow(qOS2,2);
double tmp17 = -tmp16;
double tmp18 = std::pow(qOS3,2);
double tmp19 = -tmp18;
double tmp20 = 1 + tmp15 + tmp17 + tmp19;
double tmp21 = std::sqrt(tmp20);
double tmp22 = 1/Dt12;
double tmp23 = x1(4+_OFF);
double tmp24 = x1(7+_OFF);
double tmp25 = x1(5+_OFF);
double tmp26 = x1(6+_OFF);
double tmp27 = x2(3+_OFF);
double tmp28 = tmp23*tmp0;
double tmp29 = tmp24*tmp3;
double tmp30 = tmp25*tmp2;
double tmp31 = tmp26*tmp1;
double tmp32 = x2(1+_OFF);
double tmp33 = -1 + tmp6;
double tmp34 = tmp25*tmp33;
double tmp35 = -2 + tmp28 + tmp31 + tmp29;
double tmp36 = tmp2*tmp35;
double tmp37 = tmp34 + tmp36;
double tmp38 = -2 + tmp28 + tmp30 + tmp31;
double tmp39 = tmp38*tmp3;
double tmp40 = -1 + tmp8;
double tmp41 = tmp24*tmp40;
double tmp42 = tmp39 + tmp41;
double tmp43 = -1 + tmp7;
double tmp44 = tmp26*tmp43;
double tmp45 = -2 + tmp28 + tmp30 + tmp29;
double tmp46 = tmp1*tmp45;
double tmp47 = tmp44 + tmp46;
double tmp48 = -2 + tmp30 + tmp31 + tmp29;
double tmp49 = tmp6 + tmp7 + tmp8;
double tmp50 = x2(2+_OFF);
double tmp51 = -(tmp0*tmp48);
double tmp52 = tmp23*tmp49;
double tmp53 = tmp51 + tmp52;
double tmp54 = x1(1+_OFF);
double tmp55 = -tmp54;
double tmp56 = tmp55 + tmp32;
double tmp57 = std::pow(tmp47,2);
double tmp58 = -tmp57;
double tmp59 = std::pow(tmp37,2);
double tmp60 = std::pow(tmp42,2);
double tmp61 = tmp0*tmp48;
double tmp62 = -(tmp23*tmp49);
double tmp63 = tmp61 + tmp62;
double tmp64 = std::pow(tmp63,2);
double tmp65 = x1(3+_OFF);
double tmp66 = -tmp65;
double tmp67 = tmp66 + tmp27;
double tmp68 = tmp37*tmp42;
double tmp69 = x1(2+_OFF);
double tmp70 = -tmp69;
double tmp71 = tmp70 + tmp50;
double tmp72 = -tmp59;
double tmp73 = -tmp60;
double tmp74 = tmp47*tmp42;
double tmp75 = tmp47*tmp37;
double tmp76 = -2*tmp22*sO2*tmp25*tmp0;
double tmp77 = 2*tmp22*sO1*tmp26*tmp0;
double tmp78 = 2*tmp22*sO2*tmp23*tmp2;
double tmp79 = 2*tmp22*sO1*tmp24*tmp2;
double tmp80 = -2*tmp22*sO1*tmp23*tmp1;
double tmp81 = 2*tmp22*sO2*tmp24*tmp1;
double tmp82 = -2*tmp22*sO1*tmp25*tmp3;
double tmp83 = -2*tmp22*sO2*tmp26*tmp3;
double tmp84 = tmp58 + tmp72 + tmp60 + tmp64;
double tmp85 = tmp67*tmp84;
double tmp86 = -(tmp47*tmp53);
double tmp87 = tmp68 + tmp86;
double tmp88 = 2*tmp56*tmp87;
double tmp89 = tmp37*tmp53;
double tmp90 = tmp74 + tmp89;
double tmp91 = 2*tmp71*tmp90;
double tmp92 = tmp85 + tmp88 + tmp91;
double tmp93 = (tmp22*tmp92)/4.;
double tmp94 = tmp76 + tmp77 + tmp78 + tmp79 + tmp80 + tmp81 + tmp82 + tmp83 + tmp93;
double tmp95 = qOS1*qOS2;
double tmp96 = -2*tmp22*sO3*tmp26*tmp0;
double tmp97 = 2*tmp22*sO2*tmp24*tmp0;
double tmp98 = -2*tmp22*sO2*tmp26*tmp2;
double tmp99 = -2*tmp22*sO3*tmp24*tmp2;
double tmp100 = 2*tmp22*sO3*tmp23*tmp1;
double tmp101 = 2*tmp22*sO2*tmp25*tmp1;
double tmp102 = -2*tmp22*sO2*tmp23*tmp3;
double tmp103 = 2*tmp22*sO3*tmp25*tmp3;
double tmp104 = tmp58 + tmp59 + tmp73 + tmp64;
double tmp105 = tmp56*tmp104;
double tmp106 = tmp47*tmp53;
double tmp107 = tmp68 + tmp106;
double tmp108 = 2*tmp67*tmp107;
double tmp109 = -(tmp42*tmp53);
double tmp110 = tmp75 + tmp109;
double tmp111 = 2*tmp71*tmp110;
double tmp112 = tmp105 + tmp108 + tmp111;
double tmp113 = (tmp22*tmp112)/4.;
double tmp114 = tmp96 + tmp97 + tmp98 + tmp99 + tmp100 + tmp101 + tmp102 + tmp103 + tmp113;
double tmp115 = -2*tmp18;
double tmp116 = 2*tmp22*sO3*tmp25*tmp0;
double tmp117 = -2*tmp22*sO1*tmp24*tmp0;
double tmp118 = -2*tmp22*sO3*tmp23*tmp2;
double tmp119 = 2*tmp22*sO1*tmp26*tmp2;
double tmp120 = -2*tmp22*sO1*tmp25*tmp1;
double tmp121 = -2*tmp22*sO3*tmp24*tmp1;
double tmp122 = 2*tmp22*sO1*tmp23*tmp3;
double tmp123 = 2*tmp22*sO3*tmp26*tmp3;
double tmp124 = tmp57 + tmp72 + tmp73 + tmp64;
double tmp125 = tmp71*tmp124;
double tmp126 = -(tmp37*tmp53);
double tmp127 = tmp74 + tmp126;
double tmp128 = 2*tmp67*tmp127;
double tmp129 = tmp42*tmp53;
double tmp130 = tmp75 + tmp129;
double tmp131 = 2*tmp56*tmp130;
double tmp132 = tmp125 + tmp128 + tmp131;
double tmp133 = (tmp22*tmp132)/4.;
double tmp134 = tmp116 + tmp117 + tmp118 + tmp119 + tmp120 + tmp121 + tmp122 + tmp123 + tmp133;
double tmp135 = -2*tmp14;
double tmp136 = -2*tmp16;
double tmp137 = qOS1*qOS3;
double tmp138 = qOS2*qOS3;
double tmp139 = -(qOS2*tmp21);
double tmp140 = tmp137 + tmp139;
double tmp141 = qOS3*tmp21;
double tmp142 = tmp95 + tmp141;
double tmp143 = 1 + tmp136 + tmp115;
double tmp144 = qOS1*tmp21;
double tmp145 = tmp138 + tmp144;
double tmp146 = -(tmp24*tmp0);
double tmp147 = tmp26*tmp2;
double tmp148 = -(tmp25*tmp1);
double tmp149 = tmp23*tmp3;
double tmp150 = tmp146 + tmp147 + tmp148 + tmp149;
double tmp151 = 1 + tmp135 + tmp115;
double tmp152 = -(tmp26*tmp0);
double tmp153 = -(tmp24*tmp2);
double tmp154 = tmp23*tmp1;
double tmp155 = tmp25*tmp3;
double tmp156 = tmp152 + tmp153 + tmp154 + tmp155;
double tmp157 = -(qOS3*tmp21);
double tmp158 = tmp95 + tmp157;
double tmp159 = -(tmp25*tmp0);
double tmp160 = tmp23*tmp2;
double tmp161 = tmp24*tmp1;
double tmp162 = -(tmp26*tmp3);
double tmp163 = tmp159 + tmp160 + tmp161 + tmp162;
double tmp164 = 1 + tmp135 + tmp136;
double tmp165 = -(qOS1*tmp21);
double tmp166 = tmp138 + tmp165;
double tmp167 = qOS2*tmp21;
double tmp168 = tmp137 + tmp167;
double tmp169 = Dt01 + Dt12;
double tmp170 = 1/Dt01;
double tmp171 = 1/tmp169;
double tmp172 = x0(5+_OFF);
double tmp173 = x0(4+_OFF);
double tmp174 = x0(7+_OFF);
double tmp175 = x0(6+_OFF);
double tmp176 = tmp0*tmp1;
double tmp177 = tmp176 + tmp10;
double tmp178 = tmp0*tmp2;
double tmp179 = tmp96 + tmp97 + tmp98 + tmp99 + tmp100 + tmp101 + tmp102 + tmp103;
double tmp180 = Dt12*tmp172*tmp0;
double tmp181 = -(tmp169*tmp25*tmp0);
double tmp182 = -(Dt12*tmp173*tmp2);
double tmp183 = tmp169*tmp23*tmp2;
double tmp184 = -(Dt12*tmp174*tmp1);
double tmp185 = tmp169*tmp24*tmp1;
double tmp186 = Dt12*tmp175*tmp3;
double tmp187 = -(tmp169*tmp26*tmp3);
double tmp188 = tmp180 + tmp181 + tmp182 + tmp183 + tmp184 + tmp185 + tmp186 + tmp187;
double tmp189 = x0(1+_OFF);
double tmp190 = tmp189 + tmp55;
double tmp191 = Dt12*tmp190;
double tmp192 = Dt01*tmp56;
double tmp193 = tmp191 + tmp192;
double tmp194 = -(tmp0*tmp3);
double tmp195 = tmp4 + tmp194;
double tmp196 = x0(3+_OFF);
double tmp197 = tmp178 + tmp11;
double tmp198 = x0(2+_OFF);
double tmp199 = -tmp198;
double tmp200 = tmp199 + tmp69;
double tmp201 = Dt12*tmp200;
double tmp202 = -tmp50;
double tmp203 = tmp69 + tmp202;
double tmp204 = Dt01*tmp203;
double tmp205 = tmp201 + tmp204;
double tmp206 = 2*tmp6;
double tmp207 = Dt12*tmp174*tmp0;
double tmp208 = -(tmp169*tmp24*tmp0);
double tmp209 = -(Dt12*tmp175*tmp2);
double tmp210 = tmp169*tmp26*tmp2;
double tmp211 = Dt12*tmp172*tmp1;
double tmp212 = -(tmp169*tmp25*tmp1);
double tmp213 = -(Dt12*tmp173*tmp3);
double tmp214 = tmp169*tmp23*tmp3;
double tmp215 = tmp207 + tmp208 + tmp209 + tmp210 + tmp211 + tmp212 + tmp213 + tmp214;
double tmp216 = Dt12*tmp175*tmp0;
double tmp217 = -(tmp169*tmp26*tmp0);
double tmp218 = Dt12*tmp174*tmp2;
double tmp219 = -(tmp169*tmp24*tmp2);
double tmp220 = -(Dt12*tmp173*tmp1);
double tmp221 = tmp169*tmp23*tmp1;
double tmp222 = -(Dt12*tmp172*tmp3);
double tmp223 = tmp169*tmp25*tmp3;
double tmp224 = tmp216 + tmp217 + tmp218 + tmp219 + tmp220 + tmp221 + tmp222 + tmp223;
double tmp225 = tmp76 + tmp77 + tmp78 + tmp79 + tmp80 + tmp81 + tmp82 + tmp83;
double tmp226 = tmp116 + tmp117 + tmp118 + tmp119 + tmp120 + tmp121 + tmp122 + tmp123;
double tmp227 = tmp0*tmp3;
double tmp228 = tmp4 + tmp227;
double tmp229 = -tmp196;
double tmp230 = tmp229 + tmp65;
double tmp231 = Dt12*tmp230;
double tmp232 = -tmp27;
double tmp233 = tmp65 + tmp232;
double tmp234 = Dt01*tmp233;
double tmp235 = tmp231 + tmp234;
double tmp236 = 2*tmp7;
double tmp237 = 2*tmp8;
double tmp238 = -4*tmp170*tmp22*tmp171*sO1*tmp224;
double tmp239 = -2*tmp22*tmp156*tmp179;
double tmp240 = 4*tmp170*tmp22*tmp171*sO2*tmp188;
double tmp241 = 2*tmp22*tmp163*tmp226;
double tmp242 = -1 + tmp206 + tmp236;
double tmp243 = tmp235*tmp242;
double tmp244 = 2*tmp193*tmp177;
double tmp245 = -(tmp1*tmp3);
double tmp246 = tmp178 + tmp245;
double tmp247 = 2*tmp205*tmp246;
double tmp248 = tmp243 + tmp244 + tmp247;
double tmp249 = 2*tmp170*tmp22*tmp171*tmp248;
double tmp250 = tmp238 + tmp239 + tmp240 + tmp241 + tmp249;
double tmp251 = 4*tmp170*tmp22*tmp171*sO1*tmp215;
double tmp252 = 2*tmp22*tmp150*tmp179;
double tmp253 = -4*tmp170*tmp22*tmp171*sO3*tmp188;
double tmp254 = -2*tmp22*tmp163*tmp225;
double tmp255 = 2*tmp193*tmp195;
double tmp256 = tmp196 + tmp66;
double tmp257 = Dt12*tmp256;
double tmp258 = Dt01*tmp67;
double tmp259 = tmp257 + tmp258;
double tmp260 = 2*tmp259*tmp197;
double tmp261 = -1 + tmp206 + tmp237;
double tmp262 = tmp205*tmp261;
double tmp263 = tmp255 + tmp260 + tmp262;
double tmp264 = 2*tmp170*tmp22*tmp171*tmp263;
double tmp265 = tmp251 + tmp252 + tmp253 + tmp254 + tmp264;
double tmp266 = -4*tmp170*tmp22*tmp171*sO2*tmp215;
double tmp267 = 4*tmp170*tmp22*tmp171*sO3*tmp224;
double tmp268 = 2*tmp22*tmp156*tmp225;
double tmp269 = -2*tmp22*tmp150*tmp226;
double tmp270 = tmp198 + tmp70;
double tmp271 = Dt12*tmp270;
double tmp272 = Dt01*tmp71;
double tmp273 = tmp271 + tmp272;
double tmp274 = 2*tmp273*tmp228;
double tmp275 = -(tmp2*tmp3);
double tmp276 = tmp176 + tmp275;
double tmp277 = 2*tmp235*tmp276;
double tmp278 = -tmp189;
double tmp279 = tmp278 + tmp54;
double tmp280 = Dt12*tmp279;
double tmp281 = -tmp32;
double tmp282 = tmp54 + tmp281;
double tmp283 = Dt01*tmp282;
double tmp284 = tmp280 + tmp283;
double tmp285 = -1 + tmp236 + tmp237;
double tmp286 = tmp284*tmp285;
double tmp287 = tmp274 + tmp277 + tmp286;
double tmp288 = 2*tmp170*tmp22*tmp171*tmp287;
double tmp289 = tmp266 + tmp267 + tmp268 + tmp269 + tmp288;
_x(1+_OFF) = tmp32 + 2*sO2*tmp195 + 2*sO3*tmp177 + sO1*(tmp5 + tmp6 + tmp13 + tmp9);
_x(2+_OFF) = tmp50 + 2*sO1*tmp228 + 2*sO3*(-(tmp0*tmp2) + tmp11) + sO2*(tmp5 + tmp12 + tmp7 + tmp9);
_x(3+_OFF) = tmp27 + 2*sO1*(-(tmp0*tmp1) + tmp10) + 2*sO2*tmp197 + sO3*(tmp5 + tmp12 + tmp13 + tmp8);
_x(4+_OFF) = tmp21*tmp0 - qOS1*tmp2 - qOS2*tmp1 - qOS3*tmp3;
_x(5+_OFF) = qOS1*tmp0 + tmp21*tmp2 + qOS3*tmp1 - qOS2*tmp3;
_x(6+_OFF) = qOS2*tmp0 - qOS3*tmp2 + tmp21*tmp1 + qOS1*tmp3;
_x(7+_OFF) = qOS3*tmp0 + qOS2*tmp2 - qOS1*tmp1 + tmp21*tmp3;
_x(8+_OFF) = 2*tmp140*tmp94 + tmp143*tmp114 + 2*tmp142*tmp134;
_x(9+_OFF) = 2*tmp145*tmp94 + 2*tmp158*tmp114 + tmp151*tmp134;
_x(10+_OFF) = tmp164*tmp94 + 2*tmp168*tmp114 + 2*tmp166*tmp134;
_x(11+_OFF) = 4*tmp22*tmp140*tmp150 + 4*tmp22*tmp142*tmp156 + 2*tmp22*tmp143*tmp163;
_x(12+_OFF) = 4*tmp22*tmp145*tmp150 + 2*tmp22*tmp151*tmp156 + 4*tmp22*tmp158*tmp163;
_x(13+_OFF) = 2*tmp22*tmp164*tmp150 + 4*tmp22*tmp166*tmp156 + 4*tmp22*tmp168*tmp163;
_x(14+_OFF) = 2*tmp140*tmp250 + 2*tmp142*tmp265 + tmp143*tmp289;
_x(15+_OFF) = 2*tmp145*tmp250 + tmp151*tmp265 + 2*tmp158*tmp289;
_x(16+_OFF) = tmp164*tmp250 + 2*tmp166*tmp265 + 2*tmp168*tmp289;
_x(17+_OFF) = 8*tmp170*tmp22*tmp171*tmp140*tmp215 + 8*tmp170*tmp22*tmp171*tmp142*tmp224 + 4*tmp170*tmp22*tmp171*tmp143*tmp188;
_x(18+_OFF) = 8*tmp170*tmp22*tmp171*tmp145*tmp215 + 4*tmp170*tmp22*tmp171*tmp151*tmp224 + 8*tmp170*tmp22*tmp171*tmp158*tmp188;
_x(19+_OFF) = 4*tmp170*tmp22*tmp171*tmp164*tmp215 + 8*tmp170*tmp22*tmp171*tmp166*tmp224 + 8*tmp170*tmp22*tmp171*tmp168*tmp188;
