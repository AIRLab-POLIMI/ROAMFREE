double tmp0 = x(5+_OFF);
double tmp1 = x(6+_OFF);
double tmp2 = x(4+_OFF);
double tmp3 = x(7+_OFF);
double tmp4 = tmp0*tmp1;
double tmp5 = tmp2*tmp3;
double tmp6 = tmp4 + tmp5;
double tmp7 = tmp0*tmp3;
double tmp8 = -(tmp2*tmp1);
double tmp9 = tmp8 + tmp7;
double tmp10 = std::pow(tmp2,2);
double tmp11 = std::pow(tmp0,2);
double tmp12 = std::pow(tmp1,2);
double tmp13 = -tmp12;
double tmp14 = std::pow(tmp3,2);
double tmp15 = -tmp14;
double tmp16 = tmp10 + tmp11 + tmp13 + tmp15;
double tmp17 = lw(1+_OFF);
double tmp18 = x(1+_OFF);
double tmp19 = -(tmp2*tmp3);
double tmp20 = tmp4 + tmp19;
double tmp21 = lw(3+_OFF);
double tmp22 = x(3+_OFF);
double tmp23 = tmp2*tmp0;
double tmp24 = tmp1*tmp3;
double tmp25 = tmp23 + tmp24;
double tmp26 = lw(2+_OFF);
double tmp27 = x(2+_OFF);
double tmp28 = -tmp11;
double tmp29 = tmp10 + tmp28 + tmp12 + tmp15;
double tmp30 = tmp2*tmp1;
double tmp31 = tmp30 + tmp7;
double tmp32 = -(tmp2*tmp0);
double tmp33 = tmp32 + tmp24;
double tmp34 = tmp10 + tmp28 + tmp13 + tmp14;
double tmp35 = td(1+_OFF);
double tmp36 = 2*tmp26*tmp6;
double tmp37 = -2*tmp27*tmp6;
double tmp38 = 2*tmp21*tmp9;
double tmp39 = -2*tmp22*tmp9;
double tmp40 = tmp17*tmp16;
double tmp41 = -(tmp18*tmp16);
double tmp42 = tmp36 + tmp37 + tmp38 + tmp39 + tmp40 + tmp41;
double tmp43 = 2*tmp17*tmp31;
double tmp44 = -2*tmp18*tmp31;
double tmp45 = 2*tmp26*tmp33;
double tmp46 = -2*tmp27*tmp33;
double tmp47 = tmp21*tmp34;
double tmp48 = -(tmp22*tmp34);
double tmp49 = tmp43 + tmp44 + tmp45 + tmp46 + tmp47 + tmp48;
double tmp50 = 2*tmp17*tmp20;
double tmp51 = -2*tmp18*tmp20;
double tmp52 = 2*tmp21*tmp25;
double tmp53 = -2*tmp22*tmp25;
double tmp54 = tmp26*tmp29;
double tmp55 = -(tmp27*tmp29);
double tmp56 = tmp50 + tmp51 + tmp52 + tmp53 + tmp54 + tmp55;
double tmp57 = std::pow(tmp49,-2);
double tmp58 = std::pow(tmp49,-3);
double tmp59 = -tmp10;
double tmp60 = tmp59 + tmp28 + tmp12 + tmp14;
double tmp61 = std::pow(tmp42,2);
double tmp62 = std::pow(tmp56,2);
double tmp63 = 4*tmp31*tmp62*tmp58;
double tmp64 = -4*tmp20*tmp56*tmp57;
double tmp65 = 4*tmp31*tmp61*tmp58;
double tmp66 = 2*tmp60*tmp42*tmp57;
double tmp67 = tmp65 + tmp63 + tmp66 + tmp64;
double tmp68 = tmp61*tmp57;
double tmp69 = tmp62*tmp57;
double tmp70 = tmp68 + tmp69;
double tmp71 = rd(1+_OFF);
double tmp72 = rd(2+_OFF);
double tmp73 = std::pow(tmp70,2);
double tmp74 = rd(3+_OFF);
double tmp75 = 1/tmp49;
double tmp76 = tmp71*tmp70;
double tmp77 = tmp72*tmp73;
double tmp78 = std::pow(tmp70,3);
double tmp79 = tmp74*tmp78;
double tmp80 = 1 + tmp76 + tmp77 + tmp79;
double tmp81 = cm(1+_OFF);
double tmp82 = td(2+_OFF);
double tmp83 = tmp59 + tmp11 + tmp13 + tmp14;
double tmp84 = 4*tmp33*tmp62*tmp58;
double tmp85 = 2*tmp83*tmp56*tmp57;
double tmp86 = 4*tmp33*tmp61*tmp58;
double tmp87 = -4*tmp6*tmp42*tmp57;
double tmp88 = tmp86 + tmp84 + tmp87 + tmp85;
double tmp89 = tmp59 + tmp11 + tmp12 + tmp15;
double tmp90 = -2*tmp89*tmp62*tmp58;
double tmp91 = -4*tmp25*tmp56*tmp57;
double tmp92 = -2*tmp89*tmp61*tmp58;
double tmp93 = -4*tmp9*tmp42*tmp57;
double tmp94 = tmp92 + tmp90 + tmp93 + tmp91;
double tmp95 = tmp71*tmp67;
double tmp96 = 2*tmp72*tmp67*tmp70;
double tmp97 = 3*tmp74*tmp67*tmp73;
double tmp98 = tmp95 + tmp96 + tmp97;
double tmp99 = tmp71*tmp88;
double tmp100 = 2*tmp72*tmp88*tmp70;
double tmp101 = 3*tmp74*tmp88*tmp73;
double tmp102 = tmp99 + tmp100 + tmp101;
double tmp103 = tmp71*tmp94;
double tmp104 = 2*tmp72*tmp94*tmp70;
double tmp105 = 3*tmp74*tmp94*tmp73;
double tmp106 = tmp103 + tmp104 + tmp105;
J(1+_OFF,1+_OFF) = tmp81*(8*tmp35*tmp31*tmp42*tmp56*tmp58 - 4*tmp35*tmp20*tmp42*tmp57 + 2*tmp35*tmp60*tmp56*tmp57 + tmp82*(12*tmp31*tmp61*tmp58 + tmp63 + 6*tmp60*tmp42*tmp57 + tmp64) + tmp42*tmp75*tmp98 + 2*tmp31*tmp42*tmp57*tmp80 + tmp60*tmp75*tmp80);
J(1+_OFF,2+_OFF) = tmp81*(8*tmp35*tmp33*tmp42*tmp56*tmp58 + 2*tmp35*tmp83*tmp42*tmp57 - 4*tmp35*tmp6*tmp56*tmp57 + tmp82*(12*tmp33*tmp61*tmp58 + tmp84 - 12*tmp6*tmp42*tmp57 + tmp85) + tmp42*tmp75*tmp102 + 2*tmp33*tmp42*tmp57*tmp80 - 2*tmp6*tmp75*tmp80);
J(1+_OFF,3+_OFF) = tmp81*(-4*tmp35*tmp89*tmp42*tmp56*tmp58 - 4*tmp35*tmp25*tmp42*tmp57 - 4*tmp35*tmp9*tmp56*tmp57 + tmp82*(-6*tmp89*tmp61*tmp58 + tmp90 - 12*tmp9*tmp42*tmp57 + tmp91) + tmp42*tmp75*tmp106 - tmp89*tmp42*tmp57*tmp80 - 2*tmp9*tmp75*tmp80);
J(2+_OFF,1+_OFF) = tmp81*(8*tmp82*tmp31*tmp42*tmp56*tmp58 - 4*tmp82*tmp20*tmp42*tmp57 + 2*tmp82*tmp60*tmp56*tmp57 + tmp35*(tmp65 + 12*tmp31*tmp62*tmp58 + tmp66 - 12*tmp20*tmp56*tmp57) + tmp56*tmp75*tmp98 + 2*tmp31*tmp56*tmp57*tmp80 - 2*tmp20*tmp75*tmp80);
J(2+_OFF,2+_OFF) = tmp81*(8*tmp82*tmp33*tmp42*tmp56*tmp58 + 2*tmp82*tmp83*tmp42*tmp57 - 4*tmp82*tmp6*tmp56*tmp57 + tmp35*(tmp86 + 12*tmp33*tmp62*tmp58 + tmp87 + 6*tmp83*tmp56*tmp57) + tmp56*tmp75*tmp102 + 2*tmp33*tmp56*tmp57*tmp80 + tmp83*tmp75*tmp80);
J(2+_OFF,3+_OFF) = tmp81*(-4*tmp82*tmp89*tmp42*tmp56*tmp58 - 4*tmp82*tmp25*tmp42*tmp57 - 4*tmp82*tmp9*tmp56*tmp57 + tmp35*(tmp92 - 6*tmp89*tmp62*tmp58 + tmp93 - 12*tmp25*tmp56*tmp57) + tmp56*tmp75*tmp106 - tmp89*tmp56*tmp57*tmp80 - 2*tmp25*tmp75*tmp80);
