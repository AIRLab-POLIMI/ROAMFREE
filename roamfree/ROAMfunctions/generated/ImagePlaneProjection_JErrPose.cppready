double tmp0 = x(5+_OFF);
double tmp1 = x(6+_OFF);
double tmp2 = x(4+_OFF);
double tmp3 = x(7+_OFF);
double tmp4 = tmp0*tmp1;
double tmp5 = tmp2*tmp3;
double tmp6 = tmp4 + tmp5;
double tmp7 = tmp0*tmp3;
double tmp8 = -(tmp2*tmp1);
double tmp9 = tmp8 + tmp7;
double tmp10 = std::pow(tmp2,2);
double tmp11 = std::pow(tmp0,2);
double tmp12 = std::pow(tmp1,2);
double tmp13 = -tmp12;
double tmp14 = std::pow(tmp3,2);
double tmp15 = -tmp14;
double tmp16 = tmp10 + tmp11 + tmp13 + tmp15;
double tmp17 = lw(1+_OFF);
double tmp18 = x(1+_OFF);
double tmp19 = -(tmp2*tmp3);
double tmp20 = tmp4 + tmp19;
double tmp21 = lw(3+_OFF);
double tmp22 = x(3+_OFF);
double tmp23 = tmp2*tmp0;
double tmp24 = tmp1*tmp3;
double tmp25 = tmp23 + tmp24;
double tmp26 = lw(2+_OFF);
double tmp27 = x(2+_OFF);
double tmp28 = -tmp11;
double tmp29 = tmp10 + tmp28 + tmp12 + tmp15;
double tmp30 = tmp2*tmp1;
double tmp31 = tmp30 + tmp7;
double tmp32 = -(tmp2*tmp0);
double tmp33 = tmp32 + tmp24;
double tmp34 = tmp10 + tmp28 + tmp13 + tmp14;
double tmp35 = td(1+_OFF);
double tmp36 = 2*tmp26*tmp6;
double tmp37 = -2*tmp27*tmp6;
double tmp38 = 2*tmp21*tmp9;
double tmp39 = -2*tmp22*tmp9;
double tmp40 = tmp17*tmp16;
double tmp41 = -(tmp18*tmp16);
double tmp42 = tmp36 + tmp37 + tmp38 + tmp39 + tmp40 + tmp41;
double tmp43 = 2*tmp17*tmp31;
double tmp44 = -2*tmp18*tmp31;
double tmp45 = 2*tmp26*tmp33;
double tmp46 = -2*tmp27*tmp33;
double tmp47 = tmp21*tmp34;
double tmp48 = -(tmp22*tmp34);
double tmp49 = tmp43 + tmp44 + tmp45 + tmp46 + tmp47 + tmp48;
double tmp50 = 2*tmp17*tmp20;
double tmp51 = -2*tmp18*tmp20;
double tmp52 = 2*tmp21*tmp25;
double tmp53 = -2*tmp22*tmp25;
double tmp54 = tmp26*tmp29;
double tmp55 = -(tmp27*tmp29);
double tmp56 = tmp50 + tmp51 + tmp52 + tmp53 + tmp54 + tmp55;
double tmp57 = std::pow(tmp49,-2);
double tmp58 = std::pow(tmp49,-3);
double tmp59 = -tmp10;
double tmp60 = tmp59 + tmp28 + tmp12 + tmp14;
double tmp61 = std::pow(tmp42,2);
double tmp62 = 4*tmp31*tmp61*tmp58;
double tmp63 = std::pow(tmp56,2);
double tmp64 = 2*tmp60*tmp42*tmp57;
double tmp65 = 4*tmp31*tmp63*tmp58;
double tmp66 = -4*tmp20*tmp56*tmp57;
double tmp67 = tmp62 + tmp65 + tmp64 + tmp66;
double tmp68 = tmp61*tmp57;
double tmp69 = tmp63*tmp57;
double tmp70 = tmp68 + tmp69;
double tmp71 = rd(1+_OFF);
double tmp72 = rd(2+_OFF);
double tmp73 = std::pow(tmp70,2);
double tmp74 = rd(3+_OFF);
double tmp75 = std::pow(tmp70,3);
double tmp76 = rd(4+_OFF);
double tmp77 = 1/tmp49;
double tmp78 = tmp71*tmp70;
double tmp79 = tmp72*tmp73;
double tmp80 = tmp74*tmp75;
double tmp81 = std::pow(tmp70,4);
double tmp82 = tmp76*tmp81;
double tmp83 = 1 + tmp78 + tmp79 + tmp80 + tmp82;
double tmp84 = td(2+_OFF);
double tmp85 = tmp71*tmp67;
double tmp86 = 2*tmp72*tmp67*tmp70;
double tmp87 = 3*tmp74*tmp67*tmp73;
double tmp88 = 4*tmp76*tmp67*tmp75;
double tmp89 = tmp85 + tmp86 + tmp87 + tmp88;
double tmp90 = cm(1+_OFF);
double tmp91 = sk(1+_OFF);
double tmp92 = tmp90 + tmp91;
double tmp93 = tmp59 + tmp11 + tmp13 + tmp14;
double tmp94 = 4*tmp33*tmp63*tmp58;
double tmp95 = 2*tmp93*tmp56*tmp57;
double tmp96 = 4*tmp33*tmp61*tmp58;
double tmp97 = -4*tmp6*tmp42*tmp57;
double tmp98 = tmp96 + tmp94 + tmp97 + tmp95;
double tmp99 = sk(2+_OFF);
double tmp100 = tmp71*tmp98;
double tmp101 = 2*tmp72*tmp98*tmp70;
double tmp102 = 3*tmp74*tmp98*tmp73;
double tmp103 = 4*tmp76*tmp98*tmp75;
double tmp104 = tmp100 + tmp101 + tmp102 + tmp103;
double tmp105 = tmp59 + tmp11 + tmp12 + tmp15;
double tmp106 = -2*tmp105*tmp63*tmp58;
double tmp107 = -4*tmp25*tmp56*tmp57;
double tmp108 = -2*tmp105*tmp61*tmp58;
double tmp109 = -4*tmp9*tmp42*tmp57;
double tmp110 = tmp108 + tmp106 + tmp109 + tmp107;
double tmp111 = tmp71*tmp110;
double tmp112 = 2*tmp72*tmp110*tmp70;
double tmp113 = 3*tmp74*tmp110*tmp73;
double tmp114 = 4*tmp76*tmp110*tmp75;
double tmp115 = tmp111 + tmp112 + tmp113 + tmp114;
double tmp116 = 8*tmp35*tmp31*tmp42*tmp56*tmp58;
double tmp117 = -4*tmp35*tmp20*tmp42*tmp57;
double tmp118 = 2*tmp35*tmp60*tmp56*tmp57;
double tmp119 = 12*tmp31*tmp63*tmp58;
double tmp120 = -12*tmp20*tmp56*tmp57;
double tmp121 = tmp62 + tmp119 + tmp64 + tmp120;
double tmp122 = tmp84*tmp121;
double tmp123 = tmp56*tmp77*tmp89;
double tmp124 = 2*tmp31*tmp56*tmp57*tmp83;
double tmp125 = -2*tmp20*tmp77*tmp83;
double tmp126 = tmp116 + tmp117 + tmp118 + tmp122 + tmp123 + tmp124 + tmp125;
double tmp127 = 8*tmp35*tmp33*tmp42*tmp56*tmp58;
double tmp128 = 2*tmp35*tmp93*tmp42*tmp57;
double tmp129 = -4*tmp35*tmp6*tmp56*tmp57;
double tmp130 = 12*tmp33*tmp63*tmp58;
double tmp131 = 6*tmp93*tmp56*tmp57;
double tmp132 = tmp96 + tmp130 + tmp97 + tmp131;
double tmp133 = tmp84*tmp132;
double tmp134 = tmp56*tmp77*tmp104;
double tmp135 = 2*tmp33*tmp56*tmp57*tmp83;
double tmp136 = tmp93*tmp77*tmp83;
double tmp137 = tmp127 + tmp128 + tmp129 + tmp133 + tmp134 + tmp135 + tmp136;
double tmp138 = -4*tmp35*tmp105*tmp42*tmp56*tmp58;
double tmp139 = -4*tmp35*tmp25*tmp42*tmp57;
double tmp140 = -4*tmp35*tmp9*tmp56*tmp57;
double tmp141 = -6*tmp105*tmp63*tmp58;
double tmp142 = -12*tmp25*tmp56*tmp57;
double tmp143 = tmp108 + tmp141 + tmp109 + tmp142;
double tmp144 = tmp84*tmp143;
double tmp145 = tmp56*tmp77*tmp115;
double tmp146 = -(tmp105*tmp56*tmp57*tmp83);
double tmp147 = -2*tmp25*tmp77*tmp83;
double tmp148 = tmp138 + tmp139 + tmp140 + tmp144 + tmp145 + tmp146 + tmp147;
J(1+_OFF,1+_OFF) = tmp99*tmp126 + tmp92*(8*tmp84*tmp31*tmp42*tmp56*tmp58 - 4*tmp84*tmp20*tmp42*tmp57 + 2*tmp84*tmp60*tmp56*tmp57 + tmp35*(12*tmp31*tmp61*tmp58 + tmp65 + 6*tmp60*tmp42*tmp57 + tmp66) + tmp42*tmp77*tmp89 + 2*tmp31*tmp42*tmp57*tmp83 + tmp60*tmp77*tmp83);
J(1+_OFF,2+_OFF) = tmp92*(8*tmp84*tmp33*tmp42*tmp56*tmp58 + 2*tmp84*tmp93*tmp42*tmp57 - 4*tmp84*tmp6*tmp56*tmp57 + tmp35*(12*tmp33*tmp61*tmp58 + tmp94 - 12*tmp6*tmp42*tmp57 + tmp95) + tmp42*tmp77*tmp104 + 2*tmp33*tmp42*tmp57*tmp83 - 2*tmp6*tmp77*tmp83) + tmp99*tmp137;
J(1+_OFF,3+_OFF) = tmp92*(-4*tmp84*tmp105*tmp42*tmp56*tmp58 - 4*tmp84*tmp25*tmp42*tmp57 - 4*tmp84*tmp9*tmp56*tmp57 + tmp35*(-6*tmp105*tmp61*tmp58 + tmp106 - 12*tmp9*tmp42*tmp57 + tmp107) + tmp42*tmp77*tmp115 - tmp105*tmp42*tmp57*tmp83 - 2*tmp9*tmp77*tmp83) + tmp99*tmp148;
J(2+_OFF,1+_OFF) = tmp90*tmp126;
J(2+_OFF,2+_OFF) = tmp90*tmp137;
J(2+_OFF,3+_OFF) = tmp90*tmp148;
