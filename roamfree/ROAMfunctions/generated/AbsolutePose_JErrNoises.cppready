double tmp0 = x(7+_OFF);
double tmp1 = z(4+_OFF);
double tmp2 = x(6+_OFF);
double tmp3 = z(5+_OFF);
double tmp4 = x(5+_OFF);
double tmp5 = z(6+_OFF);
double tmp6 = x(4+_OFF);
double tmp7 = z(7+_OFF);
double tmp8 = tmp6*tmp1;
double tmp9 = tmp4*tmp3;
double tmp10 = tmp2*tmp5;
double tmp11 = tmp0*tmp7;
double tmp12 = tmp8 + tmp9 + tmp10 + tmp11;
double tmp13 = sign*tmp12;
J(1+_OFF,1+_OFF) = 1;
J(1+_OFF,2+_OFF) = 0;
J(1+_OFF,3+_OFF) = 0;
J(1+_OFF,4+_OFF) = 0;
J(1+_OFF,5+_OFF) = 0;
J(1+_OFF,6+_OFF) = 0;
J(2+_OFF,1+_OFF) = 0;
J(2+_OFF,2+_OFF) = 1;
J(2+_OFF,3+_OFF) = 0;
J(2+_OFF,4+_OFF) = 0;
J(2+_OFF,5+_OFF) = 0;
J(2+_OFF,6+_OFF) = 0;
J(3+_OFF,1+_OFF) = 0;
J(3+_OFF,2+_OFF) = 0;
J(3+_OFF,3+_OFF) = 1;
J(3+_OFF,4+_OFF) = 0;
J(3+_OFF,5+_OFF) = 0;
J(3+_OFF,6+_OFF) = 0;
J(4+_OFF,1+_OFF) = 0;
J(4+_OFF,2+_OFF) = 0;
J(4+_OFF,3+_OFF) = 0;
J(4+_OFF,4+_OFF) = tmp13;
J(4+_OFF,5+_OFF) = sign*(tmp0*tmp1 - tmp2*tmp3 + tmp4*tmp5 - tmp6*tmp7);
J(4+_OFF,6+_OFF) = sign*(-(tmp2*tmp1) - tmp0*tmp3 + tmp6*tmp5 + tmp4*tmp7);
J(5+_OFF,1+_OFF) = 0;
J(5+_OFF,2+_OFF) = 0;
J(5+_OFF,3+_OFF) = 0;
J(5+_OFF,4+_OFF) = sign*(-(tmp0*tmp1) + tmp2*tmp3 - tmp4*tmp5 + tmp6*tmp7);
J(5+_OFF,5+_OFF) = tmp13;
J(5+_OFF,6+_OFF) = sign*(tmp4*tmp1 - tmp6*tmp3 - tmp0*tmp5 + tmp2*tmp7);
J(6+_OFF,1+_OFF) = 0;
J(6+_OFF,2+_OFF) = 0;
J(6+_OFF,3+_OFF) = 0;
J(6+_OFF,4+_OFF) = sign*(tmp2*tmp1 + tmp0*tmp3 - tmp6*tmp5 - tmp4*tmp7);
J(6+_OFF,5+_OFF) = sign*(-(tmp4*tmp1) + tmp6*tmp3 + tmp0*tmp5 - tmp2*tmp7);
J(6+_OFF,6+_OFF) = tmp13;
