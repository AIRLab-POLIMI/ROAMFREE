double tmp0 = x(4+_OFF);
double tmp1 = x(6+_OFF);
double tmp2 = x(5+_OFF);
double tmp3 = x(7+_OFF);
double tmp4 = x(30+_OFF);
double tmp5 = x(31+_OFF);
double tmp6 = x(32+_OFF);
double tmp7 = x(33+_OFF);
double tmp8 = tmp5*tmp6;
double tmp9 = std::pow(tmp4,2);
double tmp10 = std::pow(tmp5,2);
double tmp11 = std::pow(tmp6,2);
double tmp12 = std::pow(tmp7,2);
double tmp13 = -tmp12;
double tmp14 = wind(1+_OFF);
double tmp15 = tmp5*tmp7;
double tmp16 = wind(2+_OFF);
double tmp17 = tmp6*tmp7;
double tmp18 = wind(3+_OFF);
double tmp19 = -tmp10;
double tmp20 = -tmp11;
double tmp21 = tmp4*tmp7;
double tmp22 = tmp8 + tmp21;
double tmp23 = -2*tmp16*tmp22;
double tmp24 = -(tmp4*tmp6);
double tmp25 = tmp24 + tmp15;
double tmp26 = -2*tmp18*tmp25;
double tmp27 = tmp9 + tmp10 + tmp20 + tmp13;
double tmp28 = -(tmp14*tmp27);
double tmp29 = x(34+_OFF);
double tmp30 = tmp23 + tmp26 + tmp28 + tmp29;
double tmp31 = tmp4*tmp6;
double tmp32 = tmp31 + tmp15;
double tmp33 = -2*tmp14*tmp32;
double tmp34 = -(tmp4*tmp5);
double tmp35 = tmp34 + tmp17;
double tmp36 = -2*tmp16*tmp35;
double tmp37 = tmp9 + tmp19 + tmp20 + tmp12;
double tmp38 = -(tmp18*tmp37);
double tmp39 = x(36+_OFF);
double tmp40 = tmp33 + tmp36 + tmp38 + tmp39;
double tmp41 = std::atan2(tmp40,tmp30);
double tmp42 = -(tmp4*tmp7);
double tmp43 = tmp8 + tmp42;
double tmp44 = tmp4*tmp5;
double tmp45 = tmp44 + tmp17;
double tmp46 = tmp9 + tmp19 + tmp11 + tmp13;
double tmp47 = -2*tmp14*tmp43;
double tmp48 = -2*tmp18*tmp45;
double tmp49 = -(tmp16*tmp46);
double tmp50 = x(35+_OFF);
double tmp51 = tmp47 + tmp48 + tmp49 + tmp50;
double tmp52 = std::pow(tmp30,2);
double tmp53 = std::pow(tmp51,2);
double tmp54 = std::pow(tmp40,2);
double tmp55 = tmp52 + tmp53 + tmp54;
double tmp56 = 1/std::sqrt(tmp55);
double tmp57 = cp(2+_OFF);
double tmp58 = tmp51*tmp56;
double tmp59 = std::asin(tmp58);
double tmp60 = fLat(1+_OFF);
double tmp61 = 1/tmp55;
double tmp62 = -(tmp53*tmp61);
double tmp63 = 1 + tmp62;
double tmp64 = fDrag(2+_OFF);
double tmp65 = fDrag(3+_OFF);
double tmp66 = 2*tmp14*tmp32;
double tmp67 = 2*tmp16*tmp35;
double tmp68 = tmp18*tmp37;
double tmp69 = -tmp39;
double tmp70 = tmp66 + tmp67 + tmp68 + tmp69;
double tmp71 = tmp52 + tmp54;
double tmp72 = 1/tmp71;
double tmp73 = fDrag(4+_OFF);
double tmp74 = 1/std::sqrt(tmp63);
double tmp75 = cp(4+_OFF);
double tmp76 = 1/tmp75;
double tmp77 = std::pow(tmp0,2);
double tmp78 = std::pow(tmp2,2);
double tmp79 = std::pow(tmp1,2);
double tmp80 = -tmp79;
double tmp81 = std::pow(tmp3,2);
double tmp82 = -tmp81;
double tmp83 = tmp77 + tmp78 + tmp80 + tmp82;
double tmp84 = tmp2*tmp1;
double tmp85 = tmp0*tmp3;
double tmp86 = tmp84 + tmp85;
double tmp87 = -(tmp0*tmp1);
double tmp88 = tmp2*tmp3;
double tmp89 = tmp87 + tmp88;
double tmp90 = 1/std::sqrt(tmp71);
double tmp91 = std::sqrt(tmp55);
double tmp92 = fLift(1+_OFF);
double tmp93 = -tmp92;
double tmp94 = fLift(2+_OFF);
double tmp95 = tmp41*tmp94;
double tmp96 = tmp93 + tmp95;
double tmp97 = std::pow(tmp71,-1.5);
double tmp98 = fDrag(1+_OFF);
double tmp99 = -(tmp41*tmp64);
double tmp100 = std::pow(tmp41,2);
double tmp101 = tmp100*tmp65;
double tmp102 = std::pow(tmp59,2);
double tmp103 = tmp102*tmp73;
double tmp104 = tmp98 + tmp99 + tmp101 + tmp103;
double tmp105 = std::sqrt(tmp63);
double tmp106 = -(tmp64*tmp70*tmp72);
double tmp107 = 2*tmp41*tmp65*tmp70*tmp72;
double tmp108 = std::pow(tmp55,-1.5);
double tmp109 = -2*tmp59*tmp73*tmp30*tmp51*tmp108*tmp74;
double tmp110 = tmp106 + tmp107 + tmp109;
double tmp111 = cp(1+_OFF);
double tmp112 = 2*tmp83*tmp43;
double tmp113 = 4*tmp89*tmp45;
double tmp114 = 2*tmp86*tmp46;
double tmp115 = tmp112 + tmp113 + tmp114;
double tmp116 = -(tmp53*tmp108);
double tmp117 = tmp116 + tmp56;
double tmp118 = 2*tmp83*tmp32;
double tmp119 = 4*tmp86*tmp35;
double tmp120 = 2*tmp89*tmp37;
double tmp121 = tmp118 + tmp119 + tmp120;
double tmp122 = std::pow(tmp51,3);
double tmp123 = std::pow(tmp55,-2);
double tmp124 = 2*tmp122*tmp123;
double tmp125 = -2*tmp51*tmp61;
double tmp126 = tmp124 + tmp125;
double tmp127 = 4*tmp86*tmp22;
double tmp128 = 4*tmp89*tmp25;
double tmp129 = tmp83*tmp27;
double tmp130 = tmp127 + tmp128 + tmp129;
double tmp131 = std::pow(tmp111,2);
double tmp132 = std::pow(M_PI,-2);
double tmp133 = fThrust(3+_OFF);
double tmp134 = 1/M_PI;
double tmp135 = fThrust(2+_OFF);
double tmp136 = z(1+_OFF);
double tmp137 = -0.634*tmp59*tmp57*tmp60*tmp51*tmp90*tmp91;
double tmp138 = 0.634*tmp57*tmp104*tmp90*tmp55*tmp105;
double tmp139 = -(tmp64*tmp30*tmp72);
double tmp140 = 2*tmp41*tmp65*tmp30*tmp72;
double tmp141 = -2*tmp59*tmp73*tmp51*tmp40*tmp108*tmp74;
double tmp142 = tmp139 + tmp140 + tmp141;
double tmp143 = -0.634*tmp59*tmp57*tmp60*tmp30*tmp51*tmp40*tmp90*tmp56;
double tmp144 = 0.634*tmp59*tmp57*tmp60*tmp30*tmp51*tmp40*tmp97*tmp91;
double tmp145 = 0.634*tmp57*tmp104*tmp30*tmp53*tmp40*tmp90*tmp61*tmp74;
double tmp146 = 0.634*tmp57*tmp60*tmp30*tmp53*tmp40*tmp90*tmp61*tmp74;
double tmp147 = 1.268*tmp57*tmp104*tmp30*tmp40*tmp90*tmp105;
double tmp148 = -0.634*tmp57*tmp104*tmp30*tmp40*tmp97*tmp55*tmp105;
double tmp149 = 0.634*tmp57*tmp104*tmp30*tmp51*tmp56;
double tmp150 = -0.634*tmp57*tmp60*tmp30*tmp51*tmp56;
double tmp151 = 0.634*tmp59*tmp57*tmp60*tmp30*tmp53*tmp61*tmp74;
double tmp152 = 1.268*tmp59*tmp57*tmp60*tmp30*tmp105;
double tmp153 = 0.634*tmp57*tmp51*tmp91*tmp110;
double tmp154 = tmp149 + tmp150 + tmp151 + tmp152 + tmp153;
double tmp155 = -(tmp0*tmp3);
double tmp156 = tmp84 + tmp155;
double tmp157 = -tmp78;
double tmp158 = tmp77 + tmp157 + tmp79 + tmp82;
double tmp159 = tmp0*tmp2;
double tmp160 = tmp1*tmp3;
double tmp161 = tmp159 + tmp160;
double tmp162 = 1.268*tmp57*tmp96*tmp52*tmp90;
double tmp163 = -0.634*tmp57*tmp96*tmp52*tmp97*tmp55;
double tmp164 = 0.634*tmp57*tmp94*tmp30*tmp70*tmp97*tmp55;
double tmp165 = 0.634*tmp57*tmp96*tmp90*tmp55;
double tmp166 = 0.634*tmp57*tmp40*tmp90*tmp55*tmp105*tmp110;
double tmp167 = tmp162 + tmp143 + tmp144 + tmp163 + tmp164 + tmp165 + tmp145 + tmp146 + tmp147 + tmp148 + tmp166;
double tmp168 = -1.268*tmp57*tmp96*tmp30*tmp40*tmp90;
double tmp169 = -0.634*tmp59*tmp57*tmp60*tmp52*tmp51*tmp90*tmp56;
double tmp170 = 0.634*tmp59*tmp57*tmp60*tmp52*tmp51*tmp97*tmp91;
double tmp171 = 0.634*tmp57*tmp96*tmp30*tmp40*tmp97*tmp55;
double tmp172 = -0.634*tmp57*tmp94*tmp70*tmp40*tmp97*tmp55;
double tmp173 = 0.634*tmp57*tmp104*tmp52*tmp53*tmp90*tmp61*tmp74;
double tmp174 = 0.634*tmp57*tmp60*tmp52*tmp53*tmp90*tmp61*tmp74;
double tmp175 = 1.268*tmp57*tmp104*tmp52*tmp90*tmp105;
double tmp176 = -0.634*tmp57*tmp104*tmp52*tmp97*tmp55*tmp105;
double tmp177 = 0.634*tmp57*tmp30*tmp90*tmp55*tmp105*tmp110;
double tmp178 = 2*tmp132*tmp133*tmp30;
double tmp179 = tmp134*tmp111*tmp135*tmp30*tmp56*tmp136;
double tmp180 = tmp178 + tmp179;
double tmp181 = 1.268*tmp131*tmp180;
double tmp182 = tmp168 + tmp169 + tmp170 + tmp137 + tmp171 + tmp172 + tmp173 + tmp174 + tmp175 + tmp176 + tmp138 + tmp177 + tmp181;
double tmp183 = 4*tmp156*tmp43;
double tmp184 = 4*tmp161*tmp45;
double tmp185 = tmp158*tmp46;
double tmp186 = tmp183 + tmp184 + tmp185;
double tmp187 = 0.634*tmp57*tmp104*tmp53*tmp56;
double tmp188 = 0.634*tmp57*tmp104*tmp91;
double tmp189 = 0.317*tmp59*tmp57*tmp60*tmp55*tmp126*tmp74;
double tmp190 = 1.268*tmp59*tmp57*tmp60*tmp51*tmp105;
double tmp191 = 0.634*tmp57*tmp60*tmp55*tmp117;
double tmp192 = 1.268*tmp59*tmp57*tmp73*tmp51*tmp91*tmp74*tmp117;
double tmp193 = tmp187 + tmp188 + tmp189 + tmp190 + tmp191 + tmp192;
double tmp194 = 4*tmp156*tmp32;
double tmp195 = 2*tmp158*tmp35;
double tmp196 = 2*tmp161*tmp37;
double tmp197 = tmp194 + tmp195 + tmp196;
double tmp198 = 1.268*tmp57*tmp96*tmp30*tmp51*tmp90;
double tmp199 = -0.634*tmp59*tmp57*tmp60*tmp53*tmp40*tmp90*tmp56;
double tmp200 = -0.634*tmp59*tmp57*tmp60*tmp40*tmp90*tmp91;
double tmp201 = 0.317*tmp57*tmp104*tmp40*tmp90*tmp55*tmp126*tmp74;
double tmp202 = 1.268*tmp57*tmp104*tmp51*tmp40*tmp90*tmp105;
double tmp203 = 1.268*tmp59*tmp57*tmp73*tmp40*tmp90*tmp55*tmp117;
double tmp204 = -0.634*tmp57*tmp60*tmp51*tmp40*tmp90*tmp91*tmp74*tmp117;
double tmp205 = tmp198 + tmp199 + tmp200 + tmp201 + tmp202 + tmp203 + tmp204;
double tmp206 = 2*tmp158*tmp22;
double tmp207 = 4*tmp161*tmp25;
double tmp208 = 2*tmp156*tmp27;
double tmp209 = tmp206 + tmp207 + tmp208;
double tmp210 = -1.268*tmp57*tmp96*tmp51*tmp40*tmp90;
double tmp211 = -0.634*tmp59*tmp57*tmp60*tmp30*tmp53*tmp90*tmp56;
double tmp212 = -0.634*tmp59*tmp57*tmp60*tmp30*tmp90*tmp91;
double tmp213 = 0.317*tmp57*tmp104*tmp30*tmp90*tmp55*tmp126*tmp74;
double tmp214 = 1.268*tmp57*tmp104*tmp30*tmp51*tmp90*tmp105;
double tmp215 = 1.268*tmp59*tmp57*tmp73*tmp30*tmp90*tmp55*tmp117;
double tmp216 = -0.634*tmp57*tmp60*tmp30*tmp51*tmp90*tmp91*tmp74*tmp117;
double tmp217 = 2*tmp132*tmp133*tmp51;
double tmp218 = tmp134*tmp111*tmp135*tmp51*tmp56*tmp136;
double tmp219 = tmp217 + tmp218;
double tmp220 = 1.268*tmp131*tmp219;
double tmp221 = tmp210 + tmp211 + tmp212 + tmp213 + tmp214 + tmp215 + tmp216 + tmp220;
double tmp222 = 0.634*tmp57*tmp104*tmp51*tmp40*tmp56;
double tmp223 = -0.634*tmp57*tmp60*tmp51*tmp40*tmp56;
double tmp224 = 0.634*tmp59*tmp57*tmp60*tmp53*tmp40*tmp61*tmp74;
double tmp225 = 1.268*tmp59*tmp57*tmp60*tmp40*tmp105;
double tmp226 = 0.634*tmp57*tmp51*tmp91*tmp142;
double tmp227 = tmp222 + tmp223 + tmp224 + tmp225 + tmp226;
double tmp228 = 1.268*tmp57*tmp96*tmp30*tmp40*tmp90;
double tmp229 = -0.634*tmp59*tmp57*tmp60*tmp51*tmp54*tmp90*tmp56;
double tmp230 = 0.634*tmp59*tmp57*tmp60*tmp51*tmp54*tmp97*tmp91;
double tmp231 = 0.634*tmp57*tmp94*tmp52*tmp97*tmp55;
double tmp232 = -0.634*tmp57*tmp96*tmp30*tmp40*tmp97*tmp55;
double tmp233 = 0.634*tmp57*tmp104*tmp53*tmp54*tmp90*tmp61*tmp74;
double tmp234 = 0.634*tmp57*tmp60*tmp53*tmp54*tmp90*tmp61*tmp74;
double tmp235 = 1.268*tmp57*tmp104*tmp54*tmp90*tmp105;
double tmp236 = -0.634*tmp57*tmp104*tmp54*tmp97*tmp55*tmp105;
double tmp237 = 0.634*tmp57*tmp40*tmp90*tmp55*tmp105*tmp142;
double tmp238 = tmp228 + tmp229 + tmp230 + tmp137 + tmp231 + tmp232 + tmp233 + tmp234 + tmp235 + tmp236 + tmp138 + tmp237;
double tmp239 = -1.268*tmp57*tmp96*tmp54*tmp90;
double tmp240 = -0.634*tmp57*tmp94*tmp30*tmp40*tmp97*tmp55;
double tmp241 = 0.634*tmp57*tmp96*tmp54*tmp97*tmp55;
double tmp242 = -0.634*tmp57*tmp96*tmp90*tmp55;
double tmp243 = 0.634*tmp57*tmp30*tmp90*tmp55*tmp105*tmp142;
double tmp244 = 2*tmp132*tmp133*tmp40;
double tmp245 = tmp134*tmp111*tmp135*tmp40*tmp56*tmp136;
double tmp246 = tmp244 + tmp245;
double tmp247 = 1.268*tmp131*tmp246;
double tmp248 = tmp239 + tmp143 + tmp144 + tmp240 + tmp241 + tmp242 + tmp145 + tmp146 + tmp147 + tmp148 + tmp243 + tmp247;
double tmp249 = tmp0*tmp1;
double tmp250 = tmp249 + tmp88;
double tmp251 = -(tmp0*tmp2);
double tmp252 = tmp251 + tmp160;
double tmp253 = tmp77 + tmp157 + tmp80 + tmp81;
double tmp254 = 4*tmp250*tmp43;
double tmp255 = 2*tmp253*tmp45;
double tmp256 = 2*tmp252*tmp46;
double tmp257 = tmp254 + tmp255 + tmp256;
double tmp258 = 4*tmp250*tmp32;
double tmp259 = 4*tmp252*tmp35;
double tmp260 = tmp253*tmp37;
double tmp261 = tmp258 + tmp259 + tmp260;
double tmp262 = 4*tmp252*tmp22;
double tmp263 = 2*tmp253*tmp25;
double tmp264 = 2*tmp250*tmp27;
double tmp265 = tmp262 + tmp263 + tmp264;
double tmp266 = ibd(2+_OFF);
double tmp267 = ibod(1+_OFF);
double tmp268 = ibd(3+_OFF);
double tmp269 = ibod(2+_OFF);
double tmp270 = ibod(3+_OFF);
double tmp271 = ibd(1+_OFF);
double tmp272 = cp(3+_OFF);
double tmp273 = mRoll(2+_OFF);
double tmp274 = mRoll(3+_OFF);
double tmp275 = x(37+_OFF);
double tmp276 = mRoll(4+_OFF);
double tmp277 = x(39+_OFF);
double tmp278 = tmp271*tmp266*tmp268;
double tmp279 = std::pow(tmp267,2);
double tmp280 = -(tmp266*tmp279);
double tmp281 = std::pow(tmp269,2);
double tmp282 = -(tmp268*tmp281);
double tmp283 = 2*tmp267*tmp269*tmp270;
double tmp284 = std::pow(tmp270,2);
double tmp285 = -(tmp271*tmp284);
double tmp286 = tmp278 + tmp280 + tmp282 + tmp283 + tmp285;
double tmp287 = 1/tmp286;
double tmp288 = cBar(1+_OFF);
double tmp289 = mPitch(3+_OFF);
double tmp290 = mPitch(4+_OFF);
double tmp291 = x(38+_OFF);
double tmp292 = mYaw(2+_OFF);
double tmp293 = mYaw(3+_OFF);
double tmp294 = tmp273*tmp30*tmp51*tmp108*tmp74;
double tmp295 = -(tmp272*tmp274*tmp30*tmp108*tmp275)/2.;
double tmp296 = (tmp272*tmp276*tmp30*tmp108*tmp277)/2.;
double tmp297 = tmp294 + tmp295 + tmp296;
double tmp298 = 0.634*tmp57*tmp272*tmp55*tmp297;
double tmp299 = -(tmp59*tmp273);
double tmp300 = (tmp272*tmp274*tmp56*tmp275)/2.;
double tmp301 = -(tmp272*tmp276*tmp56*tmp277)/2.;
double tmp302 = mRoll(1+_OFF);
double tmp303 = z(2+_OFF);
double tmp304 = tmp302*tmp303;
double tmp305 = tmp299 + tmp300 + tmp301 + tmp304;
double tmp306 = 1.268*tmp57*tmp272*tmp30*tmp305;
double tmp307 = tmp298 + tmp306;
double tmp308 = tmp289*tmp70*tmp72;
double tmp309 = -(tmp288*tmp290*tmp30*tmp108*tmp291)/2.;
double tmp310 = tmp308 + tmp309;
double tmp311 = 0.634*tmp288*tmp57*tmp55*tmp310;
double tmp312 = mPitch(1+_OFF);
double tmp313 = -tmp312;
double tmp314 = tmp41*tmp289;
double tmp315 = (tmp288*tmp290*tmp56*tmp291)/2.;
double tmp316 = mPitch(2+_OFF);
double tmp317 = z(3+_OFF);
double tmp318 = -(tmp316*tmp317);
double tmp319 = tmp313 + tmp314 + tmp315 + tmp318;
double tmp320 = 1.268*tmp288*tmp57*tmp30*tmp319;
double tmp321 = tmp311 + tmp320;
double tmp322 = tmp267*tmp269;
double tmp323 = -(tmp271*tmp270);
double tmp324 = tmp322 + tmp323;
double tmp325 = -(tmp292*tmp30*tmp51*tmp108*tmp74);
double tmp326 = -(tmp272*tmp293*tmp30*tmp108*tmp277)/2.;
double tmp327 = tmp325 + tmp326;
double tmp328 = 0.634*tmp57*tmp272*tmp55*tmp327;
double tmp329 = tmp59*tmp292;
double tmp330 = (tmp272*tmp293*tmp56*tmp277)/2.;
double tmp331 = mYaw(1+_OFF);
double tmp332 = z(4+_OFF);
double tmp333 = -(tmp331*tmp332);
double tmp334 = tmp329 + tmp330 + tmp333;
double tmp335 = 1.268*tmp57*tmp272*tmp30*tmp334;
double tmp336 = tmp328 + tmp335;
double tmp337 = -(tmp268*tmp269);
double tmp338 = tmp267*tmp270;
double tmp339 = tmp337 + tmp338;
double tmp340 = -(tmp266*tmp267);
double tmp341 = tmp269*tmp270;
double tmp342 = tmp340 + tmp341;
double tmp343 = tmp271*tmp266;
double tmp344 = -tmp281;
double tmp345 = tmp343 + tmp344;
double tmp346 = -(tmp273*tmp74*tmp117);
double tmp347 = -(tmp272*tmp274*tmp51*tmp108*tmp275)/2.;
double tmp348 = (tmp272*tmp276*tmp51*tmp108*tmp277)/2.;
double tmp349 = tmp346 + tmp347 + tmp348;
double tmp350 = 0.634*tmp57*tmp272*tmp55*tmp349;
double tmp351 = 1.268*tmp57*tmp272*tmp51*tmp305;
double tmp352 = tmp350 + tmp351;
double tmp353 = tmp271*tmp268;
double tmp354 = -tmp279;
double tmp355 = tmp353 + tmp354;
double tmp356 = std::pow(tmp288,2);
double tmp357 = -0.317*tmp356*tmp57*tmp290*tmp51*tmp56*tmp291;
double tmp358 = 1.268*tmp288*tmp57*tmp51*tmp319;
double tmp359 = tmp357 + tmp358;
double tmp360 = tmp292*tmp74*tmp117;
double tmp361 = -(tmp272*tmp293*tmp51*tmp108*tmp277)/2.;
double tmp362 = tmp360 + tmp361;
double tmp363 = 0.634*tmp57*tmp272*tmp55*tmp362;
double tmp364 = 1.268*tmp57*tmp272*tmp51*tmp334;
double tmp365 = tmp363 + tmp364;
double tmp366 = tmp266*tmp268;
double tmp367 = -tmp284;
double tmp368 = tmp366 + tmp367;
double tmp369 = tmp273*tmp51*tmp40*tmp108*tmp74;
double tmp370 = -(tmp272*tmp274*tmp40*tmp108*tmp275)/2.;
double tmp371 = (tmp272*tmp276*tmp40*tmp108*tmp277)/2.;
double tmp372 = tmp369 + tmp370 + tmp371;
double tmp373 = 0.634*tmp57*tmp272*tmp55*tmp372;
double tmp374 = 1.268*tmp57*tmp272*tmp40*tmp305;
double tmp375 = tmp373 + tmp374;
double tmp376 = tmp289*tmp30*tmp72;
double tmp377 = -(tmp288*tmp290*tmp40*tmp108*tmp291)/2.;
double tmp378 = tmp376 + tmp377;
double tmp379 = 0.634*tmp288*tmp57*tmp55*tmp378;
double tmp380 = 1.268*tmp288*tmp57*tmp40*tmp319;
double tmp381 = tmp379 + tmp380;
double tmp382 = -(tmp292*tmp51*tmp40*tmp108*tmp74);
double tmp383 = -(tmp272*tmp293*tmp40*tmp108*tmp277)/2.;
double tmp384 = tmp382 + tmp383;
double tmp385 = 0.634*tmp57*tmp272*tmp55*tmp384;
double tmp386 = 1.268*tmp57*tmp272*tmp40*tmp334;
double tmp387 = tmp385 + tmp386;
double tmp388 = tmp342*tmp287*tmp307;
double tmp389 = tmp324*tmp287*tmp321;
double tmp390 = tmp345*tmp287*tmp336;
double tmp391 = tmp388 + tmp389 + tmp390;
double tmp392 = tmp339*tmp287*tmp307;
double tmp393 = tmp355*tmp287*tmp321;
double tmp394 = tmp324*tmp287*tmp336;
double tmp395 = tmp392 + tmp393 + tmp394;
double tmp396 = tmp368*tmp287*tmp307;
double tmp397 = tmp339*tmp287*tmp321;
double tmp398 = tmp342*tmp287*tmp336;
double tmp399 = tmp396 + tmp397 + tmp398;
double tmp400 = tmp342*tmp287*tmp352;
double tmp401 = tmp324*tmp287*tmp359;
double tmp402 = tmp345*tmp287*tmp365;
double tmp403 = tmp400 + tmp401 + tmp402;
double tmp404 = tmp339*tmp287*tmp352;
double tmp405 = tmp355*tmp287*tmp359;
double tmp406 = tmp324*tmp287*tmp365;
double tmp407 = tmp404 + tmp405 + tmp406;
double tmp408 = tmp368*tmp287*tmp352;
double tmp409 = tmp339*tmp287*tmp359;
double tmp410 = tmp342*tmp287*tmp365;
double tmp411 = tmp408 + tmp409 + tmp410;
double tmp412 = tmp342*tmp287*tmp375;
double tmp413 = tmp324*tmp287*tmp381;
double tmp414 = tmp345*tmp287*tmp387;
double tmp415 = tmp412 + tmp413 + tmp414;
double tmp416 = tmp339*tmp287*tmp375;
double tmp417 = tmp355*tmp287*tmp381;
double tmp418 = tmp324*tmp287*tmp387;
double tmp419 = tmp416 + tmp417 + tmp418;
double tmp420 = tmp368*tmp287*tmp375;
double tmp421 = tmp339*tmp287*tmp381;
double tmp422 = tmp342*tmp287*tmp387;
double tmp423 = tmp420 + tmp421 + tmp422;
J(1+_OFF,1+_OFF) = -(tmp76*tmp115*tmp154) - tmp76*tmp121*tmp167 - tmp76*tmp130*tmp182;
J(1+_OFF,2+_OFF) = -(tmp76*tmp115*tmp193) - tmp76*tmp121*tmp205 - tmp76*tmp130*tmp221;
J(1+_OFF,3+_OFF) = -(tmp76*tmp115*tmp227) - tmp76*tmp121*tmp238 - tmp76*tmp130*tmp248;
J(2+_OFF,1+_OFF) = -(tmp76*tmp186*tmp154) - tmp76*tmp197*tmp167 - tmp76*tmp209*tmp182;
J(2+_OFF,2+_OFF) = -(tmp76*tmp186*tmp193) - tmp76*tmp197*tmp205 - tmp76*tmp209*tmp221;
J(2+_OFF,3+_OFF) = -(tmp76*tmp186*tmp227) - tmp76*tmp197*tmp238 - tmp76*tmp209*tmp248;
J(3+_OFF,1+_OFF) = -(tmp76*tmp257*tmp154) - tmp76*tmp261*tmp167 - tmp76*tmp265*tmp182;
J(3+_OFF,2+_OFF) = -(tmp76*tmp257*tmp193) - tmp76*tmp261*tmp205 - tmp76*tmp265*tmp221;
J(3+_OFF,3+_OFF) = -(tmp76*tmp257*tmp227) - tmp76*tmp261*tmp238 - tmp76*tmp265*tmp248;
J(4+_OFF,1+_OFF) = -(tmp121*tmp391) - tmp115*tmp395 - tmp130*tmp399;
J(4+_OFF,2+_OFF) = -(tmp121*tmp403) - tmp115*tmp407 - tmp130*tmp411;
J(4+_OFF,3+_OFF) = -(tmp121*tmp415) - tmp115*tmp419 - tmp130*tmp423;
J(5+_OFF,1+_OFF) = -(tmp197*tmp391) - tmp186*tmp395 - tmp209*tmp399;
J(5+_OFF,2+_OFF) = -(tmp197*tmp403) - tmp186*tmp407 - tmp209*tmp411;
J(5+_OFF,3+_OFF) = -(tmp197*tmp415) - tmp186*tmp419 - tmp209*tmp423;
J(6+_OFF,1+_OFF) = -(tmp261*tmp391) - tmp257*tmp395 - tmp265*tmp399;
J(6+_OFF,2+_OFF) = -(tmp261*tmp403) - tmp257*tmp407 - tmp265*tmp411;
J(6+_OFF,3+_OFF) = -(tmp261*tmp415) - tmp257*tmp419 - tmp265*tmp423;
