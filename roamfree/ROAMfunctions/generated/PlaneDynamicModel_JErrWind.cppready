double tmp0 = x(4+_OFF);
double tmp1 = x(6+_OFF);
double tmp2 = x(5+_OFF);
double tmp3 = x(7+_OFF);
double tmp4 = wind(1+_OFF);
double tmp5 = tmp2*tmp3;
double tmp6 = wind(2+_OFF);
double tmp7 = wind(3+_OFF);
double tmp8 = std::pow(tmp0,2);
double tmp9 = std::pow(tmp2,2);
double tmp10 = std::pow(tmp1,2);
double tmp11 = -tmp10;
double tmp12 = std::pow(tmp3,2);
double tmp13 = set1(2+_OFF);
double tmp14 = 1/tmp13;
double tmp15 = x(10+_OFF);
double tmp16 = -tmp9;
double tmp17 = tmp2*tmp1;
double tmp18 = tmp0*tmp3;
double tmp19 = tmp17 + tmp18;
double tmp20 = -2*tmp6*tmp19;
double tmp21 = -(tmp0*tmp1);
double tmp22 = tmp21 + tmp5;
double tmp23 = -2*tmp7*tmp22;
double tmp24 = -tmp12;
double tmp25 = tmp8 + tmp9 + tmp11 + tmp24;
double tmp26 = -(tmp4*tmp25);
double tmp27 = x(8+_OFF);
double tmp28 = tmp20 + tmp23 + tmp26 + tmp27;
double tmp29 = -(tmp0*tmp3);
double tmp30 = tmp17 + tmp29;
double tmp31 = tmp1*tmp3;
double tmp32 = tmp0*tmp1;
double tmp33 = tmp32 + tmp5;
double tmp34 = -2*tmp4*tmp33;
double tmp35 = -(tmp0*tmp2);
double tmp36 = tmp35 + tmp31;
double tmp37 = -2*tmp6*tmp36;
double tmp38 = tmp8 + tmp16 + tmp11 + tmp12;
double tmp39 = -(tmp7*tmp38);
double tmp40 = tmp34 + tmp37 + tmp39 + tmp15;
double tmp41 = -2*tmp4*tmp30;
double tmp42 = tmp0*tmp2;
double tmp43 = tmp42 + tmp31;
double tmp44 = -2*tmp7*tmp43;
double tmp45 = tmp8 + tmp16 + tmp10 + tmp24;
double tmp46 = -(tmp6*tmp45);
double tmp47 = x(9+_OFF);
double tmp48 = tmp41 + tmp44 + tmp46 + tmp47;
double tmp49 = std::pow(tmp28,2);
double tmp50 = std::pow(tmp40,2);
double tmp51 = set1(3+_OFF);
double tmp52 = set2(24+_OFF);
double tmp53 = set1(1+_OFF);
double tmp54 = x(3+_OFF);
double tmp55 = tmp53 + tmp54;
double tmp56 = -0.006500000000000001*tmp14*tmp55;
double tmp57 = 1 + tmp56;
double tmp58 = std::pow(tmp57,4.2561);
double tmp59 = -tmp8;
double tmp60 = tmp59 + tmp16 + tmp10 + tmp12;
double tmp61 = 2*tmp60*tmp28;
double tmp62 = -4*tmp30*tmp48;
double tmp63 = -4*tmp33*tmp40;
double tmp64 = tmp61 + tmp62 + tmp63;
double tmp65 = tmp49 + tmp50;
double tmp66 = 1/std::sqrt(tmp65);
double tmp67 = std::pow(tmp48,2);
double tmp68 = tmp49 + tmp67 + tmp50;
double tmp69 = 1/std::sqrt(tmp68);
double tmp70 = tmp48*tmp69;
double tmp71 = std::asin(tmp70);
double tmp72 = set2(8+_OFF);
double tmp73 = -(tmp4*tmp8);
double tmp74 = -(tmp4*tmp9);
double tmp75 = 2*tmp7*tmp0*tmp1;
double tmp76 = -2*tmp6*tmp2*tmp1;
double tmp77 = tmp4*tmp10;
double tmp78 = -2*tmp6*tmp0*tmp3;
double tmp79 = -2*tmp7*tmp2*tmp3;
double tmp80 = tmp4*tmp12;
double tmp81 = tmp73 + tmp74 + tmp75 + tmp76 + tmp77 + tmp78 + tmp79 + tmp80 + tmp27;
double tmp82 = tmp6*tmp8;
double tmp83 = 2*tmp7*tmp0*tmp2;
double tmp84 = -(tmp6*tmp9);
double tmp85 = 2*tmp4*tmp2*tmp1;
double tmp86 = tmp6*tmp10;
double tmp87 = -2*tmp4*tmp0*tmp3;
double tmp88 = 2*tmp7*tmp1*tmp3;
double tmp89 = -(tmp6*tmp12);
double tmp90 = -tmp47;
double tmp91 = tmp82 + tmp83 + tmp84 + tmp85 + tmp86 + tmp87 + tmp88 + tmp89 + tmp90;
double tmp92 = std::sqrt(tmp68);
double tmp93 = set2(9+_OFF);
double tmp94 = std::atan2(tmp40,tmp28);
double tmp95 = set2(10+_OFF);
double tmp96 = tmp94*tmp95;
double tmp97 = tmp93 + tmp96;
double tmp98 = tmp7*tmp8;
double tmp99 = -2*tmp6*tmp0*tmp2;
double tmp100 = -(tmp7*tmp9);
double tmp101 = 2*tmp4*tmp0*tmp1;
double tmp102 = -(tmp7*tmp10);
double tmp103 = 2*tmp4*tmp2*tmp3;
double tmp104 = 2*tmp6*tmp1*tmp3;
double tmp105 = tmp7*tmp12;
double tmp106 = -tmp15;
double tmp107 = tmp98 + tmp99 + tmp100 + tmp101 + tmp102 + tmp103 + tmp104 + tmp105 + tmp106;
double tmp108 = tmp61 + tmp63;
double tmp109 = std::pow(tmp65,-1.5);
double tmp110 = 1/tmp65;
double tmp111 = 1/tmp68;
double tmp112 = set2(4+_OFF);
double tmp113 = set2(5+_OFF);
double tmp114 = tmp94*tmp113;
double tmp115 = std::pow(tmp94,2);
double tmp116 = set2(6+_OFF);
double tmp117 = tmp115*tmp116;
double tmp118 = std::pow(tmp71,2);
double tmp119 = set2(7+_OFF);
double tmp120 = tmp118*tmp119;
double tmp121 = tmp112 + tmp114 + tmp117 + tmp120;
double tmp122 = -(tmp67*tmp111);
double tmp123 = 1 + tmp122;
double tmp124 = std::sqrt(tmp123);
double tmp125 = 1/std::sqrt(tmp123);
double tmp126 = -2*tmp33*tmp28*tmp110;
double tmp127 = 2*tmp4*tmp33;
double tmp128 = 2*tmp6*tmp36;
double tmp129 = tmp7*tmp38;
double tmp130 = tmp127 + tmp128 + tmp129 + tmp106;
double tmp131 = tmp60*tmp130*tmp110;
double tmp132 = tmp126 + tmp131;
double tmp133 = std::pow(tmp68,-1.5);
double tmp134 = -(tmp48*tmp64*tmp133)/2.;
double tmp135 = -2*tmp30*tmp69;
double tmp136 = tmp134 + tmp135;
double tmp137 = set2(23+_OFF);
double tmp138 = set2(26+_OFF);
double tmp139 = 1/tmp138;
double tmp140 = -4*tmp19*tmp28;
double tmp141 = tmp59 + tmp9 + tmp11 + tmp12;
double tmp142 = 2*tmp141*tmp48;
double tmp143 = -4*tmp36*tmp40;
double tmp144 = tmp140 + tmp142 + tmp143;
double tmp145 = -2*tmp0*tmp3;
double tmp146 = tmp140 + tmp143;
double tmp147 = std::pow(tmp68,-2);
double tmp148 = -2*tmp2*tmp1;
double tmp149 = tmp148 + tmp145;
double tmp150 = -2*tmp36*tmp28*tmp110;
double tmp151 = -2*tmp19*tmp130*tmp110;
double tmp152 = tmp150 + tmp151;
double tmp153 = -(tmp48*tmp144*tmp133)/2.;
double tmp154 = tmp141*tmp69;
double tmp155 = tmp153 + tmp154;
double tmp156 = std::pow(tmp137,2);
double tmp157 = std::pow(M_PI,-2);
double tmp158 = set2(3+_OFF);
double tmp159 = 1/M_PI;
double tmp160 = set2(2+_OFF);
double tmp161 = z(1+_OFF);
double tmp162 = -4*tmp22*tmp28;
double tmp163 = -4*tmp43*tmp48;
double tmp164 = tmp59 + tmp9 + tmp10 + tmp24;
double tmp165 = 2*tmp164*tmp40;
double tmp166 = tmp162 + tmp163 + tmp165;
double tmp167 = 2*tmp1*tmp3;
double tmp168 = 2*tmp0*tmp1;
double tmp169 = tmp162 + tmp165;
double tmp170 = -2*tmp2*tmp3;
double tmp171 = tmp168 + tmp170;
double tmp172 = tmp164*tmp28*tmp110;
double tmp173 = -2*tmp22*tmp130*tmp110;
double tmp174 = tmp172 + tmp173;
double tmp175 = -(tmp48*tmp166*tmp133)/2.;
double tmp176 = -2*tmp43*tmp69;
double tmp177 = tmp175 + tmp176;
double tmp178 = tmp67*tmp64*tmp147;
double tmp179 = 4*tmp30*tmp48*tmp111;
double tmp180 = tmp178 + tmp179;
double tmp181 = -(tmp6*tmp8);
double tmp182 = -2*tmp7*tmp0*tmp2;
double tmp183 = tmp6*tmp9;
double tmp184 = -2*tmp4*tmp2*tmp1;
double tmp185 = -(tmp6*tmp10);
double tmp186 = 2*tmp4*tmp0*tmp3;
double tmp187 = -2*tmp7*tmp1*tmp3;
double tmp188 = tmp6*tmp12;
double tmp189 = tmp181 + tmp182 + tmp183 + tmp184 + tmp185 + tmp186 + tmp187 + tmp188 + tmp47;
double tmp190 = tmp113*tmp132;
double tmp191 = 2*tmp94*tmp116*tmp132;
double tmp192 = 2*tmp71*tmp119*tmp125*tmp136;
double tmp193 = tmp190 + tmp191 + tmp192;
double tmp194 = tmp67*tmp144*tmp147;
double tmp195 = -2*tmp141*tmp48*tmp111;
double tmp196 = tmp194 + tmp195;
double tmp197 = tmp113*tmp152;
double tmp198 = 2*tmp94*tmp116*tmp152;
double tmp199 = 2*tmp71*tmp119*tmp125*tmp155;
double tmp200 = tmp197 + tmp198 + tmp199;
double tmp201 = -2*tmp0*tmp2;
double tmp202 = tmp67*tmp166*tmp147;
double tmp203 = 4*tmp43*tmp48*tmp111;
double tmp204 = tmp202 + tmp203;
double tmp205 = tmp113*tmp174;
double tmp206 = 2*tmp94*tmp116*tmp174;
double tmp207 = 2*tmp71*tmp119*tmp125*tmp177;
double tmp208 = tmp205 + tmp206 + tmp207;
double tmp209 = -(tmp7*tmp8);
double tmp210 = 2*tmp6*tmp0*tmp2;
double tmp211 = tmp7*tmp9;
double tmp212 = -2*tmp4*tmp0*tmp1;
double tmp213 = tmp7*tmp10;
double tmp214 = -2*tmp4*tmp2*tmp3;
double tmp215 = -2*tmp6*tmp1*tmp3;
double tmp216 = -(tmp7*tmp12);
double tmp217 = tmp209 + tmp210 + tmp211 + tmp212 + tmp213 + tmp214 + tmp215 + tmp216 + tmp15;
double tmp218 = 2*tmp2*tmp1;
double tmp219 = tmp218 + tmp145;
double tmp220 = -2*tmp0*tmp1;
double tmp221 = tmp220 + tmp170;
double tmp222 = 2*tmp0*tmp2;
double tmp223 = -2*tmp1*tmp3;
double tmp224 = tmp222 + tmp223;
double tmp225 = tmp222 + tmp167;
double tmp226 = set2(28+_OFF);
double tmp227 = set2(29+_OFF);
double tmp228 = set2(25+_OFF);
double tmp229 = set2(12+_OFF);
double tmp230 = set2(13+_OFF);
double tmp231 = x(11+_OFF);
double tmp232 = set2(14+_OFF);
double tmp233 = x(13+_OFF);
double tmp234 = set2(30+_OFF);
double tmp235 = set2(27+_OFF);
double tmp236 = tmp235*tmp226*tmp227;
double tmp237 = std::pow(tmp234,2);
double tmp238 = -(tmp226*tmp237);
double tmp239 = tmp236 + tmp238;
double tmp240 = 1/tmp239;
double tmp241 = set2(21+_OFF);
double tmp242 = set2(20+_OFF);
double tmp243 = tmp71*tmp229;
double tmp244 = (tmp230*tmp228*tmp69*tmp231)/2.;
double tmp245 = (tmp232*tmp228*tmp69*tmp233)/2.;
double tmp246 = set2(11+_OFF);
double tmp247 = z(2+_OFF);
double tmp248 = tmp246*tmp247;
double tmp249 = tmp243 + tmp244 + tmp245 + tmp248;
double tmp250 = tmp71*tmp241;
double tmp251 = (tmp242*tmp228*tmp69*tmp233)/2.;
double tmp252 = set2(19+_OFF);
double tmp253 = z(4+_OFF);
double tmp254 = tmp252*tmp253;
double tmp255 = tmp250 + tmp251 + tmp254;
double tmp256 = set2(22+_OFF);
double tmp257 = set2(18+_OFF);
double tmp258 = set2(17+_OFF);
double tmp259 = x(12+_OFF);
double tmp260 = tmp235*tmp227;
double tmp261 = -tmp237;
double tmp262 = tmp260 + tmp261;
double tmp263 = set2(15+_OFF);
double tmp264 = tmp94*tmp257;
double tmp265 = (tmp258*tmp256*tmp69*tmp259)/2.;
double tmp266 = set2(16+_OFF);
double tmp267 = z(3+_OFF);
double tmp268 = tmp266*tmp267;
double tmp269 = tmp263 + tmp264 + tmp265 + tmp268;
double tmp270 = tmp229*tmp125*tmp136;
double tmp271 = -(tmp230*tmp228*tmp64*tmp133*tmp231)/4.;
double tmp272 = -(tmp232*tmp228*tmp64*tmp133*tmp233)/4.;
double tmp273 = tmp270 + tmp271 + tmp272;
double tmp274 = 0.0017418568193694477*tmp14*tmp51*tmp52*tmp228*tmp58*tmp68*tmp273;
double tmp275 = 0.0017418568193694477*tmp14*tmp51*tmp52*tmp228*tmp58*tmp64*tmp249;
double tmp276 = tmp274 + tmp275;
double tmp277 = tmp241*tmp125*tmp136;
double tmp278 = -(tmp242*tmp228*tmp64*tmp133*tmp233)/4.;
double tmp279 = tmp277 + tmp278;
double tmp280 = 0.0017418568193694477*tmp14*tmp51*tmp52*tmp228*tmp58*tmp68*tmp279;
double tmp281 = 0.0017418568193694477*tmp14*tmp51*tmp52*tmp228*tmp58*tmp64*tmp255;
double tmp282 = tmp280 + tmp281;
double tmp283 = tmp229*tmp125*tmp155;
double tmp284 = -(tmp230*tmp228*tmp144*tmp133*tmp231)/4.;
double tmp285 = -(tmp232*tmp228*tmp144*tmp133*tmp233)/4.;
double tmp286 = tmp283 + tmp284 + tmp285;
double tmp287 = 0.0017418568193694477*tmp14*tmp51*tmp52*tmp228*tmp58*tmp68*tmp286;
double tmp288 = 0.0017418568193694477*tmp14*tmp51*tmp52*tmp228*tmp58*tmp144*tmp249;
double tmp289 = tmp287 + tmp288;
double tmp290 = tmp241*tmp125*tmp155;
double tmp291 = -(tmp242*tmp228*tmp144*tmp133*tmp233)/4.;
double tmp292 = tmp290 + tmp291;
double tmp293 = 0.0017418568193694477*tmp14*tmp51*tmp52*tmp228*tmp58*tmp68*tmp292;
double tmp294 = 0.0017418568193694477*tmp14*tmp51*tmp52*tmp228*tmp58*tmp144*tmp255;
double tmp295 = tmp293 + tmp294;
double tmp296 = tmp229*tmp125*tmp177;
double tmp297 = -(tmp230*tmp228*tmp166*tmp133*tmp231)/4.;
double tmp298 = -(tmp232*tmp228*tmp166*tmp133*tmp233)/4.;
double tmp299 = tmp296 + tmp297 + tmp298;
double tmp300 = 0.0017418568193694477*tmp14*tmp51*tmp52*tmp228*tmp58*tmp68*tmp299;
double tmp301 = 0.0017418568193694477*tmp14*tmp51*tmp52*tmp228*tmp58*tmp166*tmp249;
double tmp302 = tmp300 + tmp301;
double tmp303 = tmp241*tmp125*tmp177;
double tmp304 = -(tmp242*tmp228*tmp166*tmp133*tmp233)/4.;
double tmp305 = tmp303 + tmp304;
double tmp306 = 0.0017418568193694477*tmp14*tmp51*tmp52*tmp228*tmp58*tmp68*tmp305;
double tmp307 = 0.0017418568193694477*tmp14*tmp51*tmp52*tmp228*tmp58*tmp166*tmp255;
double tmp308 = tmp306 + tmp307;
J(1+_OFF,1+_OFF) = -(tmp139*(0.0017418568193694477*tmp14*tmp51*tmp97*tmp52*tmp58*tmp107*tmp64*tmp66 + 0.0008709284096847238*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp81*tmp91*tmp64*tmp66*tmp69 - 0.0008709284096847238*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp81*tmp91*tmp108*tmp109*tmp92 + 0.0017418568193694477*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp219*tmp81*tmp66*tmp92 + 0.0017418568193694477*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp60*tmp91*tmp66*tmp92 - 0.0008709284096847238*tmp14*tmp51*tmp97*tmp52*tmp58*tmp107*tmp108*tmp109*tmp68 + 0.0017418568193694477*tmp14*tmp51*tmp97*tmp52*tmp58*(tmp168 + 2*tmp2*tmp3)*tmp66*tmp68 + 0.0017418568193694477*tmp14*tmp51*tmp95*tmp52*tmp58*tmp107*tmp66*tmp68*tmp132 + 0.0008709284096847238*tmp14*tmp51*tmp121*tmp52*tmp58*tmp81*tmp66*tmp68*tmp180*tmp125 + 0.0017418568193694477*tmp14*tmp51*tmp121*tmp52*tmp58*tmp81*tmp64*tmp66*tmp124 - 0.0008709284096847238*tmp14*tmp51*tmp121*tmp52*tmp58*tmp81*tmp108*tmp109*tmp68*tmp124 + 0.0017418568193694477*tmp14*tmp51*tmp121*tmp52*tmp58*tmp60*tmp66*tmp68*tmp124 + 0.0017418568193694477*tmp14*tmp51*tmp72*tmp52*tmp58*tmp81*tmp91*tmp66*tmp92*tmp125*tmp136 + 0.0017418568193694477*tmp14*tmp51*tmp52*tmp58*tmp81*tmp66*tmp68*tmp124*tmp193 + 0.0034837136387388954*tmp14*tmp51*tmp156*tmp58*(tmp157*tmp158*tmp64 + (tmp159*tmp160*tmp137*tmp64*tmp69*tmp161)/2.)));
J(1+_OFF,2+_OFF) = -(tmp139*(0.0017418568193694477*tmp14*tmp51*tmp97*tmp52*tmp58*tmp107*tmp144*tmp66 + 0.0008709284096847238*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp81*tmp91*tmp144*tmp66*tmp69 - 0.0008709284096847238*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp81*tmp91*tmp146*tmp109*tmp92 + 0.0017418568193694477*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp45*tmp81*tmp66*tmp92 + 0.0017418568193694477*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp149*tmp91*tmp66*tmp92 - 0.0008709284096847238*tmp14*tmp51*tmp97*tmp52*tmp58*tmp107*tmp146*tmp109*tmp68 + 0.0017418568193694477*tmp14*tmp51*tmp97*tmp52*tmp58*(tmp201 + tmp167)*tmp66*tmp68 + 0.0017418568193694477*tmp14*tmp51*tmp95*tmp52*tmp58*tmp107*tmp66*tmp68*tmp152 + 0.0008709284096847238*tmp14*tmp51*tmp121*tmp52*tmp58*tmp81*tmp66*tmp68*tmp196*tmp125 + 0.0017418568193694477*tmp14*tmp51*tmp121*tmp52*tmp58*tmp81*tmp144*tmp66*tmp124 - 0.0008709284096847238*tmp14*tmp51*tmp121*tmp52*tmp58*tmp81*tmp146*tmp109*tmp68*tmp124 + 0.0017418568193694477*tmp14*tmp51*tmp121*tmp52*tmp58*tmp149*tmp66*tmp68*tmp124 + 0.0017418568193694477*tmp14*tmp51*tmp72*tmp52*tmp58*tmp81*tmp91*tmp66*tmp92*tmp125*tmp155 + 0.0017418568193694477*tmp14*tmp51*tmp52*tmp58*tmp81*tmp66*tmp68*tmp124*tmp200 + 0.0034837136387388954*tmp14*tmp51*tmp156*tmp58*(tmp157*tmp158*tmp144 + (tmp159*tmp160*tmp137*tmp144*tmp69*tmp161)/2.)));
J(1+_OFF,3+_OFF) = -(tmp139*(0.0017418568193694477*tmp14*tmp51*tmp97*tmp52*tmp58*tmp107*tmp166*tmp66 + 0.0008709284096847238*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp81*tmp91*tmp166*tmp66*tmp69 - 0.0008709284096847238*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp81*tmp91*tmp169*tmp109*tmp92 + 0.0017418568193694477*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp225*tmp81*tmp66*tmp92 + 0.0017418568193694477*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp171*tmp91*tmp66*tmp92 - 0.0008709284096847238*tmp14*tmp51*tmp97*tmp52*tmp58*tmp107*tmp169*tmp109*tmp68 + 0.0017418568193694477*tmp14*tmp51*tmp97*tmp52*tmp58*tmp38*tmp66*tmp68 + 0.0017418568193694477*tmp14*tmp51*tmp95*tmp52*tmp58*tmp107*tmp66*tmp68*tmp174 + 0.0008709284096847238*tmp14*tmp51*tmp121*tmp52*tmp58*tmp81*tmp66*tmp68*tmp204*tmp125 + 0.0017418568193694477*tmp14*tmp51*tmp121*tmp52*tmp58*tmp81*tmp166*tmp66*tmp124 - 0.0008709284096847238*tmp14*tmp51*tmp121*tmp52*tmp58*tmp81*tmp169*tmp109*tmp68*tmp124 + 0.0017418568193694477*tmp14*tmp51*tmp121*tmp52*tmp58*tmp171*tmp66*tmp68*tmp124 + 0.0017418568193694477*tmp14*tmp51*tmp72*tmp52*tmp58*tmp81*tmp91*tmp66*tmp92*tmp125*tmp177 + 0.0017418568193694477*tmp14*tmp51*tmp52*tmp58*tmp81*tmp66*tmp68*tmp124*tmp208 + 0.0034837136387388954*tmp14*tmp51*tmp156*tmp58*(tmp157*tmp158*tmp166 + (tmp159*tmp160*tmp137*tmp166*tmp69*tmp161)/2.)));
J(2+_OFF,1+_OFF) = -(tmp139*(0.0008709284096847238*tmp14*tmp51*tmp121*tmp52*tmp58*tmp189*tmp64*tmp69 + 0.0017418568193694477*tmp14*tmp51*tmp121*tmp52*tmp58*(tmp148 + 2*tmp0*tmp3)*tmp92 + 0.0008709284096847238*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp68*tmp180*tmp125 + 0.0017418568193694477*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp64*tmp124 + 0.0017418568193694477*tmp14*tmp51*tmp72*tmp52*tmp58*tmp68*tmp136 + 0.0017418568193694477*tmp14*tmp51*tmp52*tmp58*tmp189*tmp92*tmp193));
J(2+_OFF,2+_OFF) = -(tmp139*(0.0008709284096847238*tmp14*tmp51*tmp121*tmp52*tmp58*tmp189*tmp144*tmp69 + 0.0017418568193694477*tmp14*tmp51*tmp121*tmp52*tmp58*tmp141*tmp92 + 0.0008709284096847238*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp68*tmp196*tmp125 + 0.0017418568193694477*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp144*tmp124 + 0.0017418568193694477*tmp14*tmp51*tmp72*tmp52*tmp58*tmp68*tmp155 + 0.0017418568193694477*tmp14*tmp51*tmp52*tmp58*tmp189*tmp92*tmp200));
J(2+_OFF,3+_OFF) = -(tmp139*(0.0008709284096847238*tmp14*tmp51*tmp121*tmp52*tmp58*tmp189*tmp166*tmp69 + 0.0017418568193694477*tmp14*tmp51*tmp121*tmp52*tmp58*(tmp201 + tmp223)*tmp92 + 0.0008709284096847238*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp68*tmp204*tmp125 + 0.0017418568193694477*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp166*tmp124 + 0.0017418568193694477*tmp14*tmp51*tmp72*tmp52*tmp58*tmp68*tmp177 + 0.0017418568193694477*tmp14*tmp51*tmp52*tmp58*tmp189*tmp92*tmp208));
J(3+_OFF,1+_OFF) = -(tmp139*(0.0017418568193694477*tmp14*tmp51*tmp97*tmp52*tmp58*tmp81*tmp64*tmp66 + 0.0008709284096847238*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp91*tmp217*tmp64*tmp66*tmp69 - 0.0008709284096847238*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp91*tmp217*tmp108*tmp109*tmp92 + 0.0017418568193694477*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp221*tmp91*tmp66*tmp92 + 0.0017418568193694477*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp219*tmp217*tmp66*tmp92 - 0.0008709284096847238*tmp14*tmp51*tmp97*tmp52*tmp58*tmp81*tmp108*tmp109*tmp68 + 0.0017418568193694477*tmp14*tmp51*tmp97*tmp52*tmp58*tmp60*tmp66*tmp68 + 0.0017418568193694477*tmp14*tmp51*tmp95*tmp52*tmp58*tmp81*tmp66*tmp68*tmp132 + 0.0008709284096847238*tmp14*tmp51*tmp121*tmp52*tmp58*tmp217*tmp66*tmp68*tmp180*tmp125 + 0.0017418568193694477*tmp14*tmp51*tmp121*tmp52*tmp58*tmp217*tmp64*tmp66*tmp124 - 0.0008709284096847238*tmp14*tmp51*tmp121*tmp52*tmp58*tmp217*tmp108*tmp109*tmp68*tmp124 + 0.0017418568193694477*tmp14*tmp51*tmp121*tmp52*tmp58*tmp221*tmp66*tmp68*tmp124 + 0.0017418568193694477*tmp14*tmp51*tmp72*tmp52*tmp58*tmp91*tmp217*tmp66*tmp92*tmp125*tmp136 + 0.0017418568193694477*tmp14*tmp51*tmp52*tmp58*tmp217*tmp66*tmp68*tmp124*tmp193));
J(3+_OFF,2+_OFF) = -(tmp139*(0.0017418568193694477*tmp14*tmp51*tmp97*tmp52*tmp58*tmp81*tmp144*tmp66 + 0.0008709284096847238*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp91*tmp217*tmp144*tmp66*tmp69 - 0.0008709284096847238*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp91*tmp217*tmp146*tmp109*tmp92 + 0.0017418568193694477*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp224*tmp91*tmp66*tmp92 + 0.0017418568193694477*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp45*tmp217*tmp66*tmp92 - 0.0008709284096847238*tmp14*tmp51*tmp97*tmp52*tmp58*tmp81*tmp146*tmp109*tmp68 + 0.0017418568193694477*tmp14*tmp51*tmp97*tmp52*tmp58*tmp149*tmp66*tmp68 + 0.0017418568193694477*tmp14*tmp51*tmp95*tmp52*tmp58*tmp81*tmp66*tmp68*tmp152 + 0.0008709284096847238*tmp14*tmp51*tmp121*tmp52*tmp58*tmp217*tmp66*tmp68*tmp196*tmp125 + 0.0017418568193694477*tmp14*tmp51*tmp121*tmp52*tmp58*tmp217*tmp144*tmp66*tmp124 - 0.0008709284096847238*tmp14*tmp51*tmp121*tmp52*tmp58*tmp217*tmp146*tmp109*tmp68*tmp124 + 0.0017418568193694477*tmp14*tmp51*tmp121*tmp52*tmp58*tmp224*tmp66*tmp68*tmp124 + 0.0017418568193694477*tmp14*tmp51*tmp72*tmp52*tmp58*tmp91*tmp217*tmp66*tmp92*tmp125*tmp155 + 0.0017418568193694477*tmp14*tmp51*tmp52*tmp58*tmp217*tmp66*tmp68*tmp124*tmp200));
J(3+_OFF,3+_OFF) = -(tmp139*(0.0017418568193694477*tmp14*tmp51*tmp97*tmp52*tmp58*tmp81*tmp166*tmp66 + 0.0008709284096847238*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp91*tmp217*tmp166*tmp66*tmp69 - 0.0008709284096847238*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp91*tmp217*tmp169*tmp109*tmp92 + 0.0017418568193694477*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp164*tmp91*tmp66*tmp92 + 0.0017418568193694477*tmp71*tmp14*tmp51*tmp72*tmp52*tmp58*tmp225*tmp217*tmp66*tmp92 - 0.0008709284096847238*tmp14*tmp51*tmp97*tmp52*tmp58*tmp81*tmp169*tmp109*tmp68 + 0.0017418568193694477*tmp14*tmp51*tmp97*tmp52*tmp58*tmp171*tmp66*tmp68 + 0.0017418568193694477*tmp14*tmp51*tmp95*tmp52*tmp58*tmp81*tmp66*tmp68*tmp174 + 0.0008709284096847238*tmp14*tmp51*tmp121*tmp52*tmp58*tmp217*tmp66*tmp68*tmp204*tmp125 + 0.0017418568193694477*tmp14*tmp51*tmp121*tmp52*tmp58*tmp217*tmp166*tmp66*tmp124 - 0.0008709284096847238*tmp14*tmp51*tmp121*tmp52*tmp58*tmp217*tmp169*tmp109*tmp68*tmp124 + 0.0017418568193694477*tmp14*tmp51*tmp121*tmp52*tmp58*tmp164*tmp66*tmp68*tmp124 + 0.0017418568193694477*tmp14*tmp51*tmp72*tmp52*tmp58*tmp91*tmp217*tmp66*tmp92*tmp125*tmp177 + 0.0017418568193694477*tmp14*tmp51*tmp52*tmp58*tmp217*tmp66*tmp68*tmp124*tmp208));
J(4+_OFF,1+_OFF) = -(tmp226*tmp227*tmp240*tmp276) + tmp226*tmp234*tmp240*tmp282;
J(4+_OFF,2+_OFF) = -(tmp226*tmp227*tmp240*tmp289) + tmp226*tmp234*tmp240*tmp295;
J(4+_OFF,3+_OFF) = -(tmp226*tmp227*tmp240*tmp302) + tmp226*tmp234*tmp240*tmp308;
J(5+_OFF,1+_OFF) = -(tmp262*tmp240*(0.0017418568193694477*tmp14*tmp51*tmp256*tmp52*tmp58*tmp68*(tmp257*tmp132 - (tmp258*tmp256*tmp64*tmp133*tmp259)/4.) + 0.0017418568193694477*tmp14*tmp51*tmp256*tmp52*tmp58*tmp64*tmp269));
J(5+_OFF,2+_OFF) = -(tmp262*tmp240*(0.0017418568193694477*tmp14*tmp51*tmp256*tmp52*tmp58*tmp68*(tmp257*tmp152 - (tmp258*tmp256*tmp144*tmp133*tmp259)/4.) + 0.0017418568193694477*tmp14*tmp51*tmp256*tmp52*tmp58*tmp144*tmp269));
J(5+_OFF,3+_OFF) = -(tmp262*tmp240*(0.0017418568193694477*tmp14*tmp51*tmp256*tmp52*tmp58*tmp68*(tmp257*tmp174 - (tmp258*tmp256*tmp166*tmp133*tmp259)/4.) + 0.0017418568193694477*tmp14*tmp51*tmp256*tmp52*tmp58*tmp166*tmp269));
J(6+_OFF,1+_OFF) = tmp226*tmp234*tmp240*tmp276 - tmp235*tmp226*tmp240*tmp282;
J(6+_OFF,2+_OFF) = tmp226*tmp234*tmp240*tmp289 - tmp235*tmp226*tmp240*tmp295;
J(6+_OFF,3+_OFF) = tmp226*tmp234*tmp240*tmp302 - tmp235*tmp226*tmp240*tmp308;
