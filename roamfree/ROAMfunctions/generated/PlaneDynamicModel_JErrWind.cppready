double tmp0 = x(4+_OFF);
double tmp1 = x(6+_OFF);
double tmp2 = x(5+_OFF);
double tmp3 = x(7+_OFF);
double tmp4 = wind(1+_OFF);
double tmp5 = tmp2*tmp3;
double tmp6 = wind(2+_OFF);
double tmp7 = wind(3+_OFF);
double tmp8 = std::pow(tmp0,2);
double tmp9 = std::pow(tmp2,2);
double tmp10 = std::pow(tmp1,2);
double tmp11 = -tmp10;
double tmp12 = std::pow(tmp3,2);
double tmp13 = airDensity(2+_OFF);
double tmp14 = 1/tmp13;
double tmp15 = tmp2*tmp1;
double tmp16 = tmp0*tmp3;
double tmp17 = tmp15 + tmp16;
double tmp18 = -2*tmp6*tmp17;
double tmp19 = -(tmp0*tmp1);
double tmp20 = tmp19 + tmp5;
double tmp21 = -2*tmp7*tmp20;
double tmp22 = -tmp12;
double tmp23 = tmp8 + tmp9 + tmp11 + tmp22;
double tmp24 = -(tmp4*tmp23);
double tmp25 = x(8+_OFF);
double tmp26 = tmp18 + tmp21 + tmp24 + tmp25;
double tmp27 = tmp0*tmp1;
double tmp28 = tmp27 + tmp5;
double tmp29 = 2*tmp4*tmp28;
double tmp30 = -(tmp0*tmp2);
double tmp31 = tmp1*tmp3;
double tmp32 = tmp30 + tmp31;
double tmp33 = 2*tmp6*tmp32;
double tmp34 = -tmp9;
double tmp35 = tmp8 + tmp34 + tmp11 + tmp12;
double tmp36 = tmp7*tmp35;
double tmp37 = x(10+_OFF);
double tmp38 = -tmp37;
double tmp39 = tmp29 + tmp33 + tmp36 + tmp38;
double tmp40 = -(tmp0*tmp3);
double tmp41 = tmp15 + tmp40;
double tmp42 = airDensity(3+_OFF);
double tmp43 = tmp0*tmp2;
double tmp44 = tmp43 + tmp31;
double tmp45 = tmp8 + tmp34 + tmp10 + tmp22;
double tmp46 = x(9+_OFF);
double tmp47 = std::pow(tmp26,2);
double tmp48 = -2*tmp4*tmp41;
double tmp49 = -2*tmp7*tmp44;
double tmp50 = -(tmp6*tmp45);
double tmp51 = tmp48 + tmp49 + tmp50 + tmp46;
double tmp52 = -2*tmp4*tmp28;
double tmp53 = -2*tmp6*tmp32;
double tmp54 = -(tmp7*tmp35);
double tmp55 = tmp52 + tmp53 + tmp54 + tmp37;
double tmp56 = cp(2+_OFF);
double tmp57 = airDensity(1+_OFF);
double tmp58 = x(3+_OFF);
double tmp59 = tmp57 + tmp58;
double tmp60 = -0.006500000000000001*tmp14*tmp59;
double tmp61 = 1 + tmp60;
double tmp62 = std::pow(tmp61,4.2561);
double tmp63 = std::pow(tmp39,2);
double tmp64 = tmp47 + tmp63;
double tmp65 = 1/std::sqrt(tmp64);
double tmp66 = -tmp8;
double tmp67 = tmp66 + tmp34 + tmp10 + tmp12;
double tmp68 = 2*tmp67*tmp26;
double tmp69 = -4*tmp41*tmp51;
double tmp70 = -4*tmp28*tmp55;
double tmp71 = tmp68 + tmp69 + tmp70;
double tmp72 = std::pow(tmp51,2);
double tmp73 = std::pow(tmp55,2);
double tmp74 = tmp47 + tmp72 + tmp73;
double tmp75 = 1/std::sqrt(tmp74);
double tmp76 = 2*tmp4*tmp41;
double tmp77 = 2*tmp7*tmp44;
double tmp78 = tmp6*tmp45;
double tmp79 = -tmp46;
double tmp80 = tmp76 + tmp77 + tmp78 + tmp79;
double tmp81 = tmp80*tmp75;
double tmp82 = std::asin(tmp81);
double tmp83 = fLat(1+_OFF);
double tmp84 = -(tmp4*tmp8);
double tmp85 = -(tmp4*tmp9);
double tmp86 = 2*tmp7*tmp0*tmp1;
double tmp87 = -2*tmp6*tmp2*tmp1;
double tmp88 = tmp4*tmp10;
double tmp89 = -2*tmp6*tmp0*tmp3;
double tmp90 = -2*tmp7*tmp2*tmp3;
double tmp91 = tmp4*tmp12;
double tmp92 = tmp84 + tmp85 + tmp86 + tmp87 + tmp88 + tmp89 + tmp90 + tmp91 + tmp25;
double tmp93 = -(tmp6*tmp8);
double tmp94 = -2*tmp7*tmp0*tmp2;
double tmp95 = tmp6*tmp9;
double tmp96 = -2*tmp4*tmp2*tmp1;
double tmp97 = -(tmp6*tmp10);
double tmp98 = 2*tmp4*tmp0*tmp3;
double tmp99 = -2*tmp7*tmp1*tmp3;
double tmp100 = tmp6*tmp12;
double tmp101 = tmp93 + tmp94 + tmp95 + tmp96 + tmp97 + tmp98 + tmp99 + tmp100 + tmp46;
double tmp102 = std::sqrt(tmp74);
double tmp103 = fLift(1+_OFF);
double tmp104 = std::atan2(tmp39,tmp26);
double tmp105 = fLift(2+_OFF);
double tmp106 = tmp104*tmp105;
double tmp107 = tmp103 + tmp106;
double tmp108 = 4*tmp28*tmp39;
double tmp109 = tmp68 + tmp108;
double tmp110 = std::pow(tmp64,-1.5);
double tmp111 = -(tmp7*tmp8);
double tmp112 = 2*tmp6*tmp0*tmp2;
double tmp113 = tmp7*tmp9;
double tmp114 = -2*tmp4*tmp0*tmp1;
double tmp115 = tmp7*tmp10;
double tmp116 = -2*tmp4*tmp2*tmp3;
double tmp117 = -2*tmp6*tmp1*tmp3;
double tmp118 = -(tmp7*tmp12);
double tmp119 = tmp111 + tmp112 + tmp113 + tmp114 + tmp115 + tmp116 + tmp117 + tmp118 + tmp37;
double tmp120 = 1/tmp64;
double tmp121 = std::pow(tmp80,2);
double tmp122 = 1/tmp74;
double tmp123 = fDrag(1+_OFF);
double tmp124 = fDrag(2+_OFF);
double tmp125 = tmp104*tmp124;
double tmp126 = std::pow(tmp104,2);
double tmp127 = fDrag(3+_OFF);
double tmp128 = tmp126*tmp127;
double tmp129 = std::pow(tmp82,2);
double tmp130 = fDrag(4+_OFF);
double tmp131 = tmp129*tmp130;
double tmp132 = tmp123 + tmp125 + tmp128 + tmp131;
double tmp133 = -(tmp121*tmp122);
double tmp134 = 1 + tmp133;
double tmp135 = std::sqrt(tmp134);
double tmp136 = 1/std::sqrt(tmp134);
double tmp137 = 2*tmp28*tmp26*tmp120;
double tmp138 = tmp67*tmp120*tmp55;
double tmp139 = tmp137 + tmp138;
double tmp140 = std::pow(tmp74,-1.5);
double tmp141 = -(tmp80*tmp71*tmp140)/2.;
double tmp142 = 2*tmp41*tmp75;
double tmp143 = tmp141 + tmp142;
double tmp144 = cp(1+_OFF);
double tmp145 = cp(4+_OFF);
double tmp146 = 1/tmp145;
double tmp147 = -4*tmp17*tmp26;
double tmp148 = tmp66 + tmp9 + tmp11 + tmp12;
double tmp149 = 2*tmp148*tmp51;
double tmp150 = -4*tmp32*tmp55;
double tmp151 = tmp147 + tmp149 + tmp150;
double tmp152 = -2*tmp2*tmp1;
double tmp153 = 4*tmp32*tmp39;
double tmp154 = tmp147 + tmp153;
double tmp155 = std::pow(tmp74,-2);
double tmp156 = -2*tmp0*tmp3;
double tmp157 = tmp152 + tmp156;
double tmp158 = 2*tmp32*tmp26*tmp120;
double tmp159 = -2*tmp17*tmp120*tmp55;
double tmp160 = tmp158 + tmp159;
double tmp161 = -(tmp80*tmp151*tmp140)/2.;
double tmp162 = tmp45*tmp75;
double tmp163 = tmp161 + tmp162;
double tmp164 = std::pow(tmp144,2);
double tmp165 = std::pow(M_PI,-2);
double tmp166 = fThrust(3+_OFF);
double tmp167 = 1/M_PI;
double tmp168 = fThrust(2+_OFF);
double tmp169 = z(1+_OFF);
double tmp170 = -4*tmp20*tmp26;
double tmp171 = -4*tmp44*tmp51;
double tmp172 = tmp66 + tmp9 + tmp10 + tmp22;
double tmp173 = 2*tmp172*tmp55;
double tmp174 = tmp170 + tmp171 + tmp173;
double tmp175 = -2*tmp1*tmp3;
double tmp176 = -2*tmp2*tmp3;
double tmp177 = 2*tmp35*tmp39;
double tmp178 = tmp170 + tmp177;
double tmp179 = 2*tmp0*tmp1;
double tmp180 = tmp179 + tmp176;
double tmp181 = tmp35*tmp26*tmp120;
double tmp182 = -2*tmp20*tmp120*tmp55;
double tmp183 = tmp181 + tmp182;
double tmp184 = -(tmp80*tmp174*tmp140)/2.;
double tmp185 = 2*tmp44*tmp75;
double tmp186 = tmp184 + tmp185;
double tmp187 = tmp121*tmp71*tmp155;
double tmp188 = -4*tmp41*tmp80*tmp122;
double tmp189 = tmp187 + tmp188;
double tmp190 = tmp6*tmp8;
double tmp191 = 2*tmp7*tmp0*tmp2;
double tmp192 = -(tmp6*tmp9);
double tmp193 = 2*tmp4*tmp2*tmp1;
double tmp194 = tmp6*tmp10;
double tmp195 = -2*tmp4*tmp0*tmp3;
double tmp196 = 2*tmp7*tmp1*tmp3;
double tmp197 = -(tmp6*tmp12);
double tmp198 = tmp190 + tmp191 + tmp192 + tmp193 + tmp194 + tmp195 + tmp196 + tmp197 + tmp79;
double tmp199 = tmp124*tmp139;
double tmp200 = 2*tmp104*tmp127*tmp139;
double tmp201 = 2*tmp82*tmp130*tmp136*tmp143;
double tmp202 = tmp199 + tmp200 + tmp201;
double tmp203 = tmp121*tmp151*tmp155;
double tmp204 = -2*tmp45*tmp80*tmp122;
double tmp205 = tmp203 + tmp204;
double tmp206 = tmp124*tmp160;
double tmp207 = 2*tmp104*tmp127*tmp160;
double tmp208 = 2*tmp82*tmp130*tmp136*tmp163;
double tmp209 = tmp206 + tmp207 + tmp208;
double tmp210 = 2*tmp0*tmp2;
double tmp211 = tmp121*tmp174*tmp155;
double tmp212 = -4*tmp44*tmp80*tmp122;
double tmp213 = tmp211 + tmp212;
double tmp214 = tmp124*tmp183;
double tmp215 = 2*tmp104*tmp127*tmp183;
double tmp216 = 2*tmp82*tmp130*tmp136*tmp186;
double tmp217 = tmp214 + tmp215 + tmp216;
double tmp218 = tmp7*tmp8;
double tmp219 = -2*tmp6*tmp0*tmp2;
double tmp220 = -(tmp7*tmp9);
double tmp221 = 2*tmp4*tmp0*tmp1;
double tmp222 = -(tmp7*tmp10);
double tmp223 = 2*tmp4*tmp2*tmp3;
double tmp224 = 2*tmp6*tmp1*tmp3;
double tmp225 = tmp7*tmp12;
double tmp226 = tmp218 + tmp219 + tmp220 + tmp221 + tmp222 + tmp223 + tmp224 + tmp225 + tmp38;
double tmp227 = 2*tmp0*tmp3;
double tmp228 = tmp152 + tmp227;
double tmp229 = 2*tmp2*tmp3;
double tmp230 = tmp179 + tmp229;
double tmp231 = -2*tmp0*tmp2;
double tmp232 = 2*tmp1*tmp3;
double tmp233 = tmp231 + tmp232;
double tmp234 = tmp231 + tmp175;
double tmp235 = ibd(2+_OFF);
double tmp236 = ibd(3+_OFF);
double tmp237 = ibod(1+_OFF);
double tmp238 = ibod(2+_OFF);
double tmp239 = ibod(3+_OFF);
double tmp240 = ibd(1+_OFF);
double tmp241 = std::pow(tmp239,2);
double tmp242 = cp(3+_OFF);
double tmp243 = mRoll(2+_OFF);
double tmp244 = mRoll(3+_OFF);
double tmp245 = x(11+_OFF);
double tmp246 = mRoll(4+_OFF);
double tmp247 = x(13+_OFF);
double tmp248 = tmp240*tmp235*tmp236;
double tmp249 = std::pow(tmp237,2);
double tmp250 = -(tmp235*tmp249);
double tmp251 = std::pow(tmp238,2);
double tmp252 = -(tmp236*tmp251);
double tmp253 = 2*tmp237*tmp238*tmp239;
double tmp254 = -(tmp240*tmp241);
double tmp255 = tmp248 + tmp250 + tmp252 + tmp253 + tmp254;
double tmp256 = 1/tmp255;
double tmp257 = cBar(1+_OFF);
double tmp258 = mPitch(3+_OFF);
double tmp259 = mPitch(4+_OFF);
double tmp260 = x(12+_OFF);
double tmp261 = mYaw(2+_OFF);
double tmp262 = mYaw(3+_OFF);
double tmp263 = tmp235*tmp236;
double tmp264 = -tmp241;
double tmp265 = tmp263 + tmp264;
double tmp266 = tmp82*tmp243;
double tmp267 = (tmp242*tmp244*tmp75*tmp245)/2.;
double tmp268 = -(tmp242*tmp246*tmp75*tmp247)/2.;
double tmp269 = mRoll(1+_OFF);
double tmp270 = z(2+_OFF);
double tmp271 = -(tmp269*tmp270);
double tmp272 = tmp266 + tmp267 + tmp268 + tmp271;
double tmp273 = -(tmp236*tmp238);
double tmp274 = tmp237*tmp239;
double tmp275 = tmp273 + tmp274;
double tmp276 = mPitch(1+_OFF);
double tmp277 = -tmp276;
double tmp278 = -(tmp104*tmp258);
double tmp279 = (tmp257*tmp259*tmp75*tmp260)/2.;
double tmp280 = mPitch(2+_OFF);
double tmp281 = z(3+_OFF);
double tmp282 = -(tmp280*tmp281);
double tmp283 = tmp277 + tmp278 + tmp279 + tmp282;
double tmp284 = -(tmp235*tmp237);
double tmp285 = tmp238*tmp239;
double tmp286 = tmp284 + tmp285;
double tmp287 = -(tmp82*tmp261);
double tmp288 = (tmp242*tmp262*tmp75*tmp247)/2.;
double tmp289 = mYaw(1+_OFF);
double tmp290 = z(4+_OFF);
double tmp291 = tmp289*tmp290;
double tmp292 = tmp287 + tmp288 + tmp291;
double tmp293 = tmp243*tmp136*tmp143;
double tmp294 = -(tmp242*tmp244*tmp71*tmp140*tmp245)/4.;
double tmp295 = (tmp242*tmp246*tmp71*tmp140*tmp247)/4.;
double tmp296 = tmp293 + tmp294 + tmp295;
double tmp297 = 0.001740341106856944*tmp14*tmp42*tmp56*tmp242*tmp62*tmp74*tmp296;
double tmp298 = 0.001740341106856944*tmp14*tmp42*tmp56*tmp242*tmp62*tmp71*tmp272;
double tmp299 = tmp297 + tmp298;
double tmp300 = -(tmp258*tmp139);
double tmp301 = -(tmp257*tmp259*tmp71*tmp140*tmp260)/4.;
double tmp302 = tmp300 + tmp301;
double tmp303 = 0.001740341106856944*tmp14*tmp42*tmp257*tmp56*tmp62*tmp74*tmp302;
double tmp304 = 0.001740341106856944*tmp14*tmp42*tmp257*tmp56*tmp62*tmp71*tmp283;
double tmp305 = tmp303 + tmp304;
double tmp306 = -(tmp261*tmp136*tmp143);
double tmp307 = -(tmp242*tmp262*tmp71*tmp140*tmp247)/4.;
double tmp308 = tmp306 + tmp307;
double tmp309 = 0.001740341106856944*tmp14*tmp42*tmp56*tmp242*tmp62*tmp74*tmp308;
double tmp310 = 0.001740341106856944*tmp14*tmp42*tmp56*tmp242*tmp62*tmp71*tmp292;
double tmp311 = tmp309 + tmp310;
double tmp312 = tmp243*tmp136*tmp163;
double tmp313 = -(tmp242*tmp244*tmp151*tmp140*tmp245)/4.;
double tmp314 = (tmp242*tmp246*tmp151*tmp140*tmp247)/4.;
double tmp315 = tmp312 + tmp313 + tmp314;
double tmp316 = 0.001740341106856944*tmp14*tmp42*tmp56*tmp242*tmp62*tmp74*tmp315;
double tmp317 = 0.001740341106856944*tmp14*tmp42*tmp56*tmp242*tmp62*tmp151*tmp272;
double tmp318 = tmp316 + tmp317;
double tmp319 = tmp240*tmp236;
double tmp320 = -tmp249;
double tmp321 = tmp319 + tmp320;
double tmp322 = -(tmp258*tmp160);
double tmp323 = -(tmp257*tmp259*tmp151*tmp140*tmp260)/4.;
double tmp324 = tmp322 + tmp323;
double tmp325 = 0.001740341106856944*tmp14*tmp42*tmp257*tmp56*tmp62*tmp74*tmp324;
double tmp326 = 0.001740341106856944*tmp14*tmp42*tmp257*tmp56*tmp62*tmp151*tmp283;
double tmp327 = tmp325 + tmp326;
double tmp328 = tmp237*tmp238;
double tmp329 = -(tmp240*tmp239);
double tmp330 = tmp328 + tmp329;
double tmp331 = -(tmp261*tmp136*tmp163);
double tmp332 = -(tmp242*tmp262*tmp151*tmp140*tmp247)/4.;
double tmp333 = tmp331 + tmp332;
double tmp334 = 0.001740341106856944*tmp14*tmp42*tmp56*tmp242*tmp62*tmp74*tmp333;
double tmp335 = 0.001740341106856944*tmp14*tmp42*tmp56*tmp242*tmp62*tmp151*tmp292;
double tmp336 = tmp334 + tmp335;
double tmp337 = tmp243*tmp136*tmp186;
double tmp338 = -(tmp242*tmp244*tmp174*tmp140*tmp245)/4.;
double tmp339 = (tmp242*tmp246*tmp174*tmp140*tmp247)/4.;
double tmp340 = tmp337 + tmp338 + tmp339;
double tmp341 = 0.001740341106856944*tmp14*tmp42*tmp56*tmp242*tmp62*tmp74*tmp340;
double tmp342 = 0.001740341106856944*tmp14*tmp42*tmp56*tmp242*tmp62*tmp174*tmp272;
double tmp343 = tmp341 + tmp342;
double tmp344 = -(tmp258*tmp183);
double tmp345 = -(tmp257*tmp259*tmp174*tmp140*tmp260)/4.;
double tmp346 = tmp344 + tmp345;
double tmp347 = 0.001740341106856944*tmp14*tmp42*tmp257*tmp56*tmp62*tmp74*tmp346;
double tmp348 = 0.001740341106856944*tmp14*tmp42*tmp257*tmp56*tmp62*tmp174*tmp283;
double tmp349 = tmp347 + tmp348;
double tmp350 = -(tmp261*tmp136*tmp186);
double tmp351 = -(tmp242*tmp262*tmp174*tmp140*tmp247)/4.;
double tmp352 = tmp350 + tmp351;
double tmp353 = 0.001740341106856944*tmp14*tmp42*tmp56*tmp242*tmp62*tmp74*tmp352;
double tmp354 = 0.001740341106856944*tmp14*tmp42*tmp56*tmp242*tmp62*tmp174*tmp292;
double tmp355 = tmp353 + tmp354;
double tmp356 = tmp240*tmp235;
double tmp357 = -tmp251;
double tmp358 = tmp356 + tmp357;
J(1+_OFF,1+_OFF) = -(tmp146*(-0.001740341106856944*tmp14*tmp42*tmp56*tmp107*tmp62*tmp65*tmp119*tmp71 - 0.000870170553428472*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp92*tmp101*tmp65*tmp71*tmp75 + 0.000870170553428472*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp92*tmp101*tmp109*tmp110*tmp102 - 0.001740341106856944*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp228*tmp92*tmp65*tmp102 - 0.001740341106856944*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp67*tmp101*tmp65*tmp102 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp107*tmp62*(-2*tmp0*tmp1 + tmp176)*tmp65*tmp74 + 0.000870170553428472*tmp14*tmp42*tmp56*tmp107*tmp62*tmp109*tmp110*tmp119*tmp74 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp105*tmp62*tmp65*tmp119*tmp139*tmp74 + 0.000870170553428472*tmp14*tmp42*tmp56*tmp132*tmp62*tmp92*tmp65*tmp74*tmp189*tmp136 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp132*tmp62*tmp92*tmp65*tmp71*tmp135 - 0.000870170553428472*tmp14*tmp42*tmp56*tmp132*tmp62*tmp92*tmp109*tmp110*tmp74*tmp135 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp132*tmp62*tmp67*tmp65*tmp74*tmp135 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp83*tmp62*tmp92*tmp101*tmp65*tmp102*tmp136*tmp143 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp62*tmp92*tmp65*tmp74*tmp135*tmp202 + 0.003480682213713888*tmp14*tmp42*tmp164*tmp62*(tmp165*tmp166*tmp71 + (tmp167*tmp144*tmp168*tmp71*tmp75*tmp169)/2.)));
J(1+_OFF,2+_OFF) = -(tmp146*(-0.001740341106856944*tmp14*tmp42*tmp56*tmp107*tmp62*tmp65*tmp119*tmp151 - 0.000870170553428472*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp92*tmp101*tmp65*tmp151*tmp75 + 0.000870170553428472*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp92*tmp101*tmp154*tmp110*tmp102 - 0.001740341106856944*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp148*tmp92*tmp65*tmp102 - 0.001740341106856944*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp157*tmp101*tmp65*tmp102 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp107*tmp62*(tmp210 + tmp175)*tmp65*tmp74 + 0.000870170553428472*tmp14*tmp42*tmp56*tmp107*tmp62*tmp154*tmp110*tmp119*tmp74 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp105*tmp62*tmp65*tmp119*tmp160*tmp74 + 0.000870170553428472*tmp14*tmp42*tmp56*tmp132*tmp62*tmp92*tmp65*tmp74*tmp205*tmp136 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp132*tmp62*tmp92*tmp65*tmp151*tmp135 - 0.000870170553428472*tmp14*tmp42*tmp56*tmp132*tmp62*tmp92*tmp154*tmp110*tmp74*tmp135 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp132*tmp62*tmp157*tmp65*tmp74*tmp135 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp83*tmp62*tmp92*tmp101*tmp65*tmp102*tmp136*tmp163 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp62*tmp92*tmp65*tmp74*tmp135*tmp209 + 0.003480682213713888*tmp14*tmp42*tmp164*tmp62*(tmp165*tmp166*tmp151 + (tmp167*tmp144*tmp168*tmp151*tmp75*tmp169)/2.)));
J(1+_OFF,3+_OFF) = -(tmp146*(-0.001740341106856944*tmp14*tmp42*tmp56*tmp107*tmp62*tmp65*tmp119*tmp174 - 0.000870170553428472*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp92*tmp101*tmp65*tmp174*tmp75 + 0.000870170553428472*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp92*tmp101*tmp178*tmp110*tmp102 - 0.001740341106856944*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp234*tmp92*tmp65*tmp102 - 0.001740341106856944*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp180*tmp101*tmp65*tmp102 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp107*tmp62*tmp172*tmp65*tmp74 + 0.000870170553428472*tmp14*tmp42*tmp56*tmp107*tmp62*tmp178*tmp110*tmp119*tmp74 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp105*tmp62*tmp65*tmp119*tmp183*tmp74 + 0.000870170553428472*tmp14*tmp42*tmp56*tmp132*tmp62*tmp92*tmp65*tmp74*tmp213*tmp136 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp132*tmp62*tmp92*tmp65*tmp174*tmp135 - 0.000870170553428472*tmp14*tmp42*tmp56*tmp132*tmp62*tmp92*tmp178*tmp110*tmp74*tmp135 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp132*tmp62*tmp180*tmp65*tmp74*tmp135 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp83*tmp62*tmp92*tmp101*tmp65*tmp102*tmp136*tmp186 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp62*tmp92*tmp65*tmp74*tmp135*tmp217 + 0.003480682213713888*tmp14*tmp42*tmp164*tmp62*(tmp165*tmp166*tmp174 + (tmp167*tmp144*tmp168*tmp174*tmp75*tmp169)/2.)));
J(2+_OFF,1+_OFF) = -(tmp146*(0.000870170553428472*tmp14*tmp42*tmp56*tmp132*tmp62*tmp198*tmp71*tmp75 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp132*tmp62*(2*tmp2*tmp1 + tmp156)*tmp102 - 0.000870170553428472*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp74*tmp189*tmp136 - 0.001740341106856944*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp71*tmp135 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp83*tmp62*tmp74*tmp143 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp62*tmp198*tmp102*tmp202));
J(2+_OFF,2+_OFF) = -(tmp146*(0.000870170553428472*tmp14*tmp42*tmp56*tmp132*tmp62*tmp198*tmp151*tmp75 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp132*tmp62*tmp45*tmp102 - 0.000870170553428472*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp74*tmp205*tmp136 - 0.001740341106856944*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp151*tmp135 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp83*tmp62*tmp74*tmp163 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp62*tmp198*tmp102*tmp209));
J(2+_OFF,3+_OFF) = -(tmp146*(0.000870170553428472*tmp14*tmp42*tmp56*tmp132*tmp62*tmp198*tmp174*tmp75 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp132*tmp62*(tmp210 + tmp232)*tmp102 - 0.000870170553428472*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp74*tmp213*tmp136 - 0.001740341106856944*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp174*tmp135 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp83*tmp62*tmp74*tmp186 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp62*tmp198*tmp102*tmp217));
J(3+_OFF,1+_OFF) = -(tmp146*(-0.001740341106856944*tmp14*tmp42*tmp56*tmp107*tmp62*tmp92*tmp65*tmp71 - 0.000870170553428472*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp101*tmp65*tmp226*tmp71*tmp75 - 0.001740341106856944*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp230*tmp101*tmp65*tmp102 + 0.000870170553428472*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp101*tmp109*tmp110*tmp226*tmp102 - 0.001740341106856944*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp228*tmp65*tmp226*tmp102 + 0.000870170553428472*tmp14*tmp42*tmp56*tmp107*tmp62*tmp92*tmp109*tmp110*tmp74 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp107*tmp62*tmp67*tmp65*tmp74 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp105*tmp62*tmp92*tmp65*tmp139*tmp74 + 0.000870170553428472*tmp14*tmp42*tmp56*tmp132*tmp62*tmp65*tmp226*tmp74*tmp189*tmp136 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp132*tmp62*tmp65*tmp226*tmp71*tmp135 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp132*tmp62*tmp230*tmp65*tmp74*tmp135 - 0.000870170553428472*tmp14*tmp42*tmp56*tmp132*tmp62*tmp109*tmp110*tmp226*tmp74*tmp135 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp83*tmp62*tmp101*tmp65*tmp226*tmp102*tmp136*tmp143 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp62*tmp65*tmp226*tmp74*tmp135*tmp202));
J(3+_OFF,2+_OFF) = -(tmp146*(-0.001740341106856944*tmp14*tmp42*tmp56*tmp107*tmp62*tmp92*tmp65*tmp151 - 0.000870170553428472*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp101*tmp65*tmp226*tmp151*tmp75 - 0.001740341106856944*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp233*tmp101*tmp65*tmp102 + 0.000870170553428472*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp101*tmp154*tmp110*tmp226*tmp102 - 0.001740341106856944*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp148*tmp65*tmp226*tmp102 + 0.000870170553428472*tmp14*tmp42*tmp56*tmp107*tmp62*tmp92*tmp154*tmp110*tmp74 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp107*tmp62*tmp157*tmp65*tmp74 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp105*tmp62*tmp92*tmp65*tmp160*tmp74 + 0.000870170553428472*tmp14*tmp42*tmp56*tmp132*tmp62*tmp65*tmp226*tmp74*tmp205*tmp136 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp132*tmp62*tmp65*tmp226*tmp151*tmp135 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp132*tmp62*tmp233*tmp65*tmp74*tmp135 - 0.000870170553428472*tmp14*tmp42*tmp56*tmp132*tmp62*tmp154*tmp110*tmp226*tmp74*tmp135 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp83*tmp62*tmp101*tmp65*tmp226*tmp102*tmp136*tmp163 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp62*tmp65*tmp226*tmp74*tmp135*tmp209));
J(3+_OFF,3+_OFF) = -(tmp146*(-0.001740341106856944*tmp14*tmp42*tmp56*tmp107*tmp62*tmp92*tmp65*tmp174 - 0.000870170553428472*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp101*tmp65*tmp226*tmp174*tmp75 - 0.001740341106856944*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp35*tmp101*tmp65*tmp102 + 0.000870170553428472*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp101*tmp178*tmp110*tmp226*tmp102 - 0.001740341106856944*tmp14*tmp42*tmp82*tmp56*tmp83*tmp62*tmp234*tmp65*tmp226*tmp102 + 0.000870170553428472*tmp14*tmp42*tmp56*tmp107*tmp62*tmp92*tmp178*tmp110*tmp74 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp107*tmp62*tmp180*tmp65*tmp74 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp105*tmp62*tmp92*tmp65*tmp183*tmp74 + 0.000870170553428472*tmp14*tmp42*tmp56*tmp132*tmp62*tmp65*tmp226*tmp74*tmp213*tmp136 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp132*tmp62*tmp65*tmp226*tmp174*tmp135 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp132*tmp62*tmp35*tmp65*tmp74*tmp135 - 0.000870170553428472*tmp14*tmp42*tmp56*tmp132*tmp62*tmp178*tmp110*tmp226*tmp74*tmp135 - 0.001740341106856944*tmp14*tmp42*tmp56*tmp83*tmp62*tmp101*tmp65*tmp226*tmp102*tmp136*tmp186 + 0.001740341106856944*tmp14*tmp42*tmp56*tmp62*tmp65*tmp226*tmp74*tmp135*tmp217));
J(4+_OFF,1+_OFF) = -(tmp265*tmp256*tmp299) - tmp275*tmp256*tmp305 - tmp286*tmp256*tmp311;
J(4+_OFF,2+_OFF) = -(tmp265*tmp256*tmp318) - tmp275*tmp256*tmp327 - tmp286*tmp256*tmp336;
J(4+_OFF,3+_OFF) = -(tmp265*tmp256*tmp343) - tmp275*tmp256*tmp349 - tmp286*tmp256*tmp355;
J(5+_OFF,1+_OFF) = -(tmp275*tmp256*tmp299) - tmp321*tmp256*tmp305 - tmp330*tmp256*tmp311;
J(5+_OFF,2+_OFF) = -(tmp275*tmp256*tmp318) - tmp321*tmp256*tmp327 - tmp330*tmp256*tmp336;
J(5+_OFF,3+_OFF) = -(tmp275*tmp256*tmp343) - tmp321*tmp256*tmp349 - tmp330*tmp256*tmp355;
J(6+_OFF,1+_OFF) = -(tmp286*tmp256*tmp299) - tmp330*tmp256*tmp305 - tmp358*tmp256*tmp311;
J(6+_OFF,2+_OFF) = -(tmp286*tmp256*tmp318) - tmp330*tmp256*tmp327 - tmp358*tmp256*tmp336;
J(6+_OFF,3+_OFF) = -(tmp286*tmp256*tmp343) - tmp330*tmp256*tmp349 - tmp358*tmp256*tmp355;
