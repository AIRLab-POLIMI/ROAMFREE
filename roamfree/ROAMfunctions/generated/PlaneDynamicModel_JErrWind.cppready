double tmp0 = x(4+_OFF);
double tmp1 = x(6+_OFF);
double tmp2 = x(5+_OFF);
double tmp3 = x(7+_OFF);
double tmp4 = x(30+_OFF);
double tmp5 = x(31+_OFF);
double tmp6 = x(32+_OFF);
double tmp7 = x(33+_OFF);
double tmp8 = tmp5*tmp6;
double tmp9 = std::pow(tmp4,2);
double tmp10 = std::pow(tmp5,2);
double tmp11 = std::pow(tmp6,2);
double tmp12 = std::pow(tmp7,2);
double tmp13 = -tmp12;
double tmp14 = wind(1+_OFF);
double tmp15 = tmp5*tmp7;
double tmp16 = wind(2+_OFF);
double tmp17 = tmp6*tmp7;
double tmp18 = wind(3+_OFF);
double tmp19 = -tmp10;
double tmp20 = -tmp11;
double tmp21 = tmp4*tmp7;
double tmp22 = tmp8 + tmp21;
double tmp23 = -2*tmp16*tmp22;
double tmp24 = -(tmp4*tmp6);
double tmp25 = tmp24 + tmp15;
double tmp26 = -2*tmp18*tmp25;
double tmp27 = tmp9 + tmp10 + tmp20 + tmp13;
double tmp28 = -(tmp14*tmp27);
double tmp29 = x(34+_OFF);
double tmp30 = tmp23 + tmp26 + tmp28 + tmp29;
double tmp31 = tmp4*tmp6;
double tmp32 = tmp31 + tmp15;
double tmp33 = -2*tmp14*tmp32;
double tmp34 = -(tmp4*tmp5);
double tmp35 = tmp34 + tmp17;
double tmp36 = -2*tmp16*tmp35;
double tmp37 = tmp9 + tmp19 + tmp20 + tmp12;
double tmp38 = -(tmp18*tmp37);
double tmp39 = x(36+_OFF);
double tmp40 = tmp33 + tmp36 + tmp38 + tmp39;
double tmp41 = std::atan2(tmp40,tmp30);
double tmp42 = -(tmp4*tmp7);
double tmp43 = tmp8 + tmp42;
double tmp44 = tmp4*tmp5;
double tmp45 = tmp44 + tmp17;
double tmp46 = tmp9 + tmp19 + tmp11 + tmp13;
double tmp47 = -2*tmp14*tmp43;
double tmp48 = -2*tmp18*tmp45;
double tmp49 = -(tmp16*tmp46);
double tmp50 = x(35+_OFF);
double tmp51 = tmp47 + tmp48 + tmp49 + tmp50;
double tmp52 = std::pow(tmp30,2);
double tmp53 = std::pow(tmp51,2);
double tmp54 = std::pow(tmp40,2);
double tmp55 = tmp52 + tmp53 + tmp54;
double tmp56 = 1/std::sqrt(tmp55);
double tmp57 = cp(2+_OFF);
double tmp58 = fDrag(1+_OFF);
double tmp59 = fDrag(2+_OFF);
double tmp60 = -(tmp41*tmp59);
double tmp61 = std::pow(tmp41,2);
double tmp62 = fDrag(3+_OFF);
double tmp63 = tmp61*tmp62;
double tmp64 = tmp51*tmp56;
double tmp65 = std::asin(tmp64);
double tmp66 = std::pow(tmp65,2);
double tmp67 = fDrag(4+_OFF);
double tmp68 = tmp66*tmp67;
double tmp69 = tmp58 + tmp60 + tmp63 + tmp68;
double tmp70 = -tmp9;
double tmp71 = tmp70 + tmp19 + tmp11 + tmp12;
double tmp72 = 2*tmp71*tmp30;
double tmp73 = -4*tmp43*tmp51;
double tmp74 = -4*tmp32*tmp40;
double tmp75 = tmp72 + tmp73 + tmp74;
double tmp76 = 1/tmp55;
double tmp77 = fLat(1+_OFF);
double tmp78 = -(tmp53*tmp76);
double tmp79 = 1 + tmp78;
double tmp80 = std::sqrt(tmp55);
double tmp81 = tmp52 + tmp54;
double tmp82 = 1/tmp81;
double tmp83 = -2*tmp32*tmp30*tmp82;
double tmp84 = 2*tmp14*tmp32;
double tmp85 = 2*tmp16*tmp35;
double tmp86 = tmp18*tmp37;
double tmp87 = -tmp39;
double tmp88 = tmp84 + tmp85 + tmp86 + tmp87;
double tmp89 = tmp71*tmp88*tmp82;
double tmp90 = tmp83 + tmp89;
double tmp91 = 1/std::sqrt(tmp79);
double tmp92 = std::pow(tmp55,-1.5);
double tmp93 = -0.5*(tmp51*tmp75*tmp92);
double tmp94 = -2*tmp43*tmp56;
double tmp95 = tmp93 + tmp94;
double tmp96 = std::pow(tmp0,2);
double tmp97 = std::pow(tmp2,2);
double tmp98 = std::pow(tmp1,2);
double tmp99 = -tmp98;
double tmp100 = std::pow(tmp3,2);
double tmp101 = -tmp100;
double tmp102 = tmp96 + tmp97 + tmp99 + tmp101;
double tmp103 = tmp2*tmp1;
double tmp104 = tmp0*tmp3;
double tmp105 = tmp103 + tmp104;
double tmp106 = -(tmp0*tmp1);
double tmp107 = tmp2*tmp3;
double tmp108 = tmp106 + tmp107;
double tmp109 = 1/std::sqrt(tmp81);
double tmp110 = fLift(1+_OFF);
double tmp111 = -tmp110;
double tmp112 = fLift(2+_OFF);
double tmp113 = tmp41*tmp112;
double tmp114 = tmp111 + tmp113;
double tmp115 = tmp72 + tmp74;
double tmp116 = std::pow(tmp81,-1.5);
double tmp117 = std::pow(tmp55,-2);
double tmp118 = tmp53*tmp75*tmp117;
double tmp119 = 4*tmp43*tmp51*tmp76;
double tmp120 = tmp118 + tmp119;
double tmp121 = std::sqrt(tmp79);
double tmp122 = -(tmp59*tmp90);
double tmp123 = 2*tmp41*tmp62*tmp90;
double tmp124 = 2*tmp65*tmp67*tmp91*tmp95;
double tmp125 = tmp122 + tmp123 + tmp124;
double tmp126 = cp(1+_OFF);
double tmp127 = cp(4+_OFF);
double tmp128 = 1/tmp127;
double tmp129 = 2*tmp102*tmp43;
double tmp130 = 4*tmp108*tmp45;
double tmp131 = 2*tmp105*tmp46;
double tmp132 = tmp129 + tmp130 + tmp131;
double tmp133 = tmp70 + tmp10 + tmp20 + tmp12;
double tmp134 = -4*tmp22*tmp30;
double tmp135 = 2*tmp133*tmp51;
double tmp136 = -4*tmp35*tmp40;
double tmp137 = tmp134 + tmp135 + tmp136;
double tmp138 = -2*tmp35*tmp30*tmp82;
double tmp139 = -2*tmp22*tmp88*tmp82;
double tmp140 = tmp138 + tmp139;
double tmp141 = -0.5*(tmp51*tmp137*tmp92);
double tmp142 = tmp133*tmp56;
double tmp143 = tmp141 + tmp142;
double tmp144 = 2*tmp102*tmp32;
double tmp145 = 4*tmp105*tmp35;
double tmp146 = 2*tmp108*tmp37;
double tmp147 = tmp144 + tmp145 + tmp146;
double tmp148 = tmp134 + tmp136;
double tmp149 = tmp53*tmp137*tmp117;
double tmp150 = -2*tmp133*tmp51*tmp76;
double tmp151 = tmp149 + tmp150;
double tmp152 = -(tmp59*tmp140);
double tmp153 = 2*tmp41*tmp62*tmp140;
double tmp154 = 2*tmp65*tmp67*tmp91*tmp143;
double tmp155 = tmp152 + tmp153 + tmp154;
double tmp156 = 4*tmp105*tmp22;
double tmp157 = 4*tmp108*tmp25;
double tmp158 = tmp102*tmp27;
double tmp159 = tmp156 + tmp157 + tmp158;
double tmp160 = std::pow(tmp126,2);
double tmp161 = std::pow(M_PI,-2);
double tmp162 = fThrust(3+_OFF);
double tmp163 = 1/M_PI;
double tmp164 = fThrust(2+_OFF);
double tmp165 = z(1+_OFF);
double tmp166 = -4*tmp25*tmp30;
double tmp167 = -4*tmp45*tmp51;
double tmp168 = tmp70 + tmp10 + tmp11 + tmp13;
double tmp169 = 2*tmp168*tmp40;
double tmp170 = tmp166 + tmp167 + tmp169;
double tmp171 = tmp168*tmp30*tmp82;
double tmp172 = -2*tmp25*tmp88*tmp82;
double tmp173 = tmp171 + tmp172;
double tmp174 = -0.5*(tmp51*tmp170*tmp92);
double tmp175 = -2*tmp45*tmp56;
double tmp176 = tmp174 + tmp175;
double tmp177 = tmp166 + tmp169;
double tmp178 = tmp53*tmp170*tmp117;
double tmp179 = 4*tmp45*tmp51*tmp76;
double tmp180 = tmp178 + tmp179;
double tmp181 = -(tmp59*tmp173);
double tmp182 = 2*tmp41*tmp62*tmp173;
double tmp183 = 2*tmp65*tmp67*tmp91*tmp176;
double tmp184 = tmp181 + tmp182 + tmp183;
double tmp185 = 0.317*tmp57*tmp69*tmp51*tmp75*tmp56;
double tmp186 = -1.268*tmp57*tmp69*tmp43*tmp80;
double tmp187 = 0.317*tmp65*tmp57*tmp77*tmp55*tmp120*tmp91;
double tmp188 = 0.634*tmp65*tmp57*tmp77*tmp75*tmp121;
double tmp189 = 0.634*tmp57*tmp77*tmp55*tmp95;
double tmp190 = 0.634*tmp57*tmp51*tmp80*tmp125;
double tmp191 = tmp185 + tmp186 + tmp187 + tmp188 + tmp189 + tmp190;
double tmp192 = -(tmp0*tmp3);
double tmp193 = tmp103 + tmp192;
double tmp194 = -tmp97;
double tmp195 = tmp96 + tmp194 + tmp98 + tmp101;
double tmp196 = tmp0*tmp2;
double tmp197 = tmp1*tmp3;
double tmp198 = tmp196 + tmp197;
double tmp199 = 0.634*tmp57*tmp114*tmp30*tmp75*tmp109;
double tmp200 = -0.317*tmp65*tmp57*tmp77*tmp51*tmp40*tmp75*tmp109*tmp56;
double tmp201 = 0.317*tmp65*tmp57*tmp77*tmp51*tmp40*tmp115*tmp116*tmp80;
double tmp202 = 1.268*tmp65*tmp57*tmp77*tmp32*tmp51*tmp109*tmp80;
double tmp203 = 1.268*tmp65*tmp57*tmp77*tmp43*tmp40*tmp109*tmp80;
double tmp204 = -0.317*tmp57*tmp114*tmp30*tmp115*tmp116*tmp55;
double tmp205 = 0.634*tmp57*tmp114*tmp71*tmp109*tmp55;
double tmp206 = 0.634*tmp57*tmp112*tmp30*tmp109*tmp55*tmp90;
double tmp207 = 0.317*tmp57*tmp69*tmp40*tmp109*tmp55*tmp120*tmp91;
double tmp208 = 0.634*tmp57*tmp69*tmp40*tmp75*tmp109*tmp121;
double tmp209 = -0.317*tmp57*tmp69*tmp40*tmp115*tmp116*tmp55*tmp121;
double tmp210 = -1.268*tmp57*tmp69*tmp32*tmp109*tmp55*tmp121;
double tmp211 = -0.634*tmp57*tmp77*tmp51*tmp40*tmp109*tmp80*tmp91*tmp95;
double tmp212 = 0.634*tmp57*tmp40*tmp109*tmp55*tmp121*tmp125;
double tmp213 = tmp199 + tmp200 + tmp201 + tmp202 + tmp203 + tmp204 + tmp205 + tmp206 + tmp207 + tmp208 + tmp209 + tmp210 + tmp211 + tmp212;
double tmp214 = -0.634*tmp57*tmp114*tmp40*tmp75*tmp109;
double tmp215 = -0.317*tmp65*tmp57*tmp77*tmp30*tmp51*tmp75*tmp109*tmp56;
double tmp216 = 0.317*tmp65*tmp57*tmp77*tmp30*tmp51*tmp115*tmp116*tmp80;
double tmp217 = 1.268*tmp65*tmp57*tmp77*tmp43*tmp30*tmp109*tmp80;
double tmp218 = -0.634*tmp65*tmp57*tmp77*tmp71*tmp51*tmp109*tmp80;
double tmp219 = 0.317*tmp57*tmp114*tmp40*tmp115*tmp116*tmp55;
double tmp220 = 1.268*tmp57*tmp114*tmp32*tmp109*tmp55;
double tmp221 = -0.634*tmp57*tmp112*tmp40*tmp109*tmp55*tmp90;
double tmp222 = 0.317*tmp57*tmp69*tmp30*tmp109*tmp55*tmp120*tmp91;
double tmp223 = 0.634*tmp57*tmp69*tmp30*tmp75*tmp109*tmp121;
double tmp224 = -0.317*tmp57*tmp69*tmp30*tmp115*tmp116*tmp55*tmp121;
double tmp225 = 0.634*tmp57*tmp69*tmp71*tmp109*tmp55*tmp121;
double tmp226 = -0.634*tmp57*tmp77*tmp30*tmp51*tmp109*tmp80*tmp91*tmp95;
double tmp227 = 0.634*tmp57*tmp30*tmp109*tmp55*tmp121*tmp125;
double tmp228 = tmp161*tmp162*tmp75;
double tmp229 = (tmp163*tmp126*tmp164*tmp75*tmp56*tmp165)/2.;
double tmp230 = tmp228 + tmp229;
double tmp231 = 1.268*tmp160*tmp230;
double tmp232 = tmp214 + tmp215 + tmp216 + tmp217 + tmp218 + tmp219 + tmp220 + tmp221 + tmp222 + tmp223 + tmp224 + tmp225 + tmp226 + tmp227 + tmp231;
double tmp233 = 4*tmp193*tmp43;
double tmp234 = 4*tmp198*tmp45;
double tmp235 = tmp195*tmp46;
double tmp236 = tmp233 + tmp234 + tmp235;
double tmp237 = 0.317*tmp57*tmp69*tmp51*tmp137*tmp56;
double tmp238 = 0.634*tmp57*tmp69*tmp133*tmp80;
double tmp239 = 0.317*tmp65*tmp57*tmp77*tmp55*tmp151*tmp91;
double tmp240 = 0.634*tmp65*tmp57*tmp77*tmp137*tmp121;
double tmp241 = 0.634*tmp57*tmp77*tmp55*tmp143;
double tmp242 = 0.634*tmp57*tmp51*tmp80*tmp155;
double tmp243 = tmp237 + tmp238 + tmp239 + tmp240 + tmp241 + tmp242;
double tmp244 = 4*tmp193*tmp32;
double tmp245 = 2*tmp195*tmp35;
double tmp246 = 2*tmp198*tmp37;
double tmp247 = tmp244 + tmp245 + tmp246;
double tmp248 = 0.634*tmp57*tmp114*tmp30*tmp137*tmp109;
double tmp249 = -0.317*tmp65*tmp57*tmp77*tmp51*tmp40*tmp137*tmp109*tmp56;
double tmp250 = 0.317*tmp65*tmp57*tmp77*tmp51*tmp40*tmp148*tmp116*tmp80;
double tmp251 = 1.268*tmp65*tmp57*tmp77*tmp35*tmp51*tmp109*tmp80;
double tmp252 = -0.634*tmp65*tmp57*tmp77*tmp133*tmp40*tmp109*tmp80;
double tmp253 = -0.317*tmp57*tmp114*tmp30*tmp148*tmp116*tmp55;
double tmp254 = -1.268*tmp57*tmp114*tmp22*tmp109*tmp55;
double tmp255 = 0.634*tmp57*tmp112*tmp30*tmp109*tmp55*tmp140;
double tmp256 = 0.317*tmp57*tmp69*tmp40*tmp109*tmp55*tmp151*tmp91;
double tmp257 = 0.634*tmp57*tmp69*tmp40*tmp137*tmp109*tmp121;
double tmp258 = -0.317*tmp57*tmp69*tmp40*tmp148*tmp116*tmp55*tmp121;
double tmp259 = -1.268*tmp57*tmp69*tmp35*tmp109*tmp55*tmp121;
double tmp260 = -0.634*tmp57*tmp77*tmp51*tmp40*tmp109*tmp80*tmp91*tmp143;
double tmp261 = 0.634*tmp57*tmp40*tmp109*tmp55*tmp121*tmp155;
double tmp262 = tmp248 + tmp249 + tmp250 + tmp251 + tmp252 + tmp253 + tmp254 + tmp255 + tmp256 + tmp257 + tmp258 + tmp259 + tmp260 + tmp261;
double tmp263 = 2*tmp195*tmp22;
double tmp264 = 4*tmp198*tmp25;
double tmp265 = 2*tmp193*tmp27;
double tmp266 = tmp263 + tmp264 + tmp265;
double tmp267 = -0.634*tmp57*tmp114*tmp40*tmp137*tmp109;
double tmp268 = -0.317*tmp65*tmp57*tmp77*tmp30*tmp51*tmp137*tmp109*tmp56;
double tmp269 = 0.317*tmp65*tmp57*tmp77*tmp30*tmp51*tmp148*tmp116*tmp80;
double tmp270 = -0.634*tmp65*tmp57*tmp77*tmp133*tmp30*tmp109*tmp80;
double tmp271 = 1.268*tmp65*tmp57*tmp77*tmp22*tmp51*tmp109*tmp80;
double tmp272 = 0.317*tmp57*tmp114*tmp40*tmp148*tmp116*tmp55;
double tmp273 = 1.268*tmp57*tmp114*tmp35*tmp109*tmp55;
double tmp274 = -0.634*tmp57*tmp112*tmp40*tmp109*tmp55*tmp140;
double tmp275 = 0.317*tmp57*tmp69*tmp30*tmp109*tmp55*tmp151*tmp91;
double tmp276 = 0.634*tmp57*tmp69*tmp30*tmp137*tmp109*tmp121;
double tmp277 = -0.317*tmp57*tmp69*tmp30*tmp148*tmp116*tmp55*tmp121;
double tmp278 = -1.268*tmp57*tmp69*tmp22*tmp109*tmp55*tmp121;
double tmp279 = -0.634*tmp57*tmp77*tmp30*tmp51*tmp109*tmp80*tmp91*tmp143;
double tmp280 = 0.634*tmp57*tmp30*tmp109*tmp55*tmp121*tmp155;
double tmp281 = tmp161*tmp162*tmp137;
double tmp282 = (tmp163*tmp126*tmp164*tmp137*tmp56*tmp165)/2.;
double tmp283 = tmp281 + tmp282;
double tmp284 = 1.268*tmp160*tmp283;
double tmp285 = tmp267 + tmp268 + tmp269 + tmp270 + tmp271 + tmp272 + tmp273 + tmp274 + tmp275 + tmp276 + tmp277 + tmp278 + tmp279 + tmp280 + tmp284;
double tmp286 = 0.317*tmp57*tmp69*tmp51*tmp170*tmp56;
double tmp287 = -1.268*tmp57*tmp69*tmp45*tmp80;
double tmp288 = 0.317*tmp65*tmp57*tmp77*tmp55*tmp180*tmp91;
double tmp289 = 0.634*tmp65*tmp57*tmp77*tmp170*tmp121;
double tmp290 = 0.634*tmp57*tmp77*tmp55*tmp176;
double tmp291 = 0.634*tmp57*tmp51*tmp80*tmp184;
double tmp292 = tmp286 + tmp287 + tmp288 + tmp289 + tmp290 + tmp291;
double tmp293 = 0.634*tmp57*tmp114*tmp30*tmp170*tmp109;
double tmp294 = -0.317*tmp65*tmp57*tmp77*tmp51*tmp40*tmp170*tmp109*tmp56;
double tmp295 = 0.317*tmp65*tmp57*tmp77*tmp51*tmp40*tmp177*tmp116*tmp80;
double tmp296 = -0.634*tmp65*tmp57*tmp77*tmp168*tmp51*tmp109*tmp80;
double tmp297 = 1.268*tmp65*tmp57*tmp77*tmp45*tmp40*tmp109*tmp80;
double tmp298 = -0.317*tmp57*tmp114*tmp30*tmp177*tmp116*tmp55;
double tmp299 = -1.268*tmp57*tmp114*tmp25*tmp109*tmp55;
double tmp300 = 0.634*tmp57*tmp112*tmp30*tmp109*tmp55*tmp173;
double tmp301 = 0.317*tmp57*tmp69*tmp40*tmp109*tmp55*tmp180*tmp91;
double tmp302 = 0.634*tmp57*tmp69*tmp40*tmp170*tmp109*tmp121;
double tmp303 = -0.317*tmp57*tmp69*tmp40*tmp177*tmp116*tmp55*tmp121;
double tmp304 = 0.634*tmp57*tmp69*tmp168*tmp109*tmp55*tmp121;
double tmp305 = -0.634*tmp57*tmp77*tmp51*tmp40*tmp109*tmp80*tmp91*tmp176;
double tmp306 = 0.634*tmp57*tmp40*tmp109*tmp55*tmp121*tmp184;
double tmp307 = tmp293 + tmp294 + tmp295 + tmp296 + tmp297 + tmp298 + tmp299 + tmp300 + tmp301 + tmp302 + tmp303 + tmp304 + tmp305 + tmp306;
double tmp308 = -0.634*tmp57*tmp114*tmp40*tmp170*tmp109;
double tmp309 = -0.317*tmp65*tmp57*tmp77*tmp30*tmp51*tmp170*tmp109*tmp56;
double tmp310 = 0.317*tmp65*tmp57*tmp77*tmp30*tmp51*tmp177*tmp116*tmp80;
double tmp311 = 1.268*tmp65*tmp57*tmp77*tmp45*tmp30*tmp109*tmp80;
double tmp312 = 1.268*tmp65*tmp57*tmp77*tmp25*tmp51*tmp109*tmp80;
double tmp313 = 0.317*tmp57*tmp114*tmp40*tmp177*tmp116*tmp55;
double tmp314 = -0.634*tmp57*tmp114*tmp168*tmp109*tmp55;
double tmp315 = -0.634*tmp57*tmp112*tmp40*tmp109*tmp55*tmp173;
double tmp316 = 0.317*tmp57*tmp69*tmp30*tmp109*tmp55*tmp180*tmp91;
double tmp317 = 0.634*tmp57*tmp69*tmp30*tmp170*tmp109*tmp121;
double tmp318 = -0.317*tmp57*tmp69*tmp30*tmp177*tmp116*tmp55*tmp121;
double tmp319 = -1.268*tmp57*tmp69*tmp25*tmp109*tmp55*tmp121;
double tmp320 = -0.634*tmp57*tmp77*tmp30*tmp51*tmp109*tmp80*tmp91*tmp176;
double tmp321 = 0.634*tmp57*tmp30*tmp109*tmp55*tmp121*tmp184;
double tmp322 = tmp161*tmp162*tmp170;
double tmp323 = (tmp163*tmp126*tmp164*tmp170*tmp56*tmp165)/2.;
double tmp324 = tmp322 + tmp323;
double tmp325 = 1.268*tmp160*tmp324;
double tmp326 = tmp308 + tmp309 + tmp310 + tmp311 + tmp312 + tmp313 + tmp314 + tmp315 + tmp316 + tmp317 + tmp318 + tmp319 + tmp320 + tmp321 + tmp325;
double tmp327 = tmp0*tmp1;
double tmp328 = tmp327 + tmp107;
double tmp329 = -(tmp0*tmp2);
double tmp330 = tmp329 + tmp197;
double tmp331 = tmp96 + tmp194 + tmp99 + tmp100;
double tmp332 = 4*tmp328*tmp43;
double tmp333 = 2*tmp331*tmp45;
double tmp334 = 2*tmp330*tmp46;
double tmp335 = tmp332 + tmp333 + tmp334;
double tmp336 = 4*tmp328*tmp32;
double tmp337 = 4*tmp330*tmp35;
double tmp338 = tmp331*tmp37;
double tmp339 = tmp336 + tmp337 + tmp338;
double tmp340 = 4*tmp330*tmp22;
double tmp341 = 2*tmp331*tmp25;
double tmp342 = 2*tmp328*tmp27;
double tmp343 = tmp340 + tmp341 + tmp342;
double tmp344 = ibd(2+_OFF);
double tmp345 = ibd(3+_OFF);
double tmp346 = ibod(1+_OFF);
double tmp347 = ibod(2+_OFF);
double tmp348 = ibod(3+_OFF);
double tmp349 = ibd(1+_OFF);
double tmp350 = std::pow(tmp348,2);
double tmp351 = cBar(1+_OFF);
double tmp352 = cp(3+_OFF);
double tmp353 = x(39+_OFF);
double tmp354 = mRoll(2+_OFF);
double tmp355 = mRoll(3+_OFF);
double tmp356 = x(37+_OFF);
double tmp357 = mRoll(4+_OFF);
double tmp358 = mPitch(3+_OFF);
double tmp359 = mPitch(4+_OFF);
double tmp360 = x(38+_OFF);
double tmp361 = mYaw(2+_OFF);
double tmp362 = mYaw(3+_OFF);
double tmp363 = tmp349*tmp344*tmp345;
double tmp364 = std::pow(tmp346,2);
double tmp365 = -(tmp344*tmp364);
double tmp366 = std::pow(tmp347,2);
double tmp367 = -(tmp345*tmp366);
double tmp368 = 2*tmp346*tmp347*tmp348;
double tmp369 = -(tmp349*tmp350);
double tmp370 = tmp363 + tmp365 + tmp367 + tmp368 + tmp369;
double tmp371 = 1/tmp370;
double tmp372 = tmp358*tmp90;
double tmp373 = -0.25*(tmp351*tmp359*tmp75*tmp92*tmp360);
double tmp374 = tmp372 + tmp373;
double tmp375 = -(tmp354*tmp91*tmp95);
double tmp376 = -0.25*(tmp352*tmp355*tmp75*tmp92*tmp356);
double tmp377 = (tmp352*tmp357*tmp75*tmp92*tmp353)/4.;
double tmp378 = tmp375 + tmp376 + tmp377;
double tmp379 = tmp361*tmp91*tmp95;
double tmp380 = -0.25*(tmp352*tmp362*tmp75*tmp92*tmp353);
double tmp381 = tmp379 + tmp380;
double tmp382 = -(tmp65*tmp354);
double tmp383 = (tmp352*tmp355*tmp56*tmp356)/2.;
double tmp384 = -0.5*(tmp352*tmp357*tmp56*tmp353);
double tmp385 = mRoll(1+_OFF);
double tmp386 = z(2+_OFF);
double tmp387 = tmp385*tmp386;
double tmp388 = tmp382 + tmp383 + tmp384 + tmp387;
double tmp389 = mPitch(1+_OFF);
double tmp390 = -tmp389;
double tmp391 = tmp41*tmp358;
double tmp392 = (tmp351*tmp359*tmp56*tmp360)/2.;
double tmp393 = mPitch(2+_OFF);
double tmp394 = z(3+_OFF);
double tmp395 = -(tmp393*tmp394);
double tmp396 = tmp390 + tmp391 + tmp392 + tmp395;
double tmp397 = tmp65*tmp361;
double tmp398 = (tmp352*tmp362*tmp56*tmp353)/2.;
double tmp399 = mYaw(1+_OFF);
double tmp400 = z(4+_OFF);
double tmp401 = -(tmp399*tmp400);
double tmp402 = tmp397 + tmp398 + tmp401;
double tmp403 = tmp344*tmp345;
double tmp404 = -tmp350;
double tmp405 = tmp403 + tmp404;
double tmp406 = -(tmp345*tmp347);
double tmp407 = tmp346*tmp348;
double tmp408 = tmp406 + tmp407;
double tmp409 = tmp358*tmp140;
double tmp410 = -0.25*(tmp351*tmp359*tmp137*tmp92*tmp360);
double tmp411 = tmp409 + tmp410;
double tmp412 = -(tmp354*tmp91*tmp143);
double tmp413 = -0.25*(tmp352*tmp355*tmp137*tmp92*tmp356);
double tmp414 = (tmp352*tmp357*tmp137*tmp92*tmp353)/4.;
double tmp415 = tmp412 + tmp413 + tmp414;
double tmp416 = tmp361*tmp91*tmp143;
double tmp417 = -0.25*(tmp352*tmp362*tmp137*tmp92*tmp353);
double tmp418 = tmp416 + tmp417;
double tmp419 = -(tmp344*tmp346);
double tmp420 = tmp347*tmp348;
double tmp421 = tmp419 + tmp420;
double tmp422 = tmp358*tmp173;
double tmp423 = -0.25*(tmp351*tmp359*tmp170*tmp92*tmp360);
double tmp424 = tmp422 + tmp423;
double tmp425 = -(tmp354*tmp91*tmp176);
double tmp426 = -0.25*(tmp352*tmp355*tmp170*tmp92*tmp356);
double tmp427 = (tmp352*tmp357*tmp170*tmp92*tmp353)/4.;
double tmp428 = tmp425 + tmp426 + tmp427;
double tmp429 = tmp361*tmp91*tmp176;
double tmp430 = -0.25*(tmp352*tmp362*tmp170*tmp92*tmp353);
double tmp431 = tmp429 + tmp430;
double tmp432 = 0.634*tmp351*tmp57*tmp132*tmp55*tmp374;
double tmp433 = 0.634*tmp57*tmp352*tmp159*tmp55*tmp378;
double tmp434 = 0.634*tmp57*tmp352*tmp147*tmp55*tmp381;
double tmp435 = 0.634*tmp57*tmp352*tmp159*tmp75*tmp388;
double tmp436 = 0.634*tmp351*tmp57*tmp132*tmp75*tmp396;
double tmp437 = 0.634*tmp57*tmp352*tmp147*tmp75*tmp402;
double tmp438 = tmp432 + tmp433 + tmp434 + tmp435 + tmp436 + tmp437;
double tmp439 = 0.634*tmp351*tmp57*tmp236*tmp55*tmp374;
double tmp440 = 0.634*tmp57*tmp352*tmp266*tmp55*tmp378;
double tmp441 = 0.634*tmp57*tmp352*tmp247*tmp55*tmp381;
double tmp442 = 0.634*tmp57*tmp352*tmp266*tmp75*tmp388;
double tmp443 = 0.634*tmp351*tmp57*tmp236*tmp75*tmp396;
double tmp444 = 0.634*tmp57*tmp352*tmp247*tmp75*tmp402;
double tmp445 = tmp439 + tmp440 + tmp441 + tmp442 + tmp443 + tmp444;
double tmp446 = 0.634*tmp351*tmp57*tmp335*tmp55*tmp374;
double tmp447 = 0.634*tmp57*tmp352*tmp343*tmp55*tmp378;
double tmp448 = 0.634*tmp57*tmp352*tmp339*tmp55*tmp381;
double tmp449 = 0.634*tmp57*tmp352*tmp343*tmp75*tmp388;
double tmp450 = 0.634*tmp351*tmp57*tmp335*tmp75*tmp396;
double tmp451 = 0.634*tmp57*tmp352*tmp339*tmp75*tmp402;
double tmp452 = tmp446 + tmp447 + tmp448 + tmp449 + tmp450 + tmp451;
double tmp453 = 0.634*tmp351*tmp57*tmp132*tmp55*tmp411;
double tmp454 = 0.634*tmp57*tmp352*tmp159*tmp55*tmp415;
double tmp455 = 0.634*tmp57*tmp352*tmp147*tmp55*tmp418;
double tmp456 = 0.634*tmp57*tmp352*tmp159*tmp137*tmp388;
double tmp457 = 0.634*tmp351*tmp57*tmp132*tmp137*tmp396;
double tmp458 = 0.634*tmp57*tmp352*tmp147*tmp137*tmp402;
double tmp459 = tmp453 + tmp454 + tmp455 + tmp456 + tmp457 + tmp458;
double tmp460 = tmp349*tmp345;
double tmp461 = -tmp364;
double tmp462 = tmp460 + tmp461;
double tmp463 = 0.634*tmp351*tmp57*tmp236*tmp55*tmp411;
double tmp464 = 0.634*tmp57*tmp352*tmp266*tmp55*tmp415;
double tmp465 = 0.634*tmp57*tmp352*tmp247*tmp55*tmp418;
double tmp466 = 0.634*tmp57*tmp352*tmp266*tmp137*tmp388;
double tmp467 = 0.634*tmp351*tmp57*tmp236*tmp137*tmp396;
double tmp468 = 0.634*tmp57*tmp352*tmp247*tmp137*tmp402;
double tmp469 = tmp463 + tmp464 + tmp465 + tmp466 + tmp467 + tmp468;
double tmp470 = tmp346*tmp347;
double tmp471 = -(tmp349*tmp348);
double tmp472 = tmp470 + tmp471;
double tmp473 = 0.634*tmp351*tmp57*tmp335*tmp55*tmp411;
double tmp474 = 0.634*tmp57*tmp352*tmp343*tmp55*tmp415;
double tmp475 = 0.634*tmp57*tmp352*tmp339*tmp55*tmp418;
double tmp476 = 0.634*tmp57*tmp352*tmp343*tmp137*tmp388;
double tmp477 = 0.634*tmp351*tmp57*tmp335*tmp137*tmp396;
double tmp478 = 0.634*tmp57*tmp352*tmp339*tmp137*tmp402;
double tmp479 = tmp473 + tmp474 + tmp475 + tmp476 + tmp477 + tmp478;
double tmp480 = 0.634*tmp351*tmp57*tmp132*tmp55*tmp424;
double tmp481 = 0.634*tmp57*tmp352*tmp159*tmp55*tmp428;
double tmp482 = 0.634*tmp57*tmp352*tmp147*tmp55*tmp431;
double tmp483 = 0.634*tmp57*tmp352*tmp159*tmp170*tmp388;
double tmp484 = 0.634*tmp351*tmp57*tmp132*tmp170*tmp396;
double tmp485 = 0.634*tmp57*tmp352*tmp147*tmp170*tmp402;
double tmp486 = tmp480 + tmp481 + tmp482 + tmp483 + tmp484 + tmp485;
double tmp487 = 0.634*tmp351*tmp57*tmp236*tmp55*tmp424;
double tmp488 = 0.634*tmp57*tmp352*tmp266*tmp55*tmp428;
double tmp489 = 0.634*tmp57*tmp352*tmp247*tmp55*tmp431;
double tmp490 = 0.634*tmp57*tmp352*tmp266*tmp170*tmp388;
double tmp491 = 0.634*tmp351*tmp57*tmp236*tmp170*tmp396;
double tmp492 = 0.634*tmp57*tmp352*tmp247*tmp170*tmp402;
double tmp493 = tmp487 + tmp488 + tmp489 + tmp490 + tmp491 + tmp492;
double tmp494 = 0.634*tmp351*tmp57*tmp335*tmp55*tmp424;
double tmp495 = 0.634*tmp57*tmp352*tmp343*tmp55*tmp428;
double tmp496 = 0.634*tmp57*tmp352*tmp339*tmp55*tmp431;
double tmp497 = 0.634*tmp57*tmp352*tmp343*tmp170*tmp388;
double tmp498 = 0.634*tmp351*tmp57*tmp335*tmp170*tmp396;
double tmp499 = 0.634*tmp57*tmp352*tmp339*tmp170*tmp402;
double tmp500 = tmp494 + tmp495 + tmp496 + tmp497 + tmp498 + tmp499;
double tmp501 = tmp349*tmp344;
double tmp502 = -tmp366;
double tmp503 = tmp501 + tmp502;
J(1+_OFF,1+_OFF) = -(tmp128*(tmp132*tmp191 + tmp147*tmp213 + tmp159*tmp232));
J(1+_OFF,2+_OFF) = -(tmp128*(tmp132*tmp243 + tmp147*tmp262 + tmp159*tmp285));
J(1+_OFF,3+_OFF) = -(tmp128*(tmp132*tmp292 + tmp147*tmp307 + tmp159*tmp326));
J(2+_OFF,1+_OFF) = -(tmp128*(tmp236*tmp191 + tmp247*tmp213 + tmp266*tmp232));
J(2+_OFF,2+_OFF) = -(tmp128*(tmp236*tmp243 + tmp247*tmp262 + tmp266*tmp285));
J(2+_OFF,3+_OFF) = -(tmp128*(tmp236*tmp292 + tmp247*tmp307 + tmp266*tmp326));
J(3+_OFF,1+_OFF) = -(tmp128*(tmp335*tmp191 + tmp339*tmp213 + tmp343*tmp232));
J(3+_OFF,2+_OFF) = -(tmp128*(tmp335*tmp243 + tmp339*tmp262 + tmp343*tmp285));
J(3+_OFF,3+_OFF) = -(tmp128*(tmp335*tmp292 + tmp339*tmp307 + tmp343*tmp326));
J(4+_OFF,1+_OFF) = -(tmp405*tmp371*tmp438) - tmp408*tmp371*tmp445 - tmp421*tmp371*tmp452;
J(4+_OFF,2+_OFF) = -(tmp405*tmp371*tmp459) - tmp408*tmp371*tmp469 - tmp421*tmp371*tmp479;
J(4+_OFF,3+_OFF) = -(tmp405*tmp371*tmp486) - tmp408*tmp371*tmp493 - tmp421*tmp371*tmp500;
J(5+_OFF,1+_OFF) = -(tmp408*tmp371*tmp438) - tmp462*tmp371*tmp445 - tmp472*tmp371*tmp452;
J(5+_OFF,2+_OFF) = -(tmp408*tmp371*tmp459) - tmp462*tmp371*tmp469 - tmp472*tmp371*tmp479;
J(5+_OFF,3+_OFF) = -(tmp408*tmp371*tmp486) - tmp462*tmp371*tmp493 - tmp472*tmp371*tmp500;
J(6+_OFF,1+_OFF) = -(tmp421*tmp371*tmp438) - tmp472*tmp371*tmp445 - tmp503*tmp371*tmp452;
J(6+_OFF,2+_OFF) = -(tmp421*tmp371*tmp459) - tmp472*tmp371*tmp469 - tmp503*tmp371*tmp479;
J(6+_OFF,3+_OFF) = -(tmp421*tmp371*tmp486) - tmp472*tmp371*tmp493 - tmp503*tmp371*tmp500;
