double tmp0 = x(4+_OFF);
double tmp1 = x(6+_OFF);
double tmp2 = x(5+_OFF);
double tmp3 = x(7+_OFF);
double tmp4 = x(31+_OFF);
double tmp5 = x(30+_OFF);
double tmp6 = x(33+_OFF);
double tmp7 = x(32+_OFF);
double tmp8 = wind(1+_OFF);
double tmp9 = tmp4*tmp6;
double tmp10 = wind(2+_OFF);
double tmp11 = wind(3+_OFF);
double tmp12 = std::pow(tmp5,2);
double tmp13 = std::pow(tmp4,2);
double tmp14 = std::pow(tmp7,2);
double tmp15 = -tmp14;
double tmp16 = std::pow(tmp6,2);
double tmp17 = tmp4*tmp7;
double tmp18 = tmp5*tmp6;
double tmp19 = tmp17 + tmp18;
double tmp20 = -2*tmp10*tmp19;
double tmp21 = -(tmp5*tmp7);
double tmp22 = tmp21 + tmp9;
double tmp23 = -2*tmp11*tmp22;
double tmp24 = -tmp16;
double tmp25 = tmp12 + tmp13 + tmp15 + tmp24;
double tmp26 = -(tmp8*tmp25);
double tmp27 = x(34+_OFF);
double tmp28 = tmp20 + tmp23 + tmp26 + tmp27;
double tmp29 = tmp5*tmp7;
double tmp30 = tmp29 + tmp9;
double tmp31 = -2*tmp8*tmp30;
double tmp32 = -(tmp5*tmp4);
double tmp33 = tmp7*tmp6;
double tmp34 = tmp32 + tmp33;
double tmp35 = -2*tmp10*tmp34;
double tmp36 = -tmp13;
double tmp37 = tmp12 + tmp36 + tmp15 + tmp16;
double tmp38 = -(tmp11*tmp37);
double tmp39 = x(36+_OFF);
double tmp40 = tmp31 + tmp35 + tmp38 + tmp39;
double tmp41 = std::atan2(tmp40,tmp28);
double tmp42 = -(tmp5*tmp6);
double tmp43 = tmp17 + tmp42;
double tmp44 = -2*tmp8*tmp43;
double tmp45 = tmp5*tmp4;
double tmp46 = tmp45 + tmp33;
double tmp47 = -2*tmp11*tmp46;
double tmp48 = tmp12 + tmp36 + tmp14 + tmp24;
double tmp49 = -(tmp10*tmp48);
double tmp50 = x(35+_OFF);
double tmp51 = tmp44 + tmp47 + tmp49 + tmp50;
double tmp52 = std::pow(tmp28,2);
double tmp53 = std::pow(tmp51,2);
double tmp54 = std::pow(tmp40,2);
double tmp55 = tmp52 + tmp53 + tmp54;
double tmp56 = 1/std::sqrt(tmp55);
double tmp57 = tmp51*tmp56;
double tmp58 = std::asin(tmp57);
double tmp59 = cp(2+_OFF);
double tmp60 = cp(4+_OFF);
double tmp61 = 1/tmp60;
double tmp62 = -(tmp0*tmp1);
double tmp63 = tmp2*tmp3;
double tmp64 = tmp62 + tmp63;
double tmp65 = tmp2*tmp1;
double tmp66 = tmp0*tmp3;
double tmp67 = tmp65 + tmp66;
double tmp68 = std::pow(tmp0,2);
double tmp69 = std::pow(tmp2,2);
double tmp70 = std::pow(tmp1,2);
double tmp71 = -tmp70;
double tmp72 = std::pow(tmp3,2);
double tmp73 = -tmp72;
double tmp74 = tmp68 + tmp69 + tmp71 + tmp73;
double tmp75 = fLat(1+_OFF);
double tmp76 = std::sqrt(tmp55);
double tmp77 = tmp52 + tmp54;
double tmp78 = 1/std::sqrt(tmp77);
double tmp79 = fDrag(1+_OFF);
double tmp80 = fDrag(2+_OFF);
double tmp81 = -(tmp41*tmp80);
double tmp82 = std::pow(tmp41,2);
double tmp83 = fDrag(3+_OFF);
double tmp84 = tmp82*tmp83;
double tmp85 = std::pow(tmp58,2);
double tmp86 = fDrag(4+_OFF);
double tmp87 = tmp85*tmp86;
double tmp88 = tmp79 + tmp81 + tmp84 + tmp87;
double tmp89 = 1/tmp55;
double tmp90 = -(tmp53*tmp89);
double tmp91 = 1 + tmp90;
double tmp92 = std::sqrt(tmp91);
double tmp93 = -2*tmp10*tmp5;
double tmp94 = -2*tmp11*tmp4;
double tmp95 = 2*tmp8*tmp6;
double tmp96 = tmp93 + tmp94 + tmp95;
double tmp97 = -2*tmp8*tmp5;
double tmp98 = 2*tmp11*tmp7;
double tmp99 = -2*tmp10*tmp6;
double tmp100 = tmp97 + tmp98 + tmp99;
double tmp101 = 2*tmp100*tmp28;
double tmp102 = 2*tmp96*tmp51;
double tmp103 = -2*tmp11*tmp5;
double tmp104 = 2*tmp10*tmp4;
double tmp105 = -2*tmp8*tmp7;
double tmp106 = tmp103 + tmp104 + tmp105;
double tmp107 = 2*tmp106*tmp40;
double tmp108 = tmp101 + tmp102 + tmp107;
double tmp109 = 1/tmp77;
double tmp110 = tmp106*tmp28*tmp109;
double tmp111 = 2*tmp8*tmp30;
double tmp112 = 2*tmp10*tmp34;
double tmp113 = tmp11*tmp37;
double tmp114 = -tmp39;
double tmp115 = tmp111 + tmp112 + tmp113 + tmp114;
double tmp116 = tmp100*tmp115*tmp109;
double tmp117 = tmp110 + tmp116;
double tmp118 = 1/std::sqrt(tmp91);
double tmp119 = std::pow(tmp55,-1.5);
double tmp120 = -(tmp51*tmp108*tmp119)/2.;
double tmp121 = tmp96*tmp56;
double tmp122 = tmp120 + tmp121;
double tmp123 = fLift(1+_OFF);
double tmp124 = -tmp123;
double tmp125 = fLift(2+_OFF);
double tmp126 = tmp41*tmp125;
double tmp127 = tmp124 + tmp126;
double tmp128 = tmp101 + tmp107;
double tmp129 = std::pow(tmp77,-1.5);
double tmp130 = std::pow(tmp55,-2);
double tmp131 = tmp53*tmp108*tmp130;
double tmp132 = -2*tmp96*tmp51*tmp89;
double tmp133 = tmp131 + tmp132;
double tmp134 = -(tmp80*tmp117);
double tmp135 = 2*tmp41*tmp83*tmp117;
double tmp136 = 2*tmp58*tmp86*tmp118*tmp122;
double tmp137 = tmp134 + tmp135 + tmp136;
double tmp138 = cp(1+_OFF);
double tmp139 = std::pow(tmp138,2);
double tmp140 = std::pow(M_PI,-2);
double tmp141 = fThrust(3+_OFF);
double tmp142 = 1/M_PI;
double tmp143 = fThrust(2+_OFF);
double tmp144 = z(1+_OFF);
double tmp145 = 4*tmp64*tmp5;
double tmp146 = -4*tmp67*tmp4;
double tmp147 = 2*tmp74*tmp7;
double tmp148 = tmp145 + tmp146 + tmp147;
double tmp149 = 0.634*tmp59*tmp88*tmp51*tmp76;
double tmp150 = 0.634*tmp58*tmp59*tmp75*tmp55*tmp92;
double tmp151 = 0. + tmp149 + tmp150;
double tmp152 = -0.634*tmp58*tmp59*tmp75*tmp51*tmp40*tmp78*tmp76;
double tmp153 = 0.634*tmp59*tmp127*tmp28*tmp78*tmp55;
double tmp154 = 0.634*tmp59*tmp88*tmp40*tmp78*tmp55*tmp92;
double tmp155 = tmp152 + tmp153 + tmp154;
double tmp156 = 2*tmp74*tmp43;
double tmp157 = 4*tmp64*tmp46;
double tmp158 = 2*tmp67*tmp48;
double tmp159 = tmp156 + tmp157 + tmp158;
double tmp160 = -2*tmp8*tmp4;
double tmp161 = -2*tmp10*tmp7;
double tmp162 = -2*tmp11*tmp6;
double tmp163 = tmp160 + tmp161 + tmp162;
double tmp164 = 2*tmp163*tmp28;
double tmp165 = 2*tmp106*tmp51;
double tmp166 = 2*tmp10*tmp5;
double tmp167 = 2*tmp11*tmp4;
double tmp168 = -2*tmp8*tmp6;
double tmp169 = tmp166 + tmp167 + tmp168;
double tmp170 = 2*tmp169*tmp40;
double tmp171 = tmp164 + tmp165 + tmp170;
double tmp172 = tmp169*tmp28*tmp109;
double tmp173 = tmp163*tmp115*tmp109;
double tmp174 = tmp172 + tmp173;
double tmp175 = -(tmp51*tmp171*tmp119)/2.;
double tmp176 = tmp106*tmp56;
double tmp177 = tmp175 + tmp176;
double tmp178 = 2*tmp74*tmp30;
double tmp179 = 4*tmp67*tmp34;
double tmp180 = 2*tmp64*tmp37;
double tmp181 = tmp178 + tmp179 + tmp180;
double tmp182 = tmp164 + tmp170;
double tmp183 = tmp53*tmp171*tmp130;
double tmp184 = -2*tmp106*tmp51*tmp89;
double tmp185 = tmp183 + tmp184;
double tmp186 = -(tmp80*tmp174);
double tmp187 = 2*tmp41*tmp83*tmp174;
double tmp188 = 2*tmp58*tmp86*tmp118*tmp177;
double tmp189 = tmp186 + tmp187 + tmp188;
double tmp190 = 4*tmp67*tmp19;
double tmp191 = 4*tmp64*tmp22;
double tmp192 = tmp74*tmp25;
double tmp193 = tmp190 + tmp191 + tmp192;
double tmp194 = -0.634*tmp58*tmp59*tmp75*tmp28*tmp51*tmp78*tmp76;
double tmp195 = -0.634*tmp59*tmp127*tmp40*tmp78*tmp55;
double tmp196 = 0.634*tmp59*tmp88*tmp28*tmp78*tmp55*tmp92;
double tmp197 = tmp140*tmp141*tmp55;
double tmp198 = tmp142*tmp138*tmp143*tmp76*tmp144;
double tmp199 = fThrust(1+_OFF);
double tmp200 = std::pow(tmp144,2);
double tmp201 = tmp139*tmp199*tmp200;
double tmp202 = tmp197 + tmp198 + tmp201;
double tmp203 = 1.268*tmp139*tmp202;
double tmp204 = tmp194 + tmp195 + tmp196 + tmp203;
double tmp205 = 2*tmp74*tmp4;
double tmp206 = 4*tmp67*tmp7;
double tmp207 = 4*tmp64*tmp6;
double tmp208 = tmp205 + tmp206 + tmp207;
double tmp209 = 2*tmp74*tmp5;
double tmp210 = -4*tmp64*tmp7;
double tmp211 = 4*tmp67*tmp6;
double tmp212 = tmp209 + tmp210 + tmp211;
double tmp213 = 2*tmp11*tmp5;
double tmp214 = -2*tmp10*tmp4;
double tmp215 = 2*tmp8*tmp7;
double tmp216 = tmp213 + tmp214 + tmp215;
double tmp217 = 2*tmp216*tmp28;
double tmp218 = 2*tmp163*tmp51;
double tmp219 = 2*tmp100*tmp40;
double tmp220 = tmp217 + tmp218 + tmp219;
double tmp221 = tmp100*tmp28*tmp109;
double tmp222 = tmp216*tmp115*tmp109;
double tmp223 = tmp221 + tmp222;
double tmp224 = -(tmp51*tmp220*tmp119)/2.;
double tmp225 = tmp163*tmp56;
double tmp226 = tmp224 + tmp225;
double tmp227 = -0.634*tmp58*tmp59*tmp75*tmp100*tmp51*tmp78*tmp76;
double tmp228 = tmp217 + tmp219;
double tmp229 = tmp53*tmp220*tmp130;
double tmp230 = -2*tmp163*tmp51*tmp89;
double tmp231 = tmp229 + tmp230;
double tmp232 = 0.634*tmp59*tmp88*tmp100*tmp78*tmp55*tmp92;
double tmp233 = -(tmp80*tmp223);
double tmp234 = 2*tmp41*tmp83*tmp223;
double tmp235 = 2*tmp58*tmp86*tmp118*tmp226;
double tmp236 = tmp233 + tmp234 + tmp235;
double tmp237 = 2*tmp8*tmp5;
double tmp238 = -2*tmp11*tmp7;
double tmp239 = 2*tmp10*tmp6;
double tmp240 = tmp237 + tmp238 + tmp239;
double tmp241 = 2*tmp96*tmp28;
double tmp242 = 2*tmp240*tmp51;
double tmp243 = 2*tmp163*tmp40;
double tmp244 = tmp241 + tmp242 + tmp243;
double tmp245 = tmp163*tmp28*tmp109;
double tmp246 = tmp96*tmp115*tmp109;
double tmp247 = tmp245 + tmp246;
double tmp248 = -(tmp51*tmp244*tmp119)/2.;
double tmp249 = tmp240*tmp56;
double tmp250 = tmp248 + tmp249;
double tmp251 = -0.634*tmp58*tmp59*tmp75*tmp163*tmp51*tmp78*tmp76;
double tmp252 = tmp241 + tmp243;
double tmp253 = tmp53*tmp244*tmp130;
double tmp254 = -2*tmp240*tmp51*tmp89;
double tmp255 = tmp253 + tmp254;
double tmp256 = 0.634*tmp59*tmp88*tmp163*tmp78*tmp55*tmp92;
double tmp257 = -(tmp80*tmp247);
double tmp258 = 2*tmp41*tmp83*tmp247;
double tmp259 = 2*tmp58*tmp86*tmp118*tmp250;
double tmp260 = tmp257 + tmp258 + tmp259;
double tmp261 = 4*tmp67*tmp5;
double tmp262 = 4*tmp64*tmp4;
double tmp263 = -2*tmp74*tmp6;
double tmp264 = tmp261 + tmp262 + tmp263;
double tmp265 = tmp0*tmp2;
double tmp266 = tmp1*tmp3;
double tmp267 = tmp265 + tmp266;
double tmp268 = -tmp69;
double tmp269 = tmp68 + tmp268 + tmp70 + tmp73;
double tmp270 = -(tmp0*tmp3);
double tmp271 = tmp65 + tmp270;
double tmp272 = 0.317*tmp59*tmp88*tmp51*tmp108*tmp56;
double tmp273 = 0.634*tmp59*tmp88*tmp96*tmp76;
double tmp274 = 0.317*tmp58*tmp59*tmp75*tmp55*tmp133*tmp118;
double tmp275 = 0.634*tmp58*tmp59*tmp75*tmp108*tmp92;
double tmp276 = 0.634*tmp59*tmp75*tmp55*tmp122;
double tmp277 = 0.634*tmp59*tmp51*tmp76*tmp137;
double tmp278 = tmp272 + tmp273 + tmp274 + tmp275 + tmp276 + tmp277;
double tmp279 = 0.634*tmp59*tmp127*tmp28*tmp108*tmp78;
double tmp280 = -0.317*tmp58*tmp59*tmp75*tmp51*tmp40*tmp108*tmp78*tmp56;
double tmp281 = 0.317*tmp58*tmp59*tmp75*tmp51*tmp40*tmp128*tmp129*tmp76;
double tmp282 = -0.634*tmp58*tmp59*tmp75*tmp106*tmp51*tmp78*tmp76;
double tmp283 = -0.634*tmp58*tmp59*tmp75*tmp96*tmp40*tmp78*tmp76;
double tmp284 = -0.317*tmp59*tmp127*tmp28*tmp128*tmp129*tmp55;
double tmp285 = 0.634*tmp59*tmp127*tmp100*tmp78*tmp55;
double tmp286 = 0.634*tmp59*tmp125*tmp28*tmp78*tmp55*tmp117;
double tmp287 = 0.317*tmp59*tmp88*tmp40*tmp78*tmp55*tmp133*tmp118;
double tmp288 = 0.634*tmp59*tmp88*tmp40*tmp108*tmp78*tmp92;
double tmp289 = -0.317*tmp59*tmp88*tmp40*tmp128*tmp129*tmp55*tmp92;
double tmp290 = 0.634*tmp59*tmp88*tmp106*tmp78*tmp55*tmp92;
double tmp291 = -0.634*tmp59*tmp75*tmp51*tmp40*tmp78*tmp76*tmp118*tmp122;
double tmp292 = 0.634*tmp59*tmp40*tmp78*tmp55*tmp92*tmp137;
double tmp293 = tmp279 + tmp280 + tmp281 + tmp282 + tmp283 + tmp284 + tmp285 + tmp286 + tmp287 + tmp288 + tmp289 + tmp290 + tmp291 + tmp292;
double tmp294 = -0.634*tmp59*tmp127*tmp40*tmp108*tmp78;
double tmp295 = -0.317*tmp58*tmp59*tmp75*tmp28*tmp51*tmp108*tmp78*tmp56;
double tmp296 = 0.317*tmp58*tmp59*tmp75*tmp28*tmp51*tmp128*tmp129*tmp76;
double tmp297 = -0.634*tmp58*tmp59*tmp75*tmp96*tmp28*tmp78*tmp76;
double tmp298 = 0.317*tmp59*tmp127*tmp40*tmp128*tmp129*tmp55;
double tmp299 = -0.634*tmp59*tmp127*tmp106*tmp78*tmp55;
double tmp300 = -0.634*tmp59*tmp125*tmp40*tmp78*tmp55*tmp117;
double tmp301 = 0.317*tmp59*tmp88*tmp28*tmp78*tmp55*tmp133*tmp118;
double tmp302 = 0.634*tmp59*tmp88*tmp28*tmp108*tmp78*tmp92;
double tmp303 = -0.317*tmp59*tmp88*tmp28*tmp128*tmp129*tmp55*tmp92;
double tmp304 = -0.634*tmp59*tmp75*tmp28*tmp51*tmp78*tmp76*tmp118*tmp122;
double tmp305 = 0.634*tmp59*tmp28*tmp78*tmp55*tmp92*tmp137;
double tmp306 = tmp140*tmp141*tmp108;
double tmp307 = (tmp142*tmp138*tmp143*tmp108*tmp56*tmp144)/2.;
double tmp308 = tmp306 + tmp307;
double tmp309 = 1.268*tmp139*tmp308;
double tmp310 = tmp294 + tmp295 + tmp296 + tmp297 + tmp227 + tmp298 + tmp299 + tmp300 + tmp301 + tmp302 + tmp303 + tmp232 + tmp304 + tmp305 + tmp309;
double tmp311 = 4*tmp267*tmp5;
double tmp312 = -2*tmp269*tmp4;
double tmp313 = 4*tmp271*tmp7;
double tmp314 = tmp311 + tmp312 + tmp313;
double tmp315 = 4*tmp271*tmp43;
double tmp316 = 4*tmp267*tmp46;
double tmp317 = tmp269*tmp48;
double tmp318 = tmp315 + tmp316 + tmp317;
double tmp319 = 0.317*tmp59*tmp88*tmp51*tmp171*tmp56;
double tmp320 = 0.634*tmp59*tmp88*tmp106*tmp76;
double tmp321 = 0.317*tmp58*tmp59*tmp75*tmp55*tmp185*tmp118;
double tmp322 = 0.634*tmp58*tmp59*tmp75*tmp171*tmp92;
double tmp323 = 0.634*tmp59*tmp75*tmp55*tmp177;
double tmp324 = 0.634*tmp59*tmp51*tmp76*tmp189;
double tmp325 = tmp319 + tmp320 + tmp321 + tmp322 + tmp323 + tmp324;
double tmp326 = 4*tmp271*tmp30;
double tmp327 = 2*tmp269*tmp34;
double tmp328 = 2*tmp267*tmp37;
double tmp329 = tmp326 + tmp327 + tmp328;
double tmp330 = 0.634*tmp59*tmp127*tmp28*tmp171*tmp78;
double tmp331 = -0.317*tmp58*tmp59*tmp75*tmp51*tmp40*tmp171*tmp78*tmp56;
double tmp332 = 0.317*tmp58*tmp59*tmp75*tmp51*tmp40*tmp182*tmp129*tmp76;
double tmp333 = -0.634*tmp58*tmp59*tmp75*tmp169*tmp51*tmp78*tmp76;
double tmp334 = -0.634*tmp58*tmp59*tmp75*tmp106*tmp40*tmp78*tmp76;
double tmp335 = -0.317*tmp59*tmp127*tmp28*tmp182*tmp129*tmp55;
double tmp336 = 0.634*tmp59*tmp127*tmp163*tmp78*tmp55;
double tmp337 = 0.634*tmp59*tmp125*tmp28*tmp78*tmp55*tmp174;
double tmp338 = 0.317*tmp59*tmp88*tmp40*tmp78*tmp55*tmp185*tmp118;
double tmp339 = 0.634*tmp59*tmp88*tmp40*tmp171*tmp78*tmp92;
double tmp340 = -0.317*tmp59*tmp88*tmp40*tmp182*tmp129*tmp55*tmp92;
double tmp341 = 0.634*tmp59*tmp88*tmp169*tmp78*tmp55*tmp92;
double tmp342 = -0.634*tmp59*tmp75*tmp51*tmp40*tmp78*tmp76*tmp118*tmp177;
double tmp343 = 0.634*tmp59*tmp40*tmp78*tmp55*tmp92*tmp189;
double tmp344 = tmp330 + tmp331 + tmp332 + tmp333 + tmp334 + tmp335 + tmp336 + tmp337 + tmp338 + tmp339 + tmp340 + tmp341 + tmp342 + tmp343;
double tmp345 = 2*tmp269*tmp19;
double tmp346 = 4*tmp267*tmp22;
double tmp347 = 2*tmp271*tmp25;
double tmp348 = tmp345 + tmp346 + tmp347;
double tmp349 = -0.634*tmp59*tmp127*tmp40*tmp171*tmp78;
double tmp350 = -0.317*tmp58*tmp59*tmp75*tmp28*tmp51*tmp171*tmp78*tmp56;
double tmp351 = 0.317*tmp58*tmp59*tmp75*tmp28*tmp51*tmp182*tmp129*tmp76;
double tmp352 = -0.634*tmp58*tmp59*tmp75*tmp106*tmp28*tmp78*tmp76;
double tmp353 = 0.317*tmp59*tmp127*tmp40*tmp182*tmp129*tmp55;
double tmp354 = -0.634*tmp59*tmp127*tmp169*tmp78*tmp55;
double tmp355 = -0.634*tmp59*tmp125*tmp40*tmp78*tmp55*tmp174;
double tmp356 = 0.317*tmp59*tmp88*tmp28*tmp78*tmp55*tmp185*tmp118;
double tmp357 = 0.634*tmp59*tmp88*tmp28*tmp171*tmp78*tmp92;
double tmp358 = -0.317*tmp59*tmp88*tmp28*tmp182*tmp129*tmp55*tmp92;
double tmp359 = -0.634*tmp59*tmp75*tmp28*tmp51*tmp78*tmp76*tmp118*tmp177;
double tmp360 = 0.634*tmp59*tmp28*tmp78*tmp55*tmp92*tmp189;
double tmp361 = tmp140*tmp141*tmp171;
double tmp362 = (tmp142*tmp138*tmp143*tmp171*tmp56*tmp144)/2.;
double tmp363 = tmp361 + tmp362;
double tmp364 = 1.268*tmp139*tmp363;
double tmp365 = tmp349 + tmp350 + tmp351 + tmp352 + tmp251 + tmp353 + tmp354 + tmp355 + tmp356 + tmp357 + tmp358 + tmp256 + tmp359 + tmp360 + tmp364;
double tmp366 = 4*tmp271*tmp4;
double tmp367 = 2*tmp269*tmp7;
double tmp368 = 4*tmp267*tmp6;
double tmp369 = tmp366 + tmp367 + tmp368;
double tmp370 = 4*tmp271*tmp5;
double tmp371 = -4*tmp267*tmp7;
double tmp372 = 2*tmp269*tmp6;
double tmp373 = tmp370 + tmp371 + tmp372;
double tmp374 = 0.317*tmp59*tmp88*tmp51*tmp220*tmp56;
double tmp375 = 0.634*tmp59*tmp88*tmp163*tmp76;
double tmp376 = 0.317*tmp58*tmp59*tmp75*tmp55*tmp231*tmp118;
double tmp377 = 0.634*tmp58*tmp59*tmp75*tmp220*tmp92;
double tmp378 = 0.634*tmp59*tmp75*tmp55*tmp226;
double tmp379 = 0.634*tmp59*tmp51*tmp76*tmp236;
double tmp380 = tmp374 + tmp375 + tmp376 + tmp377 + tmp378 + tmp379;
double tmp381 = 0.634*tmp59*tmp127*tmp28*tmp220*tmp78;
double tmp382 = -0.317*tmp58*tmp59*tmp75*tmp51*tmp40*tmp220*tmp78*tmp56;
double tmp383 = 0.317*tmp58*tmp59*tmp75*tmp51*tmp40*tmp228*tmp129*tmp76;
double tmp384 = -0.634*tmp58*tmp59*tmp75*tmp163*tmp40*tmp78*tmp76;
double tmp385 = -0.317*tmp59*tmp127*tmp28*tmp228*tmp129*tmp55;
double tmp386 = 0.634*tmp59*tmp127*tmp216*tmp78*tmp55;
double tmp387 = 0.634*tmp59*tmp125*tmp28*tmp78*tmp55*tmp223;
double tmp388 = 0.317*tmp59*tmp88*tmp40*tmp78*tmp55*tmp231*tmp118;
double tmp389 = 0.634*tmp59*tmp88*tmp40*tmp220*tmp78*tmp92;
double tmp390 = -0.317*tmp59*tmp88*tmp40*tmp228*tmp129*tmp55*tmp92;
double tmp391 = -0.634*tmp59*tmp75*tmp51*tmp40*tmp78*tmp76*tmp118*tmp226;
double tmp392 = 0.634*tmp59*tmp40*tmp78*tmp55*tmp92*tmp236;
double tmp393 = tmp381 + tmp382 + tmp383 + tmp227 + tmp384 + tmp385 + tmp386 + tmp387 + tmp388 + tmp389 + tmp390 + tmp232 + tmp391 + tmp392;
double tmp394 = -0.634*tmp59*tmp127*tmp40*tmp220*tmp78;
double tmp395 = -0.317*tmp58*tmp59*tmp75*tmp28*tmp51*tmp220*tmp78*tmp56;
double tmp396 = 0.317*tmp58*tmp59*tmp75*tmp28*tmp51*tmp228*tmp129*tmp76;
double tmp397 = -0.634*tmp58*tmp59*tmp75*tmp163*tmp28*tmp78*tmp76;
double tmp398 = -0.634*tmp58*tmp59*tmp75*tmp216*tmp51*tmp78*tmp76;
double tmp399 = 0.317*tmp59*tmp127*tmp40*tmp228*tmp129*tmp55;
double tmp400 = -0.634*tmp59*tmp127*tmp100*tmp78*tmp55;
double tmp401 = -0.634*tmp59*tmp125*tmp40*tmp78*tmp55*tmp223;
double tmp402 = 0.317*tmp59*tmp88*tmp28*tmp78*tmp55*tmp231*tmp118;
double tmp403 = 0.634*tmp59*tmp88*tmp28*tmp220*tmp78*tmp92;
double tmp404 = -0.317*tmp59*tmp88*tmp28*tmp228*tmp129*tmp55*tmp92;
double tmp405 = 0.634*tmp59*tmp88*tmp216*tmp78*tmp55*tmp92;
double tmp406 = -0.634*tmp59*tmp75*tmp28*tmp51*tmp78*tmp76*tmp118*tmp226;
double tmp407 = 0.634*tmp59*tmp28*tmp78*tmp55*tmp92*tmp236;
double tmp408 = tmp140*tmp141*tmp220;
double tmp409 = (tmp142*tmp138*tmp143*tmp220*tmp56*tmp144)/2.;
double tmp410 = tmp408 + tmp409;
double tmp411 = 1.268*tmp139*tmp410;
double tmp412 = tmp394 + tmp395 + tmp396 + tmp397 + tmp398 + tmp399 + tmp400 + tmp401 + tmp402 + tmp403 + tmp404 + tmp405 + tmp406 + tmp407 + tmp411;
double tmp413 = 0.317*tmp59*tmp88*tmp51*tmp244*tmp56;
double tmp414 = 0.634*tmp59*tmp88*tmp240*tmp76;
double tmp415 = 0.317*tmp58*tmp59*tmp75*tmp55*tmp255*tmp118;
double tmp416 = 0.634*tmp58*tmp59*tmp75*tmp244*tmp92;
double tmp417 = 0.634*tmp59*tmp75*tmp55*tmp250;
double tmp418 = 0.634*tmp59*tmp51*tmp76*tmp260;
double tmp419 = tmp413 + tmp414 + tmp415 + tmp416 + tmp417 + tmp418;
double tmp420 = 0.634*tmp59*tmp127*tmp28*tmp244*tmp78;
double tmp421 = -0.317*tmp58*tmp59*tmp75*tmp51*tmp40*tmp244*tmp78*tmp56;
double tmp422 = 0.317*tmp58*tmp59*tmp75*tmp51*tmp40*tmp252*tmp129*tmp76;
double tmp423 = -0.634*tmp58*tmp59*tmp75*tmp240*tmp40*tmp78*tmp76;
double tmp424 = -0.317*tmp59*tmp127*tmp28*tmp252*tmp129*tmp55;
double tmp425 = 0.634*tmp59*tmp127*tmp96*tmp78*tmp55;
double tmp426 = 0.634*tmp59*tmp125*tmp28*tmp78*tmp55*tmp247;
double tmp427 = 0.317*tmp59*tmp88*tmp40*tmp78*tmp55*tmp255*tmp118;
double tmp428 = 0.634*tmp59*tmp88*tmp40*tmp244*tmp78*tmp92;
double tmp429 = -0.317*tmp59*tmp88*tmp40*tmp252*tmp129*tmp55*tmp92;
double tmp430 = -0.634*tmp59*tmp75*tmp51*tmp40*tmp78*tmp76*tmp118*tmp250;
double tmp431 = 0.634*tmp59*tmp40*tmp78*tmp55*tmp92*tmp260;
double tmp432 = tmp420 + tmp421 + tmp422 + tmp251 + tmp423 + tmp424 + tmp425 + tmp426 + tmp427 + tmp428 + tmp429 + tmp256 + tmp430 + tmp431;
double tmp433 = -0.634*tmp59*tmp127*tmp40*tmp244*tmp78;
double tmp434 = -0.317*tmp58*tmp59*tmp75*tmp28*tmp51*tmp244*tmp78*tmp56;
double tmp435 = 0.317*tmp58*tmp59*tmp75*tmp28*tmp51*tmp252*tmp129*tmp76;
double tmp436 = -0.634*tmp58*tmp59*tmp75*tmp240*tmp28*tmp78*tmp76;
double tmp437 = -0.634*tmp58*tmp59*tmp75*tmp96*tmp51*tmp78*tmp76;
double tmp438 = 0.317*tmp59*tmp127*tmp40*tmp252*tmp129*tmp55;
double tmp439 = -0.634*tmp59*tmp127*tmp163*tmp78*tmp55;
double tmp440 = -0.634*tmp59*tmp125*tmp40*tmp78*tmp55*tmp247;
double tmp441 = 0.317*tmp59*tmp88*tmp28*tmp78*tmp55*tmp255*tmp118;
double tmp442 = 0.634*tmp59*tmp88*tmp28*tmp244*tmp78*tmp92;
double tmp443 = -0.317*tmp59*tmp88*tmp28*tmp252*tmp129*tmp55*tmp92;
double tmp444 = 0.634*tmp59*tmp88*tmp96*tmp78*tmp55*tmp92;
double tmp445 = -0.634*tmp59*tmp75*tmp28*tmp51*tmp78*tmp76*tmp118*tmp250;
double tmp446 = 0.634*tmp59*tmp28*tmp78*tmp55*tmp92*tmp260;
double tmp447 = tmp140*tmp141*tmp244;
double tmp448 = (tmp142*tmp138*tmp143*tmp244*tmp56*tmp144)/2.;
double tmp449 = tmp447 + tmp448;
double tmp450 = 1.268*tmp139*tmp449;
double tmp451 = tmp433 + tmp434 + tmp435 + tmp436 + tmp437 + tmp438 + tmp439 + tmp440 + tmp441 + tmp442 + tmp443 + tmp444 + tmp445 + tmp446 + tmp450;
double tmp452 = 2*tmp269*tmp5;
double tmp453 = 4*tmp267*tmp4;
double tmp454 = -4*tmp271*tmp6;
double tmp455 = tmp452 + tmp453 + tmp454;
double tmp456 = tmp68 + tmp268 + tmp71 + tmp72;
double tmp457 = -(tmp0*tmp2);
double tmp458 = tmp457 + tmp266;
double tmp459 = tmp0*tmp1;
double tmp460 = tmp459 + tmp63;
double tmp461 = 2*tmp456*tmp5;
double tmp462 = -4*tmp458*tmp4;
double tmp463 = 4*tmp460*tmp7;
double tmp464 = tmp461 + tmp462 + tmp463;
double tmp465 = 4*tmp460*tmp43;
double tmp466 = 2*tmp456*tmp46;
double tmp467 = 2*tmp458*tmp48;
double tmp468 = tmp465 + tmp466 + tmp467;
double tmp469 = 4*tmp460*tmp30;
double tmp470 = 4*tmp458*tmp34;
double tmp471 = tmp456*tmp37;
double tmp472 = tmp469 + tmp470 + tmp471;
double tmp473 = 4*tmp458*tmp19;
double tmp474 = 2*tmp456*tmp22;
double tmp475 = 2*tmp460*tmp25;
double tmp476 = tmp473 + tmp474 + tmp475;
double tmp477 = 4*tmp460*tmp4;
double tmp478 = 4*tmp458*tmp7;
double tmp479 = 2*tmp456*tmp6;
double tmp480 = tmp477 + tmp478 + tmp479;
double tmp481 = 4*tmp460*tmp5;
double tmp482 = -2*tmp456*tmp7;
double tmp483 = 4*tmp458*tmp6;
double tmp484 = tmp481 + tmp482 + tmp483;
double tmp485 = 4*tmp458*tmp5;
double tmp486 = 2*tmp456*tmp4;
double tmp487 = -4*tmp460*tmp6;
double tmp488 = tmp485 + tmp486 + tmp487;
double tmp489 = ibd(2+_OFF);
double tmp490 = ibod(1+_OFF);
double tmp491 = ibd(3+_OFF);
double tmp492 = ibod(2+_OFF);
double tmp493 = ibod(3+_OFF);
double tmp494 = ibd(1+_OFF);
double tmp495 = cp(3+_OFF);
double tmp496 = mRoll(2+_OFF);
double tmp497 = mRoll(3+_OFF);
double tmp498 = x(37+_OFF);
double tmp499 = mRoll(4+_OFF);
double tmp500 = x(39+_OFF);
double tmp501 = tmp494*tmp489*tmp491;
double tmp502 = std::pow(tmp490,2);
double tmp503 = -(tmp489*tmp502);
double tmp504 = std::pow(tmp492,2);
double tmp505 = -(tmp491*tmp504);
double tmp506 = 2*tmp490*tmp492*tmp493;
double tmp507 = std::pow(tmp493,2);
double tmp508 = -(tmp494*tmp507);
double tmp509 = tmp501 + tmp503 + tmp505 + tmp506 + tmp508;
double tmp510 = 1/tmp509;
double tmp511 = cBar(1+_OFF);
double tmp512 = mPitch(3+_OFF);
double tmp513 = mPitch(4+_OFF);
double tmp514 = x(38+_OFF);
double tmp515 = mYaw(2+_OFF);
double tmp516 = mYaw(3+_OFF);
double tmp517 = -(tmp496*tmp118*tmp122);
double tmp518 = -(tmp495*tmp497*tmp108*tmp119*tmp498)/4.;
double tmp519 = (tmp495*tmp499*tmp108*tmp119*tmp500)/4.;
double tmp520 = tmp517 + tmp518 + tmp519;
double tmp521 = 0.634*tmp59*tmp495*tmp55*tmp520;
double tmp522 = -(tmp58*tmp496);
double tmp523 = (tmp495*tmp497*tmp56*tmp498)/2.;
double tmp524 = -(tmp495*tmp499*tmp56*tmp500)/2.;
double tmp525 = mRoll(1+_OFF);
double tmp526 = z(2+_OFF);
double tmp527 = tmp525*tmp526;
double tmp528 = tmp522 + tmp523 + tmp524 + tmp527;
double tmp529 = 0.634*tmp59*tmp495*tmp108*tmp528;
double tmp530 = tmp521 + tmp529;
double tmp531 = tmp512*tmp117;
double tmp532 = -(tmp511*tmp513*tmp108*tmp119*tmp514)/4.;
double tmp533 = tmp531 + tmp532;
double tmp534 = 0.634*tmp511*tmp59*tmp55*tmp533;
double tmp535 = mPitch(1+_OFF);
double tmp536 = -tmp535;
double tmp537 = tmp41*tmp512;
double tmp538 = (tmp511*tmp513*tmp56*tmp514)/2.;
double tmp539 = mPitch(2+_OFF);
double tmp540 = z(3+_OFF);
double tmp541 = -(tmp539*tmp540);
double tmp542 = tmp536 + tmp537 + tmp538 + tmp541;
double tmp543 = 0.634*tmp511*tmp59*tmp108*tmp542;
double tmp544 = tmp534 + tmp543;
double tmp545 = tmp490*tmp492;
double tmp546 = -(tmp494*tmp493);
double tmp547 = tmp545 + tmp546;
double tmp548 = tmp515*tmp118*tmp122;
double tmp549 = -(tmp495*tmp516*tmp108*tmp119*tmp500)/4.;
double tmp550 = tmp548 + tmp549;
double tmp551 = 0.634*tmp59*tmp495*tmp55*tmp550;
double tmp552 = tmp58*tmp515;
double tmp553 = (tmp495*tmp516*tmp56*tmp500)/2.;
double tmp554 = mYaw(1+_OFF);
double tmp555 = z(4+_OFF);
double tmp556 = -(tmp554*tmp555);
double tmp557 = tmp552 + tmp553 + tmp556;
double tmp558 = 0.634*tmp59*tmp495*tmp108*tmp557;
double tmp559 = tmp551 + tmp558;
double tmp560 = -(tmp491*tmp492);
double tmp561 = tmp490*tmp493;
double tmp562 = tmp560 + tmp561;
double tmp563 = -(tmp489*tmp490);
double tmp564 = tmp492*tmp493;
double tmp565 = tmp563 + tmp564;
double tmp566 = std::pow(tmp500,2);
double tmp567 = tmp494*tmp489;
double tmp568 = -tmp504;
double tmp569 = tmp567 + tmp568;
double tmp570 = std::pow(tmp498,2);
double tmp571 = std::pow(tmp514,2);
double tmp572 = -(tmp490*tmp498*tmp514);
double tmp573 = -(tmp493*tmp571);
double tmp574 = tmp492*tmp498*tmp500;
double tmp575 = tmp489*tmp514*tmp500;
double tmp576 = -(tmp491*tmp514*tmp500);
double tmp577 = tmp493*tmp566;
double tmp578 = 0.634*tmp59*tmp495*tmp55*tmp528;
double tmp579 = tmp572 + tmp573 + tmp574 + tmp575 + tmp576 + tmp577 + tmp578;
double tmp580 = tmp494*tmp491;
double tmp581 = -tmp502;
double tmp582 = tmp580 + tmp581;
double tmp583 = tmp490*tmp570;
double tmp584 = tmp493*tmp498*tmp514;
double tmp585 = -(tmp494*tmp498*tmp500);
double tmp586 = tmp491*tmp498*tmp500;
double tmp587 = -(tmp492*tmp514*tmp500);
double tmp588 = -(tmp490*tmp566);
double tmp589 = 0.634*tmp511*tmp59*tmp55*tmp542;
double tmp590 = tmp583 + tmp584 + tmp585 + tmp586 + tmp587 + tmp588 + tmp589;
double tmp591 = -(tmp492*tmp570);
double tmp592 = tmp494*tmp498*tmp514;
double tmp593 = -(tmp489*tmp498*tmp514);
double tmp594 = tmp492*tmp571;
double tmp595 = -(tmp493*tmp498*tmp500);
double tmp596 = tmp490*tmp514*tmp500;
double tmp597 = 0.634*tmp59*tmp495*tmp55*tmp557;
double tmp598 = tmp591 + tmp592 + tmp593 + tmp594 + tmp595 + tmp596 + tmp597;
double tmp599 = tmp489*tmp491;
double tmp600 = -tmp507;
double tmp601 = tmp599 + tmp600;
double tmp602 = -(tmp496*tmp118*tmp177);
double tmp603 = -(tmp495*tmp497*tmp171*tmp119*tmp498)/4.;
double tmp604 = (tmp495*tmp499*tmp171*tmp119*tmp500)/4.;
double tmp605 = tmp602 + tmp603 + tmp604;
double tmp606 = 0.634*tmp59*tmp495*tmp55*tmp605;
double tmp607 = 0.634*tmp59*tmp495*tmp171*tmp528;
double tmp608 = tmp606 + tmp607;
double tmp609 = tmp512*tmp174;
double tmp610 = -(tmp511*tmp513*tmp171*tmp119*tmp514)/4.;
double tmp611 = tmp609 + tmp610;
double tmp612 = 0.634*tmp511*tmp59*tmp55*tmp611;
double tmp613 = 0.634*tmp511*tmp59*tmp171*tmp542;
double tmp614 = tmp612 + tmp613;
double tmp615 = tmp515*tmp118*tmp177;
double tmp616 = -(tmp495*tmp516*tmp171*tmp119*tmp500)/4.;
double tmp617 = tmp615 + tmp616;
double tmp618 = 0.634*tmp59*tmp495*tmp55*tmp617;
double tmp619 = 0.634*tmp59*tmp495*tmp171*tmp557;
double tmp620 = tmp618 + tmp619;
double tmp621 = -4*tmp67*tmp5;
double tmp622 = -4*tmp64*tmp4;
double tmp623 = 2*tmp74*tmp6;
double tmp624 = tmp621 + tmp622 + tmp623;
double tmp625 = tmp565*tmp510*tmp579;
double tmp626 = tmp547*tmp510*tmp590;
double tmp627 = tmp569*tmp510*tmp598;
double tmp628 = tmp625 + tmp626 + tmp627;
double tmp629 = tmp562*tmp510*tmp579;
double tmp630 = tmp582*tmp510*tmp590;
double tmp631 = tmp547*tmp510*tmp598;
double tmp632 = tmp629 + tmp630 + tmp631;
double tmp633 = tmp601*tmp510*tmp579;
double tmp634 = tmp562*tmp510*tmp590;
double tmp635 = tmp565*tmp510*tmp598;
double tmp636 = tmp633 + tmp634 + tmp635;
double tmp637 = -(tmp496*tmp118*tmp226);
double tmp638 = -(tmp495*tmp497*tmp220*tmp119*tmp498)/4.;
double tmp639 = (tmp495*tmp499*tmp220*tmp119*tmp500)/4.;
double tmp640 = tmp637 + tmp638 + tmp639;
double tmp641 = 0.634*tmp59*tmp495*tmp55*tmp640;
double tmp642 = 0.634*tmp59*tmp495*tmp220*tmp528;
double tmp643 = tmp641 + tmp642;
double tmp644 = tmp512*tmp223;
double tmp645 = -(tmp511*tmp513*tmp220*tmp119*tmp514)/4.;
double tmp646 = tmp644 + tmp645;
double tmp647 = 0.634*tmp511*tmp59*tmp55*tmp646;
double tmp648 = 0.634*tmp511*tmp59*tmp220*tmp542;
double tmp649 = tmp647 + tmp648;
double tmp650 = tmp515*tmp118*tmp226;
double tmp651 = -(tmp495*tmp516*tmp220*tmp119*tmp500)/4.;
double tmp652 = tmp650 + tmp651;
double tmp653 = 0.634*tmp59*tmp495*tmp55*tmp652;
double tmp654 = 0.634*tmp59*tmp495*tmp220*tmp557;
double tmp655 = tmp653 + tmp654;
double tmp656 = -4*tmp64*tmp5;
double tmp657 = 4*tmp67*tmp4;
double tmp658 = -2*tmp74*tmp7;
double tmp659 = tmp656 + tmp657 + tmp658;
double tmp660 = -(tmp496*tmp118*tmp250);
double tmp661 = -(tmp495*tmp497*tmp244*tmp119*tmp498)/4.;
double tmp662 = (tmp495*tmp499*tmp244*tmp119*tmp500)/4.;
double tmp663 = tmp660 + tmp661 + tmp662;
double tmp664 = 0.634*tmp59*tmp495*tmp55*tmp663;
double tmp665 = 0.634*tmp59*tmp495*tmp244*tmp528;
double tmp666 = tmp664 + tmp665;
double tmp667 = tmp512*tmp247;
double tmp668 = -(tmp511*tmp513*tmp244*tmp119*tmp514)/4.;
double tmp669 = tmp667 + tmp668;
double tmp670 = 0.634*tmp511*tmp59*tmp55*tmp669;
double tmp671 = 0.634*tmp511*tmp59*tmp244*tmp542;
double tmp672 = tmp670 + tmp671;
double tmp673 = tmp515*tmp118*tmp250;
double tmp674 = -(tmp495*tmp516*tmp244*tmp119*tmp500)/4.;
double tmp675 = tmp673 + tmp674;
double tmp676 = 0.634*tmp59*tmp495*tmp55*tmp675;
double tmp677 = 0.634*tmp59*tmp495*tmp244*tmp557;
double tmp678 = tmp676 + tmp677;
double tmp679 = -2*tmp74*tmp5;
double tmp680 = 4*tmp64*tmp7;
double tmp681 = -4*tmp67*tmp6;
double tmp682 = tmp679 + tmp680 + tmp681;
double tmp683 = tmp565*tmp510*tmp530;
double tmp684 = tmp547*tmp510*tmp544;
double tmp685 = tmp569*tmp510*tmp559;
double tmp686 = tmp683 + tmp684 + tmp685;
double tmp687 = tmp562*tmp510*tmp530;
double tmp688 = tmp582*tmp510*tmp544;
double tmp689 = tmp547*tmp510*tmp559;
double tmp690 = tmp687 + tmp688 + tmp689;
double tmp691 = tmp601*tmp510*tmp530;
double tmp692 = tmp562*tmp510*tmp544;
double tmp693 = tmp565*tmp510*tmp559;
double tmp694 = tmp691 + tmp692 + tmp693;
double tmp695 = tmp565*tmp510*tmp608;
double tmp696 = tmp547*tmp510*tmp614;
double tmp697 = tmp569*tmp510*tmp620;
double tmp698 = tmp695 + tmp696 + tmp697;
double tmp699 = tmp562*tmp510*tmp608;
double tmp700 = tmp582*tmp510*tmp614;
double tmp701 = tmp547*tmp510*tmp620;
double tmp702 = tmp699 + tmp700 + tmp701;
double tmp703 = tmp601*tmp510*tmp608;
double tmp704 = tmp562*tmp510*tmp614;
double tmp705 = tmp565*tmp510*tmp620;
double tmp706 = tmp703 + tmp704 + tmp705;
double tmp707 = -2*tmp269*tmp5;
double tmp708 = -4*tmp267*tmp4;
double tmp709 = 4*tmp271*tmp6;
double tmp710 = tmp707 + tmp708 + tmp709;
double tmp711 = tmp565*tmp510*tmp643;
double tmp712 = tmp547*tmp510*tmp649;
double tmp713 = tmp569*tmp510*tmp655;
double tmp714 = tmp711 + tmp712 + tmp713;
double tmp715 = tmp562*tmp510*tmp643;
double tmp716 = tmp582*tmp510*tmp649;
double tmp717 = tmp547*tmp510*tmp655;
double tmp718 = tmp715 + tmp716 + tmp717;
double tmp719 = tmp601*tmp510*tmp643;
double tmp720 = tmp562*tmp510*tmp649;
double tmp721 = tmp565*tmp510*tmp655;
double tmp722 = tmp719 + tmp720 + tmp721;
double tmp723 = -4*tmp267*tmp5;
double tmp724 = 2*tmp269*tmp4;
double tmp725 = -4*tmp271*tmp7;
double tmp726 = tmp723 + tmp724 + tmp725;
double tmp727 = tmp565*tmp510*tmp666;
double tmp728 = tmp547*tmp510*tmp672;
double tmp729 = tmp569*tmp510*tmp678;
double tmp730 = tmp727 + tmp728 + tmp729;
double tmp731 = tmp562*tmp510*tmp666;
double tmp732 = tmp582*tmp510*tmp672;
double tmp733 = tmp547*tmp510*tmp678;
double tmp734 = tmp731 + tmp732 + tmp733;
double tmp735 = tmp601*tmp510*tmp666;
double tmp736 = tmp562*tmp510*tmp672;
double tmp737 = tmp565*tmp510*tmp678;
double tmp738 = tmp735 + tmp736 + tmp737;
double tmp739 = -4*tmp271*tmp5;
double tmp740 = 4*tmp267*tmp7;
double tmp741 = -2*tmp269*tmp6;
double tmp742 = tmp739 + tmp740 + tmp741;
double tmp743 = -4*tmp458*tmp5;
double tmp744 = -2*tmp456*tmp4;
double tmp745 = 4*tmp460*tmp6;
double tmp746 = tmp743 + tmp744 + tmp745;
double tmp747 = -2*tmp456*tmp5;
double tmp748 = 4*tmp458*tmp4;
double tmp749 = -4*tmp460*tmp7;
double tmp750 = tmp747 + tmp748 + tmp749;
double tmp751 = -4*tmp460*tmp5;
double tmp752 = 2*tmp456*tmp7;
double tmp753 = -4*tmp458*tmp6;
double tmp754 = tmp751 + tmp752 + tmp753;
J(1+_OFF,1+_OFF) = -(tmp61*tmp264*tmp151) - tmp61*tmp148*tmp155 - tmp61*tmp159*tmp278 - tmp61*tmp181*tmp293 - tmp61*tmp193*tmp310 - tmp61*tmp212*tmp204;
J(1+_OFF,2+_OFF) = -(tmp61*tmp148*tmp151) - tmp61*tmp624*tmp155 - tmp61*tmp159*tmp325 - tmp61*tmp181*tmp344 - tmp61*tmp193*tmp365 - tmp61*tmp208*tmp204;
J(1+_OFF,3+_OFF) = -(tmp61*tmp208*tmp151) - tmp61*tmp212*tmp155 - tmp61*tmp159*tmp380 - tmp61*tmp181*tmp393 - tmp61*tmp193*tmp412 - tmp61*tmp659*tmp204;
J(1+_OFF,4+_OFF) = -(tmp61*tmp682*tmp151) - tmp61*tmp208*tmp155 - tmp61*tmp159*tmp419 - tmp61*tmp181*tmp432 - tmp61*tmp193*tmp451 - tmp61*tmp264*tmp204;
J(2+_OFF,1+_OFF) = -(tmp61*tmp455*tmp151) - tmp61*tmp314*tmp155 - tmp61*tmp318*tmp278 - tmp61*tmp329*tmp293 - tmp61*tmp348*tmp310 - tmp61*tmp373*tmp204;
J(2+_OFF,2+_OFF) = -(tmp61*tmp314*tmp151) - tmp61*tmp710*tmp155 - tmp61*tmp318*tmp325 - tmp61*tmp329*tmp344 - tmp61*tmp348*tmp365 - tmp61*tmp369*tmp204;
J(2+_OFF,3+_OFF) = -(tmp61*tmp369*tmp151) - tmp61*tmp373*tmp155 - tmp61*tmp318*tmp380 - tmp61*tmp329*tmp393 - tmp61*tmp348*tmp412 - tmp61*tmp726*tmp204;
J(2+_OFF,4+_OFF) = -(tmp61*tmp742*tmp151) - tmp61*tmp369*tmp155 - tmp61*tmp318*tmp419 - tmp61*tmp329*tmp432 - tmp61*tmp348*tmp451 - tmp61*tmp455*tmp204;
J(3+_OFF,1+_OFF) = -(tmp61*tmp488*tmp151) - tmp61*tmp464*tmp155 - tmp61*tmp468*tmp278 - tmp61*tmp472*tmp293 - tmp61*tmp476*tmp310 - tmp61*tmp484*tmp204;
J(3+_OFF,2+_OFF) = -(tmp61*tmp464*tmp151) - tmp61*tmp746*tmp155 - tmp61*tmp468*tmp325 - tmp61*tmp472*tmp344 - tmp61*tmp476*tmp365 - tmp61*tmp480*tmp204;
J(3+_OFF,3+_OFF) = -(tmp61*tmp480*tmp151) - tmp61*tmp484*tmp155 - tmp61*tmp468*tmp380 - tmp61*tmp472*tmp393 - tmp61*tmp476*tmp412 - tmp61*tmp750*tmp204;
J(3+_OFF,4+_OFF) = -(tmp61*tmp754*tmp151) - tmp61*tmp480*tmp155 - tmp61*tmp468*tmp419 - tmp61*tmp472*tmp432 - tmp61*tmp476*tmp451 - tmp61*tmp488*tmp204;
J(4+_OFF,1+_OFF) = -(tmp181*tmp686) - tmp159*tmp690 - tmp193*tmp694 - tmp148*tmp628 - tmp264*tmp632 - tmp212*tmp636;
J(4+_OFF,2+_OFF) = -(tmp181*tmp698) - tmp159*tmp702 - tmp193*tmp706 - tmp624*tmp628 - tmp148*tmp632 - tmp208*tmp636;
J(4+_OFF,3+_OFF) = -(tmp181*tmp714) - tmp159*tmp718 - tmp193*tmp722 - tmp212*tmp628 - tmp208*tmp632 - tmp659*tmp636;
J(4+_OFF,4+_OFF) = -(tmp181*tmp730) - tmp159*tmp734 - tmp193*tmp738 - tmp208*tmp628 - tmp682*tmp632 - tmp264*tmp636;
J(5+_OFF,1+_OFF) = -(tmp329*tmp686) - tmp318*tmp690 - tmp348*tmp694 - tmp314*tmp628 - tmp455*tmp632 - tmp373*tmp636;
J(5+_OFF,2+_OFF) = -(tmp329*tmp698) - tmp318*tmp702 - tmp348*tmp706 - tmp710*tmp628 - tmp314*tmp632 - tmp369*tmp636;
J(5+_OFF,3+_OFF) = -(tmp329*tmp714) - tmp318*tmp718 - tmp348*tmp722 - tmp373*tmp628 - tmp369*tmp632 - tmp726*tmp636;
J(5+_OFF,4+_OFF) = -(tmp329*tmp730) - tmp318*tmp734 - tmp348*tmp738 - tmp369*tmp628 - tmp742*tmp632 - tmp455*tmp636;
J(6+_OFF,1+_OFF) = -(tmp472*tmp686) - tmp468*tmp690 - tmp476*tmp694 - tmp464*tmp628 - tmp488*tmp632 - tmp484*tmp636;
J(6+_OFF,2+_OFF) = -(tmp472*tmp698) - tmp468*tmp702 - tmp476*tmp706 - tmp746*tmp628 - tmp464*tmp632 - tmp480*tmp636;
J(6+_OFF,3+_OFF) = -(tmp472*tmp714) - tmp468*tmp718 - tmp476*tmp722 - tmp484*tmp628 - tmp480*tmp632 - tmp750*tmp636;
J(6+_OFF,4+_OFF) = -(tmp472*tmp730) - tmp468*tmp734 - tmp476*tmp738 - tmp480*tmp628 - tmp754*tmp632 - tmp488*tmp636;
