double tmp0 = x(4+_OFF);
double tmp1 = x(6+_OFF);
double tmp2 = x(5+_OFF);
double tmp3 = x(7+_OFF);
double tmp4 = x(30+_OFF);
double tmp5 = x(31+_OFF);
double tmp6 = x(33+_OFF);
double tmp7 = x(32+_OFF);
double tmp8 = wind(1+_OFF);
double tmp9 = tmp5*tmp6;
double tmp10 = wind(2+_OFF);
double tmp11 = tmp7*tmp6;
double tmp12 = wind(3+_OFF);
double tmp13 = std::pow(tmp4,2);
double tmp14 = std::pow(tmp5,2);
double tmp15 = std::pow(tmp7,2);
double tmp16 = -tmp15;
double tmp17 = std::pow(tmp6,2);
double tmp18 = tmp5*tmp7;
double tmp19 = tmp4*tmp6;
double tmp20 = tmp18 + tmp19;
double tmp21 = -2*tmp10*tmp20;
double tmp22 = -(tmp4*tmp7);
double tmp23 = tmp22 + tmp9;
double tmp24 = -2*tmp12*tmp23;
double tmp25 = -tmp17;
double tmp26 = tmp13 + tmp14 + tmp16 + tmp25;
double tmp27 = -(tmp8*tmp26);
double tmp28 = x(34+_OFF);
double tmp29 = tmp21 + tmp24 + tmp27 + tmp28;
double tmp30 = tmp4*tmp7;
double tmp31 = tmp30 + tmp9;
double tmp32 = -2*tmp8*tmp31;
double tmp33 = -(tmp4*tmp5);
double tmp34 = tmp33 + tmp11;
double tmp35 = -2*tmp10*tmp34;
double tmp36 = -tmp14;
double tmp37 = tmp13 + tmp36 + tmp16 + tmp17;
double tmp38 = -(tmp12*tmp37);
double tmp39 = x(36+_OFF);
double tmp40 = tmp32 + tmp35 + tmp38 + tmp39;
double tmp41 = std::atan2(tmp40,tmp29);
double tmp42 = tmp4*tmp5;
double tmp43 = tmp42 + tmp11;
double tmp44 = -(tmp4*tmp6);
double tmp45 = tmp18 + tmp44;
double tmp46 = -2*tmp8*tmp45;
double tmp47 = -2*tmp12*tmp43;
double tmp48 = tmp13 + tmp36 + tmp15 + tmp25;
double tmp49 = -(tmp10*tmp48);
double tmp50 = x(35+_OFF);
double tmp51 = tmp46 + tmp47 + tmp49 + tmp50;
double tmp52 = std::pow(tmp29,2);
double tmp53 = std::pow(tmp51,2);
double tmp54 = std::pow(tmp40,2);
double tmp55 = tmp52 + tmp53 + tmp54;
double tmp56 = 1/std::sqrt(tmp55);
double tmp57 = tmp51*tmp56;
double tmp58 = std::asin(tmp57);
double tmp59 = cp(2+_OFF);
double tmp60 = -(tmp0*tmp1);
double tmp61 = tmp2*tmp3;
double tmp62 = tmp60 + tmp61;
double tmp63 = tmp2*tmp1;
double tmp64 = tmp0*tmp3;
double tmp65 = tmp63 + tmp64;
double tmp66 = std::pow(tmp0,2);
double tmp67 = std::pow(tmp2,2);
double tmp68 = std::pow(tmp1,2);
double tmp69 = -tmp68;
double tmp70 = std::pow(tmp3,2);
double tmp71 = -tmp70;
double tmp72 = tmp66 + tmp67 + tmp69 + tmp71;
double tmp73 = gravity(1+_OFF);
double tmp74 = cp(4+_OFF);
double tmp75 = 1/tmp74;
double tmp76 = fLat(1+_OFF);
double tmp77 = std::sqrt(tmp55);
double tmp78 = tmp52 + tmp54;
double tmp79 = 1/std::sqrt(tmp78);
double tmp80 = fDrag(1+_OFF);
double tmp81 = fDrag(2+_OFF);
double tmp82 = -(tmp41*tmp81);
double tmp83 = std::pow(tmp41,2);
double tmp84 = fDrag(3+_OFF);
double tmp85 = tmp83*tmp84;
double tmp86 = std::pow(tmp58,2);
double tmp87 = fDrag(4+_OFF);
double tmp88 = tmp86*tmp87;
double tmp89 = tmp80 + tmp82 + tmp85 + tmp88;
double tmp90 = 1/tmp55;
double tmp91 = -(tmp53*tmp90);
double tmp92 = 1 + tmp91;
double tmp93 = std::sqrt(tmp92);
double tmp94 = -2*tmp10*tmp4;
double tmp95 = -2*tmp12*tmp5;
double tmp96 = 2*tmp8*tmp6;
double tmp97 = tmp94 + tmp95 + tmp96;
double tmp98 = -2*tmp8*tmp4;
double tmp99 = 2*tmp12*tmp7;
double tmp100 = -2*tmp10*tmp6;
double tmp101 = tmp98 + tmp99 + tmp100;
double tmp102 = 2*tmp101*tmp29;
double tmp103 = 2*tmp97*tmp51;
double tmp104 = -2*tmp12*tmp4;
double tmp105 = 2*tmp10*tmp5;
double tmp106 = -2*tmp8*tmp7;
double tmp107 = tmp104 + tmp105 + tmp106;
double tmp108 = 2*tmp107*tmp40;
double tmp109 = tmp102 + tmp103 + tmp108;
double tmp110 = 1/tmp78;
double tmp111 = tmp107*tmp29*tmp110;
double tmp112 = 2*tmp8*tmp31;
double tmp113 = 2*tmp10*tmp34;
double tmp114 = tmp12*tmp37;
double tmp115 = -tmp39;
double tmp116 = tmp112 + tmp113 + tmp114 + tmp115;
double tmp117 = tmp101*tmp116*tmp110;
double tmp118 = tmp111 + tmp117;
double tmp119 = 1/std::sqrt(tmp92);
double tmp120 = std::pow(tmp55,-1.5);
double tmp121 = -0.5*(tmp51*tmp109*tmp120);
double tmp122 = tmp97*tmp56;
double tmp123 = tmp121 + tmp122;
double tmp124 = fLift(1+_OFF);
double tmp125 = -tmp124;
double tmp126 = fLift(2+_OFF);
double tmp127 = tmp41*tmp126;
double tmp128 = tmp125 + tmp127;
double tmp129 = tmp102 + tmp108;
double tmp130 = std::pow(tmp78,-1.5);
double tmp131 = std::pow(tmp55,-2);
double tmp132 = tmp53*tmp109*tmp131;
double tmp133 = -2*tmp97*tmp51*tmp90;
double tmp134 = tmp132 + tmp133;
double tmp135 = -(tmp81*tmp118);
double tmp136 = 2*tmp41*tmp84*tmp118;
double tmp137 = 2*tmp58*tmp87*tmp119*tmp123;
double tmp138 = tmp135 + tmp136 + tmp137;
double tmp139 = cp(1+_OFF);
double tmp140 = std::pow(tmp139,2);
double tmp141 = std::pow(M_PI,-2);
double tmp142 = fThrust(3+_OFF);
double tmp143 = 1/M_PI;
double tmp144 = fThrust(2+_OFF);
double tmp145 = z(1+_OFF);
double tmp146 = 4*tmp62*tmp4;
double tmp147 = -4*tmp65*tmp5;
double tmp148 = 2*tmp72*tmp7;
double tmp149 = tmp146 + tmp147 + tmp148;
double tmp150 = -2*tmp73*tmp43;
double tmp151 = 0.634*tmp59*tmp89*tmp51*tmp77;
double tmp152 = 0.634*tmp58*tmp59*tmp76*tmp55*tmp93;
double tmp153 = 0. + tmp151 + tmp152;
double tmp154 = tmp75*tmp153;
double tmp155 = tmp150 + tmp154;
double tmp156 = -(tmp73*tmp37);
double tmp157 = -0.634*tmp58*tmp59*tmp76*tmp51*tmp40*tmp79*tmp77;
double tmp158 = 0.634*tmp59*tmp128*tmp29*tmp79*tmp55;
double tmp159 = 0.634*tmp59*tmp89*tmp40*tmp79*tmp55*tmp93;
double tmp160 = tmp157 + tmp158 + tmp159;
double tmp161 = tmp75*tmp160;
double tmp162 = tmp156 + tmp161;
double tmp163 = 2*tmp72*tmp45;
double tmp164 = 4*tmp62*tmp43;
double tmp165 = 2*tmp65*tmp48;
double tmp166 = tmp163 + tmp164 + tmp165;
double tmp167 = -2*tmp73*tmp4;
double tmp168 = -2*tmp8*tmp5;
double tmp169 = -2*tmp10*tmp7;
double tmp170 = -2*tmp12*tmp6;
double tmp171 = tmp168 + tmp169 + tmp170;
double tmp172 = 2*tmp171*tmp29;
double tmp173 = 2*tmp107*tmp51;
double tmp174 = 2*tmp10*tmp4;
double tmp175 = 2*tmp12*tmp5;
double tmp176 = -2*tmp8*tmp6;
double tmp177 = tmp174 + tmp175 + tmp176;
double tmp178 = 2*tmp177*tmp40;
double tmp179 = tmp172 + tmp173 + tmp178;
double tmp180 = tmp177*tmp29*tmp110;
double tmp181 = tmp171*tmp116*tmp110;
double tmp182 = tmp180 + tmp181;
double tmp183 = -0.5*(tmp51*tmp179*tmp120);
double tmp184 = tmp107*tmp56;
double tmp185 = tmp183 + tmp184;
double tmp186 = 2*tmp72*tmp31;
double tmp187 = 4*tmp65*tmp34;
double tmp188 = 2*tmp62*tmp37;
double tmp189 = tmp186 + tmp187 + tmp188;
double tmp190 = tmp172 + tmp178;
double tmp191 = tmp53*tmp179*tmp131;
double tmp192 = -2*tmp107*tmp51*tmp90;
double tmp193 = tmp191 + tmp192;
double tmp194 = -(tmp81*tmp182);
double tmp195 = 2*tmp41*tmp84*tmp182;
double tmp196 = 2*tmp58*tmp87*tmp119*tmp185;
double tmp197 = tmp194 + tmp195 + tmp196;
double tmp198 = 4*tmp65*tmp20;
double tmp199 = 4*tmp62*tmp23;
double tmp200 = tmp72*tmp26;
double tmp201 = tmp198 + tmp199 + tmp200;
double tmp202 = -2*tmp73*tmp23;
double tmp203 = -0.634*tmp58*tmp59*tmp76*tmp29*tmp51*tmp79*tmp77;
double tmp204 = -0.634*tmp59*tmp128*tmp40*tmp79*tmp55;
double tmp205 = 0.634*tmp59*tmp89*tmp29*tmp79*tmp55*tmp93;
double tmp206 = tmp141*tmp142*tmp55;
double tmp207 = tmp143*tmp139*tmp144*tmp77*tmp145;
double tmp208 = fThrust(1+_OFF);
double tmp209 = std::pow(tmp145,2);
double tmp210 = tmp140*tmp208*tmp209;
double tmp211 = tmp206 + tmp207 + tmp210;
double tmp212 = 1.268*tmp140*tmp211;
double tmp213 = tmp203 + tmp204 + tmp205 + tmp212;
double tmp214 = tmp75*tmp213;
double tmp215 = tmp202 + tmp214;
double tmp216 = 2*tmp72*tmp5;
double tmp217 = 4*tmp65*tmp7;
double tmp218 = 4*tmp62*tmp6;
double tmp219 = tmp216 + tmp217 + tmp218;
double tmp220 = 2*tmp72*tmp4;
double tmp221 = -4*tmp62*tmp7;
double tmp222 = 4*tmp65*tmp6;
double tmp223 = tmp220 + tmp221 + tmp222;
double tmp224 = -2*tmp73*tmp6;
double tmp225 = 2*tmp12*tmp4;
double tmp226 = -2*tmp10*tmp5;
double tmp227 = 2*tmp8*tmp7;
double tmp228 = tmp225 + tmp226 + tmp227;
double tmp229 = 2*tmp228*tmp29;
double tmp230 = 2*tmp171*tmp51;
double tmp231 = 2*tmp101*tmp40;
double tmp232 = tmp229 + tmp230 + tmp231;
double tmp233 = tmp101*tmp29*tmp110;
double tmp234 = tmp228*tmp116*tmp110;
double tmp235 = tmp233 + tmp234;
double tmp236 = -0.5*(tmp51*tmp232*tmp120);
double tmp237 = tmp171*tmp56;
double tmp238 = tmp236 + tmp237;
double tmp239 = 2*tmp73*tmp7;
double tmp240 = -0.634*tmp58*tmp59*tmp76*tmp101*tmp51*tmp79*tmp77;
double tmp241 = tmp229 + tmp231;
double tmp242 = tmp53*tmp232*tmp131;
double tmp243 = -2*tmp171*tmp51*tmp90;
double tmp244 = tmp242 + tmp243;
double tmp245 = 0.634*tmp59*tmp89*tmp101*tmp79*tmp55*tmp93;
double tmp246 = -(tmp81*tmp235);
double tmp247 = 2*tmp41*tmp84*tmp235;
double tmp248 = 2*tmp58*tmp87*tmp119*tmp238;
double tmp249 = tmp246 + tmp247 + tmp248;
double tmp250 = 2*tmp8*tmp4;
double tmp251 = -2*tmp12*tmp7;
double tmp252 = 2*tmp10*tmp6;
double tmp253 = tmp250 + tmp251 + tmp252;
double tmp254 = 2*tmp97*tmp29;
double tmp255 = 2*tmp253*tmp51;
double tmp256 = 2*tmp171*tmp40;
double tmp257 = tmp254 + tmp255 + tmp256;
double tmp258 = tmp171*tmp29*tmp110;
double tmp259 = tmp97*tmp116*tmp110;
double tmp260 = tmp258 + tmp259;
double tmp261 = -0.5*(tmp51*tmp257*tmp120);
double tmp262 = tmp253*tmp56;
double tmp263 = tmp261 + tmp262;
double tmp264 = -0.634*tmp58*tmp59*tmp76*tmp171*tmp51*tmp79*tmp77;
double tmp265 = tmp254 + tmp256;
double tmp266 = tmp53*tmp257*tmp131;
double tmp267 = -2*tmp253*tmp51*tmp90;
double tmp268 = tmp266 + tmp267;
double tmp269 = 0.634*tmp59*tmp89*tmp171*tmp79*tmp55*tmp93;
double tmp270 = -(tmp81*tmp260);
double tmp271 = 2*tmp41*tmp84*tmp260;
double tmp272 = 2*tmp58*tmp87*tmp119*tmp263;
double tmp273 = tmp270 + tmp271 + tmp272;
double tmp274 = -2*tmp73*tmp5;
double tmp275 = 4*tmp65*tmp4;
double tmp276 = 4*tmp62*tmp5;
double tmp277 = -2*tmp72*tmp6;
double tmp278 = tmp275 + tmp276 + tmp277;
double tmp279 = tmp0*tmp2;
double tmp280 = tmp1*tmp3;
double tmp281 = tmp279 + tmp280;
double tmp282 = -tmp67;
double tmp283 = tmp66 + tmp282 + tmp68 + tmp71;
double tmp284 = -(tmp0*tmp3);
double tmp285 = tmp63 + tmp284;
double tmp286 = 0.317*tmp59*tmp89*tmp51*tmp109*tmp56;
double tmp287 = 0.634*tmp59*tmp89*tmp97*tmp77;
double tmp288 = 0.317*tmp58*tmp59*tmp76*tmp55*tmp134*tmp119;
double tmp289 = 0.634*tmp58*tmp59*tmp76*tmp109*tmp93;
double tmp290 = 0.634*tmp59*tmp76*tmp55*tmp123;
double tmp291 = 0.634*tmp59*tmp51*tmp77*tmp138;
double tmp292 = tmp286 + tmp287 + tmp288 + tmp289 + tmp290 + tmp291;
double tmp293 = tmp75*tmp292;
double tmp294 = tmp274 + tmp293;
double tmp295 = 0.634*tmp59*tmp128*tmp29*tmp109*tmp79;
double tmp296 = -0.317*tmp58*tmp59*tmp76*tmp51*tmp40*tmp109*tmp79*tmp56;
double tmp297 = 0.317*tmp58*tmp59*tmp76*tmp51*tmp40*tmp129*tmp130*tmp77;
double tmp298 = -0.634*tmp58*tmp59*tmp76*tmp107*tmp51*tmp79*tmp77;
double tmp299 = -0.634*tmp58*tmp59*tmp76*tmp97*tmp40*tmp79*tmp77;
double tmp300 = -0.317*tmp59*tmp128*tmp29*tmp129*tmp130*tmp55;
double tmp301 = 0.634*tmp59*tmp128*tmp101*tmp79*tmp55;
double tmp302 = 0.634*tmp59*tmp126*tmp29*tmp79*tmp55*tmp118;
double tmp303 = 0.317*tmp59*tmp89*tmp40*tmp79*tmp55*tmp134*tmp119;
double tmp304 = 0.634*tmp59*tmp89*tmp40*tmp109*tmp79*tmp93;
double tmp305 = -0.317*tmp59*tmp89*tmp40*tmp129*tmp130*tmp55*tmp93;
double tmp306 = 0.634*tmp59*tmp89*tmp107*tmp79*tmp55*tmp93;
double tmp307 = -0.634*tmp59*tmp76*tmp51*tmp40*tmp79*tmp77*tmp119*tmp123;
double tmp308 = 0.634*tmp59*tmp40*tmp79*tmp55*tmp93*tmp138;
double tmp309 = tmp295 + tmp296 + tmp297 + tmp298 + tmp299 + tmp300 + tmp301 + tmp302 + tmp303 + tmp304 + tmp305 + tmp306 + tmp307 + tmp308;
double tmp310 = tmp75*tmp309;
double tmp311 = tmp167 + tmp310;
double tmp312 = -0.634*tmp59*tmp128*tmp40*tmp109*tmp79;
double tmp313 = -0.317*tmp58*tmp59*tmp76*tmp29*tmp51*tmp109*tmp79*tmp56;
double tmp314 = 0.317*tmp58*tmp59*tmp76*tmp29*tmp51*tmp129*tmp130*tmp77;
double tmp315 = -0.634*tmp58*tmp59*tmp76*tmp97*tmp29*tmp79*tmp77;
double tmp316 = 0.317*tmp59*tmp128*tmp40*tmp129*tmp130*tmp55;
double tmp317 = -0.634*tmp59*tmp128*tmp107*tmp79*tmp55;
double tmp318 = -0.634*tmp59*tmp126*tmp40*tmp79*tmp55*tmp118;
double tmp319 = 0.317*tmp59*tmp89*tmp29*tmp79*tmp55*tmp134*tmp119;
double tmp320 = 0.634*tmp59*tmp89*tmp29*tmp109*tmp79*tmp93;
double tmp321 = -0.317*tmp59*tmp89*tmp29*tmp129*tmp130*tmp55*tmp93;
double tmp322 = -0.634*tmp59*tmp76*tmp29*tmp51*tmp79*tmp77*tmp119*tmp123;
double tmp323 = 0.634*tmp59*tmp29*tmp79*tmp55*tmp93*tmp138;
double tmp324 = tmp141*tmp142*tmp109;
double tmp325 = (tmp143*tmp139*tmp144*tmp109*tmp56*tmp145)/2.;
double tmp326 = tmp324 + tmp325;
double tmp327 = 1.268*tmp140*tmp326;
double tmp328 = tmp312 + tmp313 + tmp314 + tmp315 + tmp240 + tmp316 + tmp317 + tmp318 + tmp319 + tmp320 + tmp321 + tmp245 + tmp322 + tmp323 + tmp327;
double tmp329 = tmp75*tmp328;
double tmp330 = tmp239 + tmp329;
double tmp331 = 4*tmp281*tmp4;
double tmp332 = -2*tmp283*tmp5;
double tmp333 = 4*tmp285*tmp7;
double tmp334 = tmp331 + tmp332 + tmp333;
double tmp335 = 4*tmp285*tmp45;
double tmp336 = 4*tmp281*tmp43;
double tmp337 = tmp283*tmp48;
double tmp338 = tmp335 + tmp336 + tmp337;
double tmp339 = 0.317*tmp59*tmp89*tmp51*tmp179*tmp56;
double tmp340 = 0.634*tmp59*tmp89*tmp107*tmp77;
double tmp341 = 0.317*tmp58*tmp59*tmp76*tmp55*tmp193*tmp119;
double tmp342 = 0.634*tmp58*tmp59*tmp76*tmp179*tmp93;
double tmp343 = 0.634*tmp59*tmp76*tmp55*tmp185;
double tmp344 = 0.634*tmp59*tmp51*tmp77*tmp197;
double tmp345 = tmp339 + tmp340 + tmp341 + tmp342 + tmp343 + tmp344;
double tmp346 = tmp75*tmp345;
double tmp347 = tmp167 + tmp346;
double tmp348 = 4*tmp285*tmp31;
double tmp349 = 2*tmp283*tmp34;
double tmp350 = 2*tmp281*tmp37;
double tmp351 = tmp348 + tmp349 + tmp350;
double tmp352 = 2*tmp73*tmp5;
double tmp353 = 0.634*tmp59*tmp128*tmp29*tmp179*tmp79;
double tmp354 = -0.317*tmp58*tmp59*tmp76*tmp51*tmp40*tmp179*tmp79*tmp56;
double tmp355 = 0.317*tmp58*tmp59*tmp76*tmp51*tmp40*tmp190*tmp130*tmp77;
double tmp356 = -0.634*tmp58*tmp59*tmp76*tmp177*tmp51*tmp79*tmp77;
double tmp357 = -0.634*tmp58*tmp59*tmp76*tmp107*tmp40*tmp79*tmp77;
double tmp358 = -0.317*tmp59*tmp128*tmp29*tmp190*tmp130*tmp55;
double tmp359 = 0.634*tmp59*tmp128*tmp171*tmp79*tmp55;
double tmp360 = 0.634*tmp59*tmp126*tmp29*tmp79*tmp55*tmp182;
double tmp361 = 0.317*tmp59*tmp89*tmp40*tmp79*tmp55*tmp193*tmp119;
double tmp362 = 0.634*tmp59*tmp89*tmp40*tmp179*tmp79*tmp93;
double tmp363 = -0.317*tmp59*tmp89*tmp40*tmp190*tmp130*tmp55*tmp93;
double tmp364 = 0.634*tmp59*tmp89*tmp177*tmp79*tmp55*tmp93;
double tmp365 = -0.634*tmp59*tmp76*tmp51*tmp40*tmp79*tmp77*tmp119*tmp185;
double tmp366 = 0.634*tmp59*tmp40*tmp79*tmp55*tmp93*tmp197;
double tmp367 = tmp353 + tmp354 + tmp355 + tmp356 + tmp357 + tmp358 + tmp359 + tmp360 + tmp361 + tmp362 + tmp363 + tmp364 + tmp365 + tmp366;
double tmp368 = tmp75*tmp367;
double tmp369 = tmp352 + tmp368;
double tmp370 = 2*tmp283*tmp20;
double tmp371 = 4*tmp281*tmp23;
double tmp372 = 2*tmp285*tmp26;
double tmp373 = tmp370 + tmp371 + tmp372;
double tmp374 = -0.634*tmp59*tmp128*tmp40*tmp179*tmp79;
double tmp375 = -0.317*tmp58*tmp59*tmp76*tmp29*tmp51*tmp179*tmp79*tmp56;
double tmp376 = 0.317*tmp58*tmp59*tmp76*tmp29*tmp51*tmp190*tmp130*tmp77;
double tmp377 = -0.634*tmp58*tmp59*tmp76*tmp107*tmp29*tmp79*tmp77;
double tmp378 = 0.317*tmp59*tmp128*tmp40*tmp190*tmp130*tmp55;
double tmp379 = -0.634*tmp59*tmp128*tmp177*tmp79*tmp55;
double tmp380 = -0.634*tmp59*tmp126*tmp40*tmp79*tmp55*tmp182;
double tmp381 = 0.317*tmp59*tmp89*tmp29*tmp79*tmp55*tmp193*tmp119;
double tmp382 = 0.634*tmp59*tmp89*tmp29*tmp179*tmp79*tmp93;
double tmp383 = -0.317*tmp59*tmp89*tmp29*tmp190*tmp130*tmp55*tmp93;
double tmp384 = -0.634*tmp59*tmp76*tmp29*tmp51*tmp79*tmp77*tmp119*tmp185;
double tmp385 = 0.634*tmp59*tmp29*tmp79*tmp55*tmp93*tmp197;
double tmp386 = tmp141*tmp142*tmp179;
double tmp387 = (tmp143*tmp139*tmp144*tmp179*tmp56*tmp145)/2.;
double tmp388 = tmp386 + tmp387;
double tmp389 = 1.268*tmp140*tmp388;
double tmp390 = tmp374 + tmp375 + tmp376 + tmp377 + tmp264 + tmp378 + tmp379 + tmp380 + tmp381 + tmp382 + tmp383 + tmp269 + tmp384 + tmp385 + tmp389;
double tmp391 = tmp75*tmp390;
double tmp392 = tmp224 + tmp391;
double tmp393 = 4*tmp285*tmp5;
double tmp394 = 2*tmp283*tmp7;
double tmp395 = 4*tmp281*tmp6;
double tmp396 = tmp393 + tmp394 + tmp395;
double tmp397 = 4*tmp285*tmp4;
double tmp398 = -4*tmp281*tmp7;
double tmp399 = 2*tmp283*tmp6;
double tmp400 = tmp397 + tmp398 + tmp399;
double tmp401 = 0.317*tmp59*tmp89*tmp51*tmp232*tmp56;
double tmp402 = 0.634*tmp59*tmp89*tmp171*tmp77;
double tmp403 = 0.317*tmp58*tmp59*tmp76*tmp55*tmp244*tmp119;
double tmp404 = 0.634*tmp58*tmp59*tmp76*tmp232*tmp93;
double tmp405 = 0.634*tmp59*tmp76*tmp55*tmp238;
double tmp406 = 0.634*tmp59*tmp51*tmp77*tmp249;
double tmp407 = tmp401 + tmp402 + tmp403 + tmp404 + tmp405 + tmp406;
double tmp408 = tmp75*tmp407;
double tmp409 = tmp224 + tmp408;
double tmp410 = 0.634*tmp59*tmp128*tmp29*tmp232*tmp79;
double tmp411 = -0.317*tmp58*tmp59*tmp76*tmp51*tmp40*tmp232*tmp79*tmp56;
double tmp412 = 0.317*tmp58*tmp59*tmp76*tmp51*tmp40*tmp241*tmp130*tmp77;
double tmp413 = -0.634*tmp58*tmp59*tmp76*tmp171*tmp40*tmp79*tmp77;
double tmp414 = -0.317*tmp59*tmp128*tmp29*tmp241*tmp130*tmp55;
double tmp415 = 0.634*tmp59*tmp128*tmp228*tmp79*tmp55;
double tmp416 = 0.634*tmp59*tmp126*tmp29*tmp79*tmp55*tmp235;
double tmp417 = 0.317*tmp59*tmp89*tmp40*tmp79*tmp55*tmp244*tmp119;
double tmp418 = 0.634*tmp59*tmp89*tmp40*tmp232*tmp79*tmp93;
double tmp419 = -0.317*tmp59*tmp89*tmp40*tmp241*tmp130*tmp55*tmp93;
double tmp420 = -0.634*tmp59*tmp76*tmp51*tmp40*tmp79*tmp77*tmp119*tmp238;
double tmp421 = 0.634*tmp59*tmp40*tmp79*tmp55*tmp93*tmp249;
double tmp422 = tmp410 + tmp411 + tmp412 + tmp240 + tmp413 + tmp414 + tmp415 + tmp416 + tmp417 + tmp418 + tmp419 + tmp245 + tmp420 + tmp421;
double tmp423 = tmp75*tmp422;
double tmp424 = tmp239 + tmp423;
double tmp425 = 2*tmp73*tmp4;
double tmp426 = -0.634*tmp59*tmp128*tmp40*tmp232*tmp79;
double tmp427 = -0.317*tmp58*tmp59*tmp76*tmp29*tmp51*tmp232*tmp79*tmp56;
double tmp428 = 0.317*tmp58*tmp59*tmp76*tmp29*tmp51*tmp241*tmp130*tmp77;
double tmp429 = -0.634*tmp58*tmp59*tmp76*tmp171*tmp29*tmp79*tmp77;
double tmp430 = -0.634*tmp58*tmp59*tmp76*tmp228*tmp51*tmp79*tmp77;
double tmp431 = 0.317*tmp59*tmp128*tmp40*tmp241*tmp130*tmp55;
double tmp432 = -0.634*tmp59*tmp128*tmp101*tmp79*tmp55;
double tmp433 = -0.634*tmp59*tmp126*tmp40*tmp79*tmp55*tmp235;
double tmp434 = 0.317*tmp59*tmp89*tmp29*tmp79*tmp55*tmp244*tmp119;
double tmp435 = 0.634*tmp59*tmp89*tmp29*tmp232*tmp79*tmp93;
double tmp436 = -0.317*tmp59*tmp89*tmp29*tmp241*tmp130*tmp55*tmp93;
double tmp437 = 0.634*tmp59*tmp89*tmp228*tmp79*tmp55*tmp93;
double tmp438 = -0.634*tmp59*tmp76*tmp29*tmp51*tmp79*tmp77*tmp119*tmp238;
double tmp439 = 0.634*tmp59*tmp29*tmp79*tmp55*tmp93*tmp249;
double tmp440 = tmp141*tmp142*tmp232;
double tmp441 = (tmp143*tmp139*tmp144*tmp232*tmp56*tmp145)/2.;
double tmp442 = tmp440 + tmp441;
double tmp443 = 1.268*tmp140*tmp442;
double tmp444 = tmp426 + tmp427 + tmp428 + tmp429 + tmp430 + tmp431 + tmp432 + tmp433 + tmp434 + tmp435 + tmp436 + tmp437 + tmp438 + tmp439 + tmp443;
double tmp445 = tmp75*tmp444;
double tmp446 = tmp425 + tmp445;
double tmp447 = -2*tmp73*tmp7;
double tmp448 = 0.317*tmp59*tmp89*tmp51*tmp257*tmp56;
double tmp449 = 0.634*tmp59*tmp89*tmp253*tmp77;
double tmp450 = 0.317*tmp58*tmp59*tmp76*tmp55*tmp268*tmp119;
double tmp451 = 0.634*tmp58*tmp59*tmp76*tmp257*tmp93;
double tmp452 = 0.634*tmp59*tmp76*tmp55*tmp263;
double tmp453 = 0.634*tmp59*tmp51*tmp77*tmp273;
double tmp454 = tmp448 + tmp449 + tmp450 + tmp451 + tmp452 + tmp453;
double tmp455 = tmp75*tmp454;
double tmp456 = tmp447 + tmp455;
double tmp457 = 0.634*tmp59*tmp128*tmp29*tmp257*tmp79;
double tmp458 = -0.317*tmp58*tmp59*tmp76*tmp51*tmp40*tmp257*tmp79*tmp56;
double tmp459 = 0.317*tmp58*tmp59*tmp76*tmp51*tmp40*tmp265*tmp130*tmp77;
double tmp460 = -0.634*tmp58*tmp59*tmp76*tmp253*tmp40*tmp79*tmp77;
double tmp461 = -0.317*tmp59*tmp128*tmp29*tmp265*tmp130*tmp55;
double tmp462 = 0.634*tmp59*tmp128*tmp97*tmp79*tmp55;
double tmp463 = 0.634*tmp59*tmp126*tmp29*tmp79*tmp55*tmp260;
double tmp464 = 0.317*tmp59*tmp89*tmp40*tmp79*tmp55*tmp268*tmp119;
double tmp465 = 0.634*tmp59*tmp89*tmp40*tmp257*tmp79*tmp93;
double tmp466 = -0.317*tmp59*tmp89*tmp40*tmp265*tmp130*tmp55*tmp93;
double tmp467 = -0.634*tmp59*tmp76*tmp51*tmp40*tmp79*tmp77*tmp119*tmp263;
double tmp468 = 0.634*tmp59*tmp40*tmp79*tmp55*tmp93*tmp273;
double tmp469 = tmp457 + tmp458 + tmp459 + tmp264 + tmp460 + tmp461 + tmp462 + tmp463 + tmp464 + tmp465 + tmp466 + tmp269 + tmp467 + tmp468;
double tmp470 = tmp75*tmp469;
double tmp471 = tmp224 + tmp470;
double tmp472 = -0.634*tmp59*tmp128*tmp40*tmp257*tmp79;
double tmp473 = -0.317*tmp58*tmp59*tmp76*tmp29*tmp51*tmp257*tmp79*tmp56;
double tmp474 = 0.317*tmp58*tmp59*tmp76*tmp29*tmp51*tmp265*tmp130*tmp77;
double tmp475 = -0.634*tmp58*tmp59*tmp76*tmp253*tmp29*tmp79*tmp77;
double tmp476 = -0.634*tmp58*tmp59*tmp76*tmp97*tmp51*tmp79*tmp77;
double tmp477 = 0.317*tmp59*tmp128*tmp40*tmp265*tmp130*tmp55;
double tmp478 = -0.634*tmp59*tmp128*tmp171*tmp79*tmp55;
double tmp479 = -0.634*tmp59*tmp126*tmp40*tmp79*tmp55*tmp260;
double tmp480 = 0.317*tmp59*tmp89*tmp29*tmp79*tmp55*tmp268*tmp119;
double tmp481 = 0.634*tmp59*tmp89*tmp29*tmp257*tmp79*tmp93;
double tmp482 = -0.317*tmp59*tmp89*tmp29*tmp265*tmp130*tmp55*tmp93;
double tmp483 = 0.634*tmp59*tmp89*tmp97*tmp79*tmp55*tmp93;
double tmp484 = -0.634*tmp59*tmp76*tmp29*tmp51*tmp79*tmp77*tmp119*tmp263;
double tmp485 = 0.634*tmp59*tmp29*tmp79*tmp55*tmp93*tmp273;
double tmp486 = tmp141*tmp142*tmp257;
double tmp487 = (tmp143*tmp139*tmp144*tmp257*tmp56*tmp145)/2.;
double tmp488 = tmp486 + tmp487;
double tmp489 = 1.268*tmp140*tmp488;
double tmp490 = tmp472 + tmp473 + tmp474 + tmp475 + tmp476 + tmp477 + tmp478 + tmp479 + tmp480 + tmp481 + tmp482 + tmp483 + tmp484 + tmp485 + tmp489;
double tmp491 = tmp75*tmp490;
double tmp492 = tmp274 + tmp491;
double tmp493 = 2*tmp283*tmp4;
double tmp494 = 4*tmp281*tmp5;
double tmp495 = -4*tmp285*tmp6;
double tmp496 = tmp493 + tmp494 + tmp495;
double tmp497 = tmp66 + tmp282 + tmp69 + tmp70;
double tmp498 = -(tmp0*tmp2);
double tmp499 = tmp498 + tmp280;
double tmp500 = tmp0*tmp1;
double tmp501 = tmp500 + tmp61;
double tmp502 = 2*tmp497*tmp4;
double tmp503 = -4*tmp499*tmp5;
double tmp504 = 4*tmp501*tmp7;
double tmp505 = tmp502 + tmp503 + tmp504;
double tmp506 = 4*tmp501*tmp45;
double tmp507 = 2*tmp497*tmp43;
double tmp508 = 2*tmp499*tmp48;
double tmp509 = tmp506 + tmp507 + tmp508;
double tmp510 = 4*tmp501*tmp31;
double tmp511 = 4*tmp499*tmp34;
double tmp512 = tmp497*tmp37;
double tmp513 = tmp510 + tmp511 + tmp512;
double tmp514 = 4*tmp499*tmp20;
double tmp515 = 2*tmp497*tmp23;
double tmp516 = 2*tmp501*tmp26;
double tmp517 = tmp514 + tmp515 + tmp516;
double tmp518 = 4*tmp501*tmp5;
double tmp519 = 4*tmp499*tmp7;
double tmp520 = 2*tmp497*tmp6;
double tmp521 = tmp518 + tmp519 + tmp520;
double tmp522 = 4*tmp501*tmp4;
double tmp523 = -2*tmp497*tmp7;
double tmp524 = 4*tmp499*tmp6;
double tmp525 = tmp522 + tmp523 + tmp524;
double tmp526 = 4*tmp499*tmp4;
double tmp527 = 2*tmp497*tmp5;
double tmp528 = -4*tmp501*tmp6;
double tmp529 = tmp526 + tmp527 + tmp528;
double tmp530 = ibd(2+_OFF);
double tmp531 = ibod(1+_OFF);
double tmp532 = ibd(3+_OFF);
double tmp533 = ibod(2+_OFF);
double tmp534 = ibod(3+_OFF);
double tmp535 = ibd(1+_OFF);
double tmp536 = cp(3+_OFF);
double tmp537 = mRoll(2+_OFF);
double tmp538 = mRoll(3+_OFF);
double tmp539 = x(37+_OFF);
double tmp540 = mRoll(4+_OFF);
double tmp541 = x(39+_OFF);
double tmp542 = tmp535*tmp530*tmp532;
double tmp543 = std::pow(tmp531,2);
double tmp544 = -(tmp530*tmp543);
double tmp545 = std::pow(tmp533,2);
double tmp546 = -(tmp532*tmp545);
double tmp547 = 2*tmp531*tmp533*tmp534;
double tmp548 = std::pow(tmp534,2);
double tmp549 = -(tmp535*tmp548);
double tmp550 = tmp542 + tmp544 + tmp546 + tmp547 + tmp549;
double tmp551 = 1/tmp550;
double tmp552 = cBar(1+_OFF);
double tmp553 = mPitch(3+_OFF);
double tmp554 = mPitch(4+_OFF);
double tmp555 = x(38+_OFF);
double tmp556 = mYaw(2+_OFF);
double tmp557 = mYaw(3+_OFF);
double tmp558 = -(tmp537*tmp119*tmp123);
double tmp559 = -0.25*(tmp536*tmp538*tmp109*tmp120*tmp539);
double tmp560 = (tmp536*tmp540*tmp109*tmp120*tmp541)/4.;
double tmp561 = tmp558 + tmp559 + tmp560;
double tmp562 = 0.634*tmp59*tmp536*tmp55*tmp561;
double tmp563 = -(tmp58*tmp537);
double tmp564 = (tmp536*tmp538*tmp56*tmp539)/2.;
double tmp565 = -0.5*(tmp536*tmp540*tmp56*tmp541);
double tmp566 = mRoll(1+_OFF);
double tmp567 = z(2+_OFF);
double tmp568 = tmp566*tmp567;
double tmp569 = tmp563 + tmp564 + tmp565 + tmp568;
double tmp570 = 0.634*tmp59*tmp536*tmp109*tmp569;
double tmp571 = tmp562 + tmp570;
double tmp572 = tmp553*tmp118;
double tmp573 = -0.25*(tmp552*tmp554*tmp109*tmp120*tmp555);
double tmp574 = tmp572 + tmp573;
double tmp575 = 0.634*tmp552*tmp59*tmp55*tmp574;
double tmp576 = mPitch(1+_OFF);
double tmp577 = -tmp576;
double tmp578 = tmp41*tmp553;
double tmp579 = (tmp552*tmp554*tmp56*tmp555)/2.;
double tmp580 = mPitch(2+_OFF);
double tmp581 = z(3+_OFF);
double tmp582 = -(tmp580*tmp581);
double tmp583 = tmp577 + tmp578 + tmp579 + tmp582;
double tmp584 = 0.634*tmp552*tmp59*tmp109*tmp583;
double tmp585 = tmp575 + tmp584;
double tmp586 = tmp531*tmp533;
double tmp587 = -(tmp535*tmp534);
double tmp588 = tmp586 + tmp587;
double tmp589 = tmp556*tmp119*tmp123;
double tmp590 = -0.25*(tmp536*tmp557*tmp109*tmp120*tmp541);
double tmp591 = tmp589 + tmp590;
double tmp592 = 0.634*tmp59*tmp536*tmp55*tmp591;
double tmp593 = tmp58*tmp556;
double tmp594 = (tmp536*tmp557*tmp56*tmp541)/2.;
double tmp595 = mYaw(1+_OFF);
double tmp596 = z(4+_OFF);
double tmp597 = -(tmp595*tmp596);
double tmp598 = tmp593 + tmp594 + tmp597;
double tmp599 = 0.634*tmp59*tmp536*tmp109*tmp598;
double tmp600 = tmp592 + tmp599;
double tmp601 = -(tmp532*tmp533);
double tmp602 = tmp531*tmp534;
double tmp603 = tmp601 + tmp602;
double tmp604 = -(tmp530*tmp531);
double tmp605 = tmp533*tmp534;
double tmp606 = tmp604 + tmp605;
double tmp607 = std::pow(tmp541,2);
double tmp608 = tmp535*tmp530;
double tmp609 = -tmp545;
double tmp610 = tmp608 + tmp609;
double tmp611 = std::pow(tmp539,2);
double tmp612 = std::pow(tmp555,2);
double tmp613 = -(tmp531*tmp539*tmp555);
double tmp614 = -(tmp534*tmp612);
double tmp615 = tmp533*tmp539*tmp541;
double tmp616 = tmp530*tmp555*tmp541;
double tmp617 = -(tmp532*tmp555*tmp541);
double tmp618 = tmp534*tmp607;
double tmp619 = 0.634*tmp59*tmp536*tmp55*tmp569;
double tmp620 = tmp613 + tmp614 + tmp615 + tmp616 + tmp617 + tmp618 + tmp619;
double tmp621 = tmp535*tmp532;
double tmp622 = -tmp543;
double tmp623 = tmp621 + tmp622;
double tmp624 = tmp531*tmp611;
double tmp625 = tmp534*tmp539*tmp555;
double tmp626 = -(tmp535*tmp539*tmp541);
double tmp627 = tmp532*tmp539*tmp541;
double tmp628 = -(tmp533*tmp555*tmp541);
double tmp629 = -(tmp531*tmp607);
double tmp630 = 0.634*tmp552*tmp59*tmp55*tmp583;
double tmp631 = tmp624 + tmp625 + tmp626 + tmp627 + tmp628 + tmp629 + tmp630;
double tmp632 = -(tmp533*tmp611);
double tmp633 = tmp535*tmp539*tmp555;
double tmp634 = -(tmp530*tmp539*tmp555);
double tmp635 = tmp533*tmp612;
double tmp636 = -(tmp534*tmp539*tmp541);
double tmp637 = tmp531*tmp555*tmp541;
double tmp638 = 0.634*tmp59*tmp536*tmp55*tmp598;
double tmp639 = tmp632 + tmp633 + tmp634 + tmp635 + tmp636 + tmp637 + tmp638;
double tmp640 = tmp530*tmp532;
double tmp641 = -tmp548;
double tmp642 = tmp640 + tmp641;
double tmp643 = -(tmp537*tmp119*tmp185);
double tmp644 = -0.25*(tmp536*tmp538*tmp179*tmp120*tmp539);
double tmp645 = (tmp536*tmp540*tmp179*tmp120*tmp541)/4.;
double tmp646 = tmp643 + tmp644 + tmp645;
double tmp647 = 0.634*tmp59*tmp536*tmp55*tmp646;
double tmp648 = 0.634*tmp59*tmp536*tmp179*tmp569;
double tmp649 = tmp647 + tmp648;
double tmp650 = tmp553*tmp182;
double tmp651 = -0.25*(tmp552*tmp554*tmp179*tmp120*tmp555);
double tmp652 = tmp650 + tmp651;
double tmp653 = 0.634*tmp552*tmp59*tmp55*tmp652;
double tmp654 = 0.634*tmp552*tmp59*tmp179*tmp583;
double tmp655 = tmp653 + tmp654;
double tmp656 = tmp556*tmp119*tmp185;
double tmp657 = -0.25*(tmp536*tmp557*tmp179*tmp120*tmp541);
double tmp658 = tmp656 + tmp657;
double tmp659 = 0.634*tmp59*tmp536*tmp55*tmp658;
double tmp660 = 0.634*tmp59*tmp536*tmp179*tmp598;
double tmp661 = tmp659 + tmp660;
double tmp662 = -4*tmp65*tmp4;
double tmp663 = -4*tmp62*tmp5;
double tmp664 = 2*tmp72*tmp6;
double tmp665 = tmp662 + tmp663 + tmp664;
double tmp666 = tmp606*tmp551*tmp620;
double tmp667 = tmp588*tmp551*tmp631;
double tmp668 = tmp610*tmp551*tmp639;
double tmp669 = tmp666 + tmp667 + tmp668;
double tmp670 = tmp603*tmp551*tmp620;
double tmp671 = tmp623*tmp551*tmp631;
double tmp672 = tmp588*tmp551*tmp639;
double tmp673 = tmp670 + tmp671 + tmp672;
double tmp674 = tmp642*tmp551*tmp620;
double tmp675 = tmp603*tmp551*tmp631;
double tmp676 = tmp606*tmp551*tmp639;
double tmp677 = tmp674 + tmp675 + tmp676;
double tmp678 = -(tmp537*tmp119*tmp238);
double tmp679 = -0.25*(tmp536*tmp538*tmp232*tmp120*tmp539);
double tmp680 = (tmp536*tmp540*tmp232*tmp120*tmp541)/4.;
double tmp681 = tmp678 + tmp679 + tmp680;
double tmp682 = 0.634*tmp59*tmp536*tmp55*tmp681;
double tmp683 = 0.634*tmp59*tmp536*tmp232*tmp569;
double tmp684 = tmp682 + tmp683;
double tmp685 = tmp553*tmp235;
double tmp686 = -0.25*(tmp552*tmp554*tmp232*tmp120*tmp555);
double tmp687 = tmp685 + tmp686;
double tmp688 = 0.634*tmp552*tmp59*tmp55*tmp687;
double tmp689 = 0.634*tmp552*tmp59*tmp232*tmp583;
double tmp690 = tmp688 + tmp689;
double tmp691 = tmp556*tmp119*tmp238;
double tmp692 = -0.25*(tmp536*tmp557*tmp232*tmp120*tmp541);
double tmp693 = tmp691 + tmp692;
double tmp694 = 0.634*tmp59*tmp536*tmp55*tmp693;
double tmp695 = 0.634*tmp59*tmp536*tmp232*tmp598;
double tmp696 = tmp694 + tmp695;
double tmp697 = -4*tmp62*tmp4;
double tmp698 = 4*tmp65*tmp5;
double tmp699 = -2*tmp72*tmp7;
double tmp700 = tmp697 + tmp698 + tmp699;
double tmp701 = -(tmp537*tmp119*tmp263);
double tmp702 = -0.25*(tmp536*tmp538*tmp257*tmp120*tmp539);
double tmp703 = (tmp536*tmp540*tmp257*tmp120*tmp541)/4.;
double tmp704 = tmp701 + tmp702 + tmp703;
double tmp705 = 0.634*tmp59*tmp536*tmp55*tmp704;
double tmp706 = 0.634*tmp59*tmp536*tmp257*tmp569;
double tmp707 = tmp705 + tmp706;
double tmp708 = tmp553*tmp260;
double tmp709 = -0.25*(tmp552*tmp554*tmp257*tmp120*tmp555);
double tmp710 = tmp708 + tmp709;
double tmp711 = 0.634*tmp552*tmp59*tmp55*tmp710;
double tmp712 = 0.634*tmp552*tmp59*tmp257*tmp583;
double tmp713 = tmp711 + tmp712;
double tmp714 = tmp556*tmp119*tmp263;
double tmp715 = -0.25*(tmp536*tmp557*tmp257*tmp120*tmp541);
double tmp716 = tmp714 + tmp715;
double tmp717 = 0.634*tmp59*tmp536*tmp55*tmp716;
double tmp718 = 0.634*tmp59*tmp536*tmp257*tmp598;
double tmp719 = tmp717 + tmp718;
double tmp720 = -2*tmp72*tmp4;
double tmp721 = 4*tmp62*tmp7;
double tmp722 = -4*tmp65*tmp6;
double tmp723 = tmp720 + tmp721 + tmp722;
double tmp724 = tmp606*tmp551*tmp571;
double tmp725 = tmp588*tmp551*tmp585;
double tmp726 = tmp610*tmp551*tmp600;
double tmp727 = tmp724 + tmp725 + tmp726;
double tmp728 = tmp603*tmp551*tmp571;
double tmp729 = tmp623*tmp551*tmp585;
double tmp730 = tmp588*tmp551*tmp600;
double tmp731 = tmp728 + tmp729 + tmp730;
double tmp732 = tmp642*tmp551*tmp571;
double tmp733 = tmp603*tmp551*tmp585;
double tmp734 = tmp606*tmp551*tmp600;
double tmp735 = tmp732 + tmp733 + tmp734;
double tmp736 = tmp606*tmp551*tmp649;
double tmp737 = tmp588*tmp551*tmp655;
double tmp738 = tmp610*tmp551*tmp661;
double tmp739 = tmp736 + tmp737 + tmp738;
double tmp740 = tmp603*tmp551*tmp649;
double tmp741 = tmp623*tmp551*tmp655;
double tmp742 = tmp588*tmp551*tmp661;
double tmp743 = tmp740 + tmp741 + tmp742;
double tmp744 = tmp642*tmp551*tmp649;
double tmp745 = tmp603*tmp551*tmp655;
double tmp746 = tmp606*tmp551*tmp661;
double tmp747 = tmp744 + tmp745 + tmp746;
double tmp748 = -2*tmp283*tmp4;
double tmp749 = -4*tmp281*tmp5;
double tmp750 = 4*tmp285*tmp6;
double tmp751 = tmp748 + tmp749 + tmp750;
double tmp752 = tmp606*tmp551*tmp684;
double tmp753 = tmp588*tmp551*tmp690;
double tmp754 = tmp610*tmp551*tmp696;
double tmp755 = tmp752 + tmp753 + tmp754;
double tmp756 = tmp603*tmp551*tmp684;
double tmp757 = tmp623*tmp551*tmp690;
double tmp758 = tmp588*tmp551*tmp696;
double tmp759 = tmp756 + tmp757 + tmp758;
double tmp760 = tmp642*tmp551*tmp684;
double tmp761 = tmp603*tmp551*tmp690;
double tmp762 = tmp606*tmp551*tmp696;
double tmp763 = tmp760 + tmp761 + tmp762;
double tmp764 = -4*tmp281*tmp4;
double tmp765 = 2*tmp283*tmp5;
double tmp766 = -4*tmp285*tmp7;
double tmp767 = tmp764 + tmp765 + tmp766;
double tmp768 = tmp606*tmp551*tmp707;
double tmp769 = tmp588*tmp551*tmp713;
double tmp770 = tmp610*tmp551*tmp719;
double tmp771 = tmp768 + tmp769 + tmp770;
double tmp772 = tmp603*tmp551*tmp707;
double tmp773 = tmp623*tmp551*tmp713;
double tmp774 = tmp588*tmp551*tmp719;
double tmp775 = tmp772 + tmp773 + tmp774;
double tmp776 = tmp642*tmp551*tmp707;
double tmp777 = tmp603*tmp551*tmp713;
double tmp778 = tmp606*tmp551*tmp719;
double tmp779 = tmp776 + tmp777 + tmp778;
double tmp780 = -4*tmp285*tmp4;
double tmp781 = 4*tmp281*tmp7;
double tmp782 = -2*tmp283*tmp6;
double tmp783 = tmp780 + tmp781 + tmp782;
double tmp784 = -4*tmp499*tmp4;
double tmp785 = -2*tmp497*tmp5;
double tmp786 = 4*tmp501*tmp6;
double tmp787 = tmp784 + tmp785 + tmp786;
double tmp788 = -2*tmp497*tmp4;
double tmp789 = 4*tmp499*tmp5;
double tmp790 = -4*tmp501*tmp7;
double tmp791 = tmp788 + tmp789 + tmp790;
double tmp792 = -4*tmp501*tmp4;
double tmp793 = 2*tmp497*tmp7;
double tmp794 = -4*tmp499*tmp6;
double tmp795 = tmp792 + tmp793 + tmp794;
J(1+_OFF,1+_OFF) = -(tmp278*tmp155) - tmp149*tmp162 - tmp166*tmp294 - tmp189*tmp311 - tmp201*tmp330 - tmp223*tmp215;
J(1+_OFF,2+_OFF) = -(tmp149*tmp155) - tmp665*tmp162 - tmp166*tmp347 - tmp189*tmp369 - tmp201*tmp392 - tmp219*tmp215;
J(1+_OFF,3+_OFF) = -(tmp219*tmp155) - tmp223*tmp162 - tmp166*tmp409 - tmp189*tmp424 - tmp201*tmp446 - tmp700*tmp215;
J(1+_OFF,4+_OFF) = -(tmp723*tmp155) - tmp219*tmp162 - tmp166*tmp456 - tmp189*tmp471 - tmp201*tmp492 - tmp278*tmp215;
J(2+_OFF,1+_OFF) = -(tmp496*tmp155) - tmp334*tmp162 - tmp338*tmp294 - tmp351*tmp311 - tmp373*tmp330 - tmp400*tmp215;
J(2+_OFF,2+_OFF) = -(tmp334*tmp155) - tmp751*tmp162 - tmp338*tmp347 - tmp351*tmp369 - tmp373*tmp392 - tmp396*tmp215;
J(2+_OFF,3+_OFF) = -(tmp396*tmp155) - tmp400*tmp162 - tmp338*tmp409 - tmp351*tmp424 - tmp373*tmp446 - tmp767*tmp215;
J(2+_OFF,4+_OFF) = -(tmp783*tmp155) - tmp396*tmp162 - tmp338*tmp456 - tmp351*tmp471 - tmp373*tmp492 - tmp496*tmp215;
J(3+_OFF,1+_OFF) = -(tmp529*tmp155) - tmp505*tmp162 - tmp509*tmp294 - tmp513*tmp311 - tmp517*tmp330 - tmp525*tmp215;
J(3+_OFF,2+_OFF) = -(tmp505*tmp155) - tmp787*tmp162 - tmp509*tmp347 - tmp513*tmp369 - tmp517*tmp392 - tmp521*tmp215;
J(3+_OFF,3+_OFF) = -(tmp521*tmp155) - tmp525*tmp162 - tmp509*tmp409 - tmp513*tmp424 - tmp517*tmp446 - tmp791*tmp215;
J(3+_OFF,4+_OFF) = -(tmp795*tmp155) - tmp521*tmp162 - tmp509*tmp456 - tmp513*tmp471 - tmp517*tmp492 - tmp529*tmp215;
J(4+_OFF,1+_OFF) = -(tmp189*tmp727) - tmp166*tmp731 - tmp201*tmp735 - tmp149*tmp669 - tmp278*tmp673 - tmp223*tmp677;
J(4+_OFF,2+_OFF) = -(tmp189*tmp739) - tmp166*tmp743 - tmp201*tmp747 - tmp665*tmp669 - tmp149*tmp673 - tmp219*tmp677;
J(4+_OFF,3+_OFF) = -(tmp189*tmp755) - tmp166*tmp759 - tmp201*tmp763 - tmp223*tmp669 - tmp219*tmp673 - tmp700*tmp677;
J(4+_OFF,4+_OFF) = -(tmp189*tmp771) - tmp166*tmp775 - tmp201*tmp779 - tmp219*tmp669 - tmp723*tmp673 - tmp278*tmp677;
J(5+_OFF,1+_OFF) = -(tmp351*tmp727) - tmp338*tmp731 - tmp373*tmp735 - tmp334*tmp669 - tmp496*tmp673 - tmp400*tmp677;
J(5+_OFF,2+_OFF) = -(tmp351*tmp739) - tmp338*tmp743 - tmp373*tmp747 - tmp751*tmp669 - tmp334*tmp673 - tmp396*tmp677;
J(5+_OFF,3+_OFF) = -(tmp351*tmp755) - tmp338*tmp759 - tmp373*tmp763 - tmp400*tmp669 - tmp396*tmp673 - tmp767*tmp677;
J(5+_OFF,4+_OFF) = -(tmp351*tmp771) - tmp338*tmp775 - tmp373*tmp779 - tmp396*tmp669 - tmp783*tmp673 - tmp496*tmp677;
J(6+_OFF,1+_OFF) = -(tmp513*tmp727) - tmp509*tmp731 - tmp517*tmp735 - tmp505*tmp669 - tmp529*tmp673 - tmp525*tmp677;
J(6+_OFF,2+_OFF) = -(tmp513*tmp739) - tmp509*tmp743 - tmp517*tmp747 - tmp787*tmp669 - tmp505*tmp673 - tmp521*tmp677;
J(6+_OFF,3+_OFF) = -(tmp513*tmp755) - tmp509*tmp759 - tmp517*tmp763 - tmp525*tmp669 - tmp521*tmp673 - tmp791*tmp677;
J(6+_OFF,4+_OFF) = -(tmp513*tmp771) - tmp509*tmp775 - tmp517*tmp779 - tmp521*tmp669 - tmp795*tmp673 - tmp529*tmp677;
